{"mappings":"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","sources":["<anon>","src/main.js","node_modules/redom/dist/redom.cjs","node_modules/cropperjs/dist/cropper.js"],"sourcesContent":["\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $4ee2d5169fef8bbb$exports = {};\n(function(global, factory) {\n    factory($4ee2d5169fef8bbb$exports);\n})($4ee2d5169fef8bbb$exports, function(exports1) {\n    \"use strict\";\n    function createElement(query, ns) {\n        var ref = parse(query);\n        var tag = ref.tag;\n        var id = ref.id;\n        var className = ref.className;\n        var element = ns ? document.createElementNS(ns, tag) : document.createElement(tag);\n        if (id) element.id = id;\n        if (className) {\n            if (ns) element.setAttribute(\"class\", className);\n            else element.className = className;\n        }\n        return element;\n    }\n    function parse(query) {\n        var chunks = query.split(/([.#])/);\n        var className = \"\";\n        var id = \"\";\n        for(var i = 1; i < chunks.length; i += 2)switch(chunks[i]){\n            case \".\":\n                className += \" \" + chunks[i + 1];\n                break;\n            case \"#\":\n                id = chunks[i + 1];\n        }\n        return {\n            className: className.trim(),\n            tag: chunks[0] || \"div\",\n            id: id\n        };\n    }\n    function html(query) {\n        var args = [], len = arguments.length - 1;\n        while(len-- > 0)args[len] = arguments[len + 1];\n        var element;\n        var type = typeof query;\n        if (type === \"string\") element = createElement(query);\n        else if (type === \"function\") {\n            var Query = query;\n            element = new (Function.prototype.bind.apply(Query, [\n                null\n            ].concat(args)));\n        } else throw new Error(\"At least one argument required\");\n        parseArgumentsInternal(getEl(element), args, true);\n        return element;\n    }\n    var el = html;\n    var h = html;\n    html.extend = function extendHtml() {\n        var args = [], len = arguments.length;\n        while(len--)args[len] = arguments[len];\n        return html.bind.apply(html, [\n            this\n        ].concat(args));\n    };\n    function unmount(parent, child) {\n        var parentEl = getEl(parent);\n        var childEl = getEl(child);\n        if (child === childEl && childEl.__redom_view) // try to look up the view if not provided\n        child = childEl.__redom_view;\n        if (childEl.parentNode) {\n            doUnmount(child, childEl, parentEl);\n            parentEl.removeChild(childEl);\n        }\n        return child;\n    }\n    function doUnmount(child, childEl, parentEl) {\n        var hooks = childEl.__redom_lifecycle;\n        if (hooksAreEmpty(hooks)) {\n            childEl.__redom_lifecycle = {};\n            return;\n        }\n        var traverse = parentEl;\n        if (childEl.__redom_mounted) trigger(childEl, \"onunmount\");\n        while(traverse){\n            var parentHooks = traverse.__redom_lifecycle || {};\n            for(var hook in hooks)if (parentHooks[hook]) parentHooks[hook] -= hooks[hook];\n            if (hooksAreEmpty(parentHooks)) traverse.__redom_lifecycle = null;\n            traverse = traverse.parentNode;\n        }\n    }\n    function hooksAreEmpty(hooks) {\n        if (hooks == null) return true;\n        for(var key in hooks){\n            if (hooks[key]) return false;\n        }\n        return true;\n    }\n    /* global Node, ShadowRoot */ var hookNames = [\n        \"onmount\",\n        \"onremount\",\n        \"onunmount\"\n    ];\n    var shadowRootAvailable = typeof window !== \"undefined\" && \"ShadowRoot\" in window;\n    function mount(parent, child, before, replace) {\n        var parentEl = getEl(parent);\n        var childEl = getEl(child);\n        if (child === childEl && childEl.__redom_view) // try to look up the view if not provided\n        child = childEl.__redom_view;\n        if (child !== childEl) childEl.__redom_view = child;\n        var wasMounted = childEl.__redom_mounted;\n        var oldParent = childEl.parentNode;\n        if (wasMounted && oldParent !== parentEl) doUnmount(child, childEl, oldParent);\n        if (before != null) {\n            if (replace) {\n                var beforeEl = getEl(before);\n                if (beforeEl.__redom_mounted) trigger(beforeEl, \"onunmount\");\n                parentEl.replaceChild(childEl, beforeEl);\n            } else parentEl.insertBefore(childEl, getEl(before));\n        } else parentEl.appendChild(childEl);\n        doMount(child, childEl, parentEl, oldParent);\n        return child;\n    }\n    function trigger(el, eventName) {\n        if (eventName === \"onmount\" || eventName === \"onremount\") el.__redom_mounted = true;\n        else if (eventName === \"onunmount\") el.__redom_mounted = false;\n        var hooks = el.__redom_lifecycle;\n        if (!hooks) return;\n        var view = el.__redom_view;\n        var hookCount = 0;\n        view && view[eventName] && view[eventName]();\n        for(var hook in hooks)if (hook) hookCount++;\n        if (hookCount) {\n            var traverse = el.firstChild;\n            while(traverse){\n                var next = traverse.nextSibling;\n                trigger(traverse, eventName);\n                traverse = next;\n            }\n        }\n    }\n    function doMount(child, childEl, parentEl, oldParent) {\n        var hooks = childEl.__redom_lifecycle || (childEl.__redom_lifecycle = {});\n        var remount = parentEl === oldParent;\n        var hooksFound = false;\n        for(var i = 0, list = hookNames; i < list.length; i += 1){\n            var hookName = list[i];\n            if (!remount) {\n                // if already mounted, skip this phase\n                if (child !== childEl) // only Views can have lifecycle events\n                {\n                    if (hookName in child) hooks[hookName] = (hooks[hookName] || 0) + 1;\n                }\n            }\n            if (hooks[hookName]) hooksFound = true;\n        }\n        if (!hooksFound) {\n            childEl.__redom_lifecycle = {};\n            return;\n        }\n        var traverse = parentEl;\n        var triggered = false;\n        if (remount || traverse && traverse.__redom_mounted) {\n            trigger(childEl, remount ? \"onremount\" : \"onmount\");\n            triggered = true;\n        }\n        while(traverse){\n            var parent = traverse.parentNode;\n            var parentHooks = traverse.__redom_lifecycle || (traverse.__redom_lifecycle = {});\n            for(var hook in hooks)parentHooks[hook] = (parentHooks[hook] || 0) + hooks[hook];\n            if (triggered) break;\n            else {\n                if (traverse.nodeType === Node.DOCUMENT_NODE || shadowRootAvailable && traverse instanceof ShadowRoot || parent && parent.__redom_mounted) {\n                    trigger(traverse, remount ? \"onremount\" : \"onmount\");\n                    triggered = true;\n                }\n                traverse = parent;\n            }\n        }\n    }\n    function setStyle(view, arg1, arg2) {\n        var el = getEl(view);\n        if (typeof arg1 === \"object\") for(var key in arg1)setStyleValue(el, key, arg1[key]);\n        else setStyleValue(el, arg1, arg2);\n    }\n    function setStyleValue(el, key, value) {\n        el.style[key] = value == null ? \"\" : value;\n    }\n    /* global SVGElement */ var xlinkns = \"http://www.w3.org/1999/xlink\";\n    function setAttr(view, arg1, arg2) {\n        setAttrInternal(view, arg1, arg2);\n    }\n    function setAttrInternal(view, arg1, arg2, initial) {\n        var el = getEl(view);\n        var isObj = typeof arg1 === \"object\";\n        if (isObj) for(var key in arg1)setAttrInternal(el, key, arg1[key], initial);\n        else {\n            var isSVG = el instanceof SVGElement;\n            var isFunc = typeof arg2 === \"function\";\n            if (arg1 === \"style\" && typeof arg2 === \"object\") setStyle(el, arg2);\n            else if (isSVG && isFunc) el[arg1] = arg2;\n            else if (arg1 === \"dataset\") setData(el, arg2);\n            else if (!isSVG && (arg1 in el || isFunc) && arg1 !== \"list\") el[arg1] = arg2;\n            else {\n                if (isSVG && arg1 === \"xlink\") {\n                    setXlink(el, arg2);\n                    return;\n                }\n                if (initial && arg1 === \"class\") arg2 = el.className + \" \" + arg2;\n                if (arg2 == null) el.removeAttribute(arg1);\n                else el.setAttribute(arg1, arg2);\n            }\n        }\n    }\n    function setXlink(el, arg1, arg2) {\n        if (typeof arg1 === \"object\") for(var key in arg1)setXlink(el, key, arg1[key]);\n        else if (arg2 != null) el.setAttributeNS(xlinkns, arg1, arg2);\n        else el.removeAttributeNS(xlinkns, arg1, arg2);\n    }\n    function setData(el, arg1, arg2) {\n        if (typeof arg1 === \"object\") for(var key in arg1)setData(el, key, arg1[key]);\n        else if (arg2 != null) el.dataset[arg1] = arg2;\n        else delete el.dataset[arg1];\n    }\n    function text(str) {\n        return document.createTextNode(str != null ? str : \"\");\n    }\n    function parseArgumentsInternal(element, args, initial) {\n        for(var i = 0, list = args; i < list.length; i += 1){\n            var arg = list[i];\n            if (arg !== 0 && !arg) continue;\n            var type = typeof arg;\n            if (type === \"function\") arg(element);\n            else if (type === \"string\" || type === \"number\") element.appendChild(text(arg));\n            else if (isNode(getEl(arg))) mount(element, arg);\n            else if (arg.length) parseArgumentsInternal(element, arg, initial);\n            else if (type === \"object\") setAttrInternal(element, arg, null, initial);\n        }\n    }\n    function ensureEl(parent) {\n        return typeof parent === \"string\" ? html(parent) : getEl(parent);\n    }\n    function getEl(parent) {\n        return parent.nodeType && parent || !parent.el && parent || getEl(parent.el);\n    }\n    function isNode(arg) {\n        return arg && arg.nodeType;\n    }\n    function dispatch(child, data, eventName) {\n        if (eventName === void 0) eventName = \"redom\";\n        var childEl = getEl(child);\n        var event = new CustomEvent(eventName, {\n            bubbles: true,\n            detail: data\n        });\n        childEl.dispatchEvent(event);\n    }\n    function setChildren(parent) {\n        var children = [], len = arguments.length - 1;\n        while(len-- > 0)children[len] = arguments[len + 1];\n        var parentEl = getEl(parent);\n        var current = traverse(parent, children, parentEl.firstChild);\n        while(current){\n            var next = current.nextSibling;\n            unmount(parent, current);\n            current = next;\n        }\n    }\n    function traverse(parent, children, _current) {\n        var current = _current;\n        var childEls = Array(children.length);\n        for(var i = 0; i < children.length; i++)childEls[i] = children[i] && getEl(children[i]);\n        for(var i$1 = 0; i$1 < children.length; i$1++){\n            var child = children[i$1];\n            if (!child) continue;\n            var childEl = childEls[i$1];\n            if (childEl === current) {\n                current = current.nextSibling;\n                continue;\n            }\n            if (isNode(childEl)) {\n                var next = current && current.nextSibling;\n                var exists = child.__redom_index != null;\n                var replace = exists && next === childEls[i$1 + 1];\n                mount(parent, child, current, replace);\n                if (replace) current = next;\n                continue;\n            }\n            if (child.length != null) current = traverse(parent, child, current);\n        }\n        return current;\n    }\n    function listPool(View, key, initData) {\n        return new ListPool(View, key, initData);\n    }\n    var ListPool = function ListPool(View, key, initData) {\n        this.View = View;\n        this.initData = initData;\n        this.oldLookup = {};\n        this.lookup = {};\n        this.oldViews = [];\n        this.views = [];\n        if (key != null) this.key = typeof key === \"function\" ? key : propKey(key);\n    };\n    ListPool.prototype.update = function update(data, context) {\n        var ref = this;\n        var View = ref.View;\n        var key = ref.key;\n        var initData = ref.initData;\n        var keySet = key != null;\n        var oldLookup = this.lookup;\n        var newLookup = {};\n        var newViews = Array(data.length);\n        var oldViews = this.views;\n        for(var i = 0; i < data.length; i++){\n            var item = data[i];\n            var view = void 0;\n            if (keySet) {\n                var id = key(item);\n                view = oldLookup[id] || new View(initData, item, i, data);\n                newLookup[id] = view;\n                view.__redom_id = id;\n            } else view = oldViews[i] || new View(initData, item, i, data);\n            view.update && view.update(item, i, data, context);\n            var el = getEl(view.el);\n            el.__redom_view = view;\n            newViews[i] = view;\n        }\n        this.oldViews = oldViews;\n        this.views = newViews;\n        this.oldLookup = oldLookup;\n        this.lookup = newLookup;\n    };\n    function propKey(key) {\n        return function(item) {\n            return item[key];\n        };\n    }\n    function list(parent, View, key, initData) {\n        return new List(parent, View, key, initData);\n    }\n    var List = function List(parent, View, key, initData) {\n        this.View = View;\n        this.initData = initData;\n        this.views = [];\n        this.pool = new ListPool(View, key, initData);\n        this.el = ensureEl(parent);\n        this.keySet = key != null;\n    };\n    List.prototype.update = function update(data, context) {\n        if (data === void 0) data = [];\n        var ref = this;\n        var keySet = ref.keySet;\n        var oldViews = this.views;\n        this.pool.update(data, context);\n        var ref$1 = this.pool;\n        var views = ref$1.views;\n        var lookup = ref$1.lookup;\n        if (keySet) for(var i = 0; i < oldViews.length; i++){\n            var oldView = oldViews[i];\n            var id = oldView.__redom_id;\n            if (lookup[id] == null) {\n                oldView.__redom_index = null;\n                unmount(this, oldView);\n            }\n        }\n        for(var i$1 = 0; i$1 < views.length; i$1++){\n            var view = views[i$1];\n            view.__redom_index = i$1;\n        }\n        setChildren(this, views);\n        if (keySet) this.lookup = lookup;\n        this.views = views;\n    };\n    List.extend = function extendList(parent, View, key, initData) {\n        return List.bind(List, parent, View, key, initData);\n    };\n    list.extend = List.extend;\n    /* global Node */ function place(View, initData) {\n        return new Place(View, initData);\n    }\n    var Place = function Place(View, initData) {\n        this.el = text(\"\");\n        this.visible = false;\n        this.view = null;\n        this._placeholder = this.el;\n        if (View instanceof Node) this._el = View;\n        else if (View.el instanceof Node) {\n            this._el = View;\n            this.view = View;\n        } else this._View = View;\n        this._initData = initData;\n    };\n    Place.prototype.update = function update(visible, data) {\n        var placeholder = this._placeholder;\n        var parentNode = this.el.parentNode;\n        if (visible) {\n            if (!this.visible) {\n                if (this._el) {\n                    mount(parentNode, this._el, placeholder);\n                    unmount(parentNode, placeholder);\n                    this.el = getEl(this._el);\n                    this.visible = visible;\n                } else {\n                    var View = this._View;\n                    var view = new View(this._initData);\n                    this.el = getEl(view);\n                    this.view = view;\n                    mount(parentNode, view, placeholder);\n                    unmount(parentNode, placeholder);\n                }\n            }\n            this.view && this.view.update && this.view.update(data);\n        } else if (this.visible) {\n            if (this._el) {\n                mount(parentNode, placeholder, this._el);\n                unmount(parentNode, this._el);\n                this.el = placeholder;\n                this.visible = visible;\n                return;\n            }\n            mount(parentNode, placeholder, this.view);\n            unmount(parentNode, this.view);\n            this.el = placeholder;\n            this.view = null;\n        }\n        this.visible = visible;\n    };\n    /* global Node */ function router(parent, views, initData) {\n        return new Router(parent, views, initData);\n    }\n    var Router = function Router(parent, views, initData) {\n        this.el = ensureEl(parent);\n        this.views = views;\n        this.Views = views; // backwards compatibility\n        this.initData = initData;\n    };\n    Router.prototype.update = function update(route, data) {\n        if (route !== this.route) {\n            var views = this.views;\n            var View = views[route];\n            this.route = route;\n            if (View && (View instanceof Node || View.el instanceof Node)) this.view = View;\n            else this.view = View && new View(this.initData, data);\n            setChildren(this.el, [\n                this.view\n            ]);\n        }\n        this.view && this.view.update && this.view.update(data, route);\n    };\n    var ns = \"http://www.w3.org/2000/svg\";\n    function svg(query) {\n        var args = [], len = arguments.length - 1;\n        while(len-- > 0)args[len] = arguments[len + 1];\n        var element;\n        var type = typeof query;\n        if (type === \"string\") element = createElement(query, ns);\n        else if (type === \"function\") {\n            var Query = query;\n            element = new (Function.prototype.bind.apply(Query, [\n                null\n            ].concat(args)));\n        } else throw new Error(\"At least one argument required\");\n        parseArgumentsInternal(getEl(element), args, true);\n        return element;\n    }\n    var s = svg;\n    svg.extend = function extendSvg() {\n        var args = [], len = arguments.length;\n        while(len--)args[len] = arguments[len];\n        return svg.bind.apply(svg, [\n            this\n        ].concat(args));\n    };\n    svg.ns = ns;\n    function viewFactory(views, key) {\n        if (!views || typeof views !== \"object\") throw new Error(\"views must be an object\");\n        if (!key || typeof key !== \"string\") throw new Error(\"key must be a string\");\n        return function(initData, item, i, data) {\n            var viewKey = item[key];\n            var View = views[viewKey];\n            if (View) return new View(initData, item, i, data);\n            else throw new Error(\"view \" + viewKey + \" not found\");\n        };\n    }\n    exports1.List = List;\n    exports1.ListPool = ListPool;\n    exports1.Place = Place;\n    exports1.Router = Router;\n    exports1.dispatch = dispatch;\n    exports1.el = el;\n    exports1.h = h;\n    exports1.html = html;\n    exports1.list = list;\n    exports1.listPool = listPool;\n    exports1.mount = mount;\n    exports1.place = place;\n    exports1.router = router;\n    exports1.s = s;\n    exports1.setAttr = setAttr;\n    exports1.setChildren = setChildren;\n    exports1.setData = setData;\n    exports1.setStyle = setStyle;\n    exports1.setXlink = setXlink;\n    exports1.svg = svg;\n    exports1.text = text;\n    exports1.unmount = unmount;\n    exports1.viewFactory = viewFactory;\n});\n\n\nvar $580b9926dc0eed57$exports = {};\n/*!\n * Cropper.js v1.6.2\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2024-04-21T07:43:05.335Z\n */ (function(global, factory) {\n    $580b9926dc0eed57$exports = factory();\n})($580b9926dc0eed57$exports, function() {\n    \"use strict\";\n    function ownKeys(e, r) {\n        var t = Object.keys(e);\n        if (Object.getOwnPropertySymbols) {\n            var o = Object.getOwnPropertySymbols(e);\n            r && (o = o.filter(function(r) {\n                return Object.getOwnPropertyDescriptor(e, r).enumerable;\n            })), t.push.apply(t, o);\n        }\n        return t;\n    }\n    function _objectSpread2(e) {\n        for(var r = 1; r < arguments.length; r++){\n            var t = null != arguments[r] ? arguments[r] : {};\n            r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n                _defineProperty(e, r, t[r]);\n            }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n                Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n            });\n        }\n        return e;\n    }\n    function _toPrimitive(t, r) {\n        if (\"object\" != typeof t || !t) return t;\n        var e = t[Symbol.toPrimitive];\n        if (void 0 !== e) {\n            var i = e.call(t, r || \"default\");\n            if (\"object\" != typeof i) return i;\n            throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n        }\n        return (\"string\" === r ? String : Number)(t);\n    }\n    function _toPropertyKey(t) {\n        var i = _toPrimitive(t, \"string\");\n        return \"symbol\" == typeof i ? i : i + \"\";\n    }\n    function _typeof(o) {\n        \"@babel/helpers - typeof\";\n        return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(o) {\n            return typeof o;\n        } : function(o) {\n            return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n        }, _typeof(o);\n    }\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n    }\n    function _defineProperties(target, props) {\n        for(var i = 0; i < props.length; i++){\n            var descriptor = props[i];\n            descriptor.enumerable = descriptor.enumerable || false;\n            descriptor.configurable = true;\n            if (\"value\" in descriptor) descriptor.writable = true;\n            Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n        }\n    }\n    function _createClass(Constructor, protoProps, staticProps) {\n        if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n        if (staticProps) _defineProperties(Constructor, staticProps);\n        Object.defineProperty(Constructor, \"prototype\", {\n            writable: false\n        });\n        return Constructor;\n    }\n    function _defineProperty(obj, key, value) {\n        key = _toPropertyKey(key);\n        if (key in obj) Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n        else obj[key] = value;\n        return obj;\n    }\n    function _toConsumableArray(arr) {\n        return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n    }\n    function _arrayWithoutHoles(arr) {\n        if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n    }\n    function _iterableToArray(iter) {\n        if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n    }\n    function _unsupportedIterableToArray(o, minLen) {\n        if (!o) return;\n        if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n        var n = Object.prototype.toString.call(o).slice(8, -1);\n        if (n === \"Object\" && o.constructor) n = o.constructor.name;\n        if (n === \"Map\" || n === \"Set\") return Array.from(o);\n        if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n    }\n    function _arrayLikeToArray(arr, len) {\n        if (len == null || len > arr.length) len = arr.length;\n        for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n        return arr2;\n    }\n    function _nonIterableSpread() {\n        throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n    var IS_BROWSER = typeof window !== \"undefined\" && typeof window.document !== \"undefined\";\n    var WINDOW = IS_BROWSER ? window : {};\n    var IS_TOUCH_DEVICE = IS_BROWSER && WINDOW.document.documentElement ? \"ontouchstart\" in WINDOW.document.documentElement : false;\n    var HAS_POINTER_EVENT = IS_BROWSER ? \"PointerEvent\" in WINDOW : false;\n    var NAMESPACE = \"cropper\";\n    // Actions\n    var ACTION_ALL = \"all\";\n    var ACTION_CROP = \"crop\";\n    var ACTION_MOVE = \"move\";\n    var ACTION_ZOOM = \"zoom\";\n    var ACTION_EAST = \"e\";\n    var ACTION_WEST = \"w\";\n    var ACTION_SOUTH = \"s\";\n    var ACTION_NORTH = \"n\";\n    var ACTION_NORTH_EAST = \"ne\";\n    var ACTION_NORTH_WEST = \"nw\";\n    var ACTION_SOUTH_EAST = \"se\";\n    var ACTION_SOUTH_WEST = \"sw\";\n    // Classes\n    var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n    var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n    var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n    var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n    var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n    var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n    var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\");\n    // Data keys\n    var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n    var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\");\n    // Drag modes\n    var DRAG_MODE_CROP = \"crop\";\n    var DRAG_MODE_MOVE = \"move\";\n    var DRAG_MODE_NONE = \"none\";\n    // Events\n    var EVENT_CROP = \"crop\";\n    var EVENT_CROP_END = \"cropend\";\n    var EVENT_CROP_MOVE = \"cropmove\";\n    var EVENT_CROP_START = \"cropstart\";\n    var EVENT_DBLCLICK = \"dblclick\";\n    var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? \"touchstart\" : \"mousedown\";\n    var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? \"touchmove\" : \"mousemove\";\n    var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? \"touchend touchcancel\" : \"mouseup\";\n    var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? \"pointerdown\" : EVENT_TOUCH_START;\n    var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? \"pointermove\" : EVENT_TOUCH_MOVE;\n    var EVENT_POINTER_UP = HAS_POINTER_EVENT ? \"pointerup pointercancel\" : EVENT_TOUCH_END;\n    var EVENT_READY = \"ready\";\n    var EVENT_RESIZE = \"resize\";\n    var EVENT_WHEEL = \"wheel\";\n    var EVENT_ZOOM = \"zoom\";\n    // Mime types\n    var MIME_TYPE_JPEG = \"image/jpeg\";\n    // RegExps\n    var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n    var REGEXP_DATA_URL = /^data:/;\n    var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n    var REGEXP_TAG_NAME = /^img|canvas$/i;\n    // Misc\n    // Inspired by the default width and height of a canvas element.\n    var MIN_CONTAINER_WIDTH = 200;\n    var MIN_CONTAINER_HEIGHT = 100;\n    var DEFAULTS = {\n        // Define the view mode of the cropper\n        viewMode: 0,\n        // 0, 1, 2, 3\n        // Define the dragging mode of the cropper\n        dragMode: DRAG_MODE_CROP,\n        // 'crop', 'move' or 'none'\n        // Define the initial aspect ratio of the crop box\n        initialAspectRatio: NaN,\n        // Define the aspect ratio of the crop box\n        aspectRatio: NaN,\n        // An object with the previous cropping result data\n        data: null,\n        // A selector for adding extra containers to preview\n        preview: \"\",\n        // Re-render the cropper when resize the window\n        responsive: true,\n        // Restore the cropped area after resize the window\n        restore: true,\n        // Check if the current image is a cross-origin image\n        checkCrossOrigin: true,\n        // Check the current image's Exif Orientation information\n        checkOrientation: true,\n        // Show the black modal\n        modal: true,\n        // Show the dashed lines for guiding\n        guides: true,\n        // Show the center indicator for guiding\n        center: true,\n        // Show the white modal to highlight the crop box\n        highlight: true,\n        // Show the grid background\n        background: true,\n        // Enable to crop the image automatically when initialize\n        autoCrop: true,\n        // Define the percentage of automatic cropping area when initializes\n        autoCropArea: 0.8,\n        // Enable to move the image\n        movable: true,\n        // Enable to rotate the image\n        rotatable: true,\n        // Enable to scale the image\n        scalable: true,\n        // Enable to zoom the image\n        zoomable: true,\n        // Enable to zoom the image by dragging touch\n        zoomOnTouch: true,\n        // Enable to zoom the image by wheeling mouse\n        zoomOnWheel: true,\n        // Define zoom ratio when zoom the image by wheeling mouse\n        wheelZoomRatio: 0.1,\n        // Enable to move the crop box\n        cropBoxMovable: true,\n        // Enable to resize the crop box\n        cropBoxResizable: true,\n        // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n        toggleDragModeOnDblclick: true,\n        // Size limitation\n        minCanvasWidth: 0,\n        minCanvasHeight: 0,\n        minCropBoxWidth: 0,\n        minCropBoxHeight: 0,\n        minContainerWidth: MIN_CONTAINER_WIDTH,\n        minContainerHeight: MIN_CONTAINER_HEIGHT,\n        // Shortcuts of events\n        ready: null,\n        cropstart: null,\n        cropmove: null,\n        cropend: null,\n        crop: null,\n        zoom: null\n    };\n    var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\"><div class=\"cropper-wrap-box\"><div class=\"cropper-canvas\"></div></div><div class=\"cropper-drag-box\"></div><div class=\"cropper-crop-box\"><span class=\"cropper-view-box\"></span><span class=\"cropper-dashed dashed-h\"></span><span class=\"cropper-dashed dashed-v\"></span><span class=\"cropper-center\"></span><span class=\"cropper-face\"></span><span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span><span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span><span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span><span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span><span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span><span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span><span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span><span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span><span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span><span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span><span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span><span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span></div></div>';\n    /**\n   * Check if the given value is not a number.\n   */ var isNaN = Number.isNaN || WINDOW.isNaN;\n    /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */ function isNumber(value) {\n        return typeof value === \"number\" && !isNaN(value);\n    }\n    /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */ var isPositiveNumber = function isPositiveNumber(value) {\n        return value > 0 && value < Infinity;\n    };\n    /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */ function isUndefined(value) {\n        return typeof value === \"undefined\";\n    }\n    /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */ function isObject(value) {\n        return _typeof(value) === \"object\" && value !== null;\n    }\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */ function isPlainObject(value) {\n        if (!isObject(value)) return false;\n        try {\n            var _constructor = value.constructor;\n            var prototype = _constructor.prototype;\n            return _constructor && prototype && hasOwnProperty.call(prototype, \"isPrototypeOf\");\n        } catch (error) {\n            return false;\n        }\n    }\n    /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */ function isFunction(value) {\n        return typeof value === \"function\";\n    }\n    var slice = Array.prototype.slice;\n    /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */ function toArray(value) {\n        return Array.from ? Array.from(value) : slice.call(value);\n    }\n    /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */ function forEach(data, callback) {\n        if (data && isFunction(callback)) {\n            if (Array.isArray(data) || isNumber(data.length)) toArray(data).forEach(function(value, key) {\n                callback.call(data, value, key, data);\n            });\n            else if (isObject(data)) Object.keys(data).forEach(function(key) {\n                callback.call(data, data[key], key, data);\n            });\n        }\n        return data;\n    }\n    /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */ var assign = Object.assign || function assign(target) {\n        for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++)args[_key - 1] = arguments[_key];\n        if (isObject(target) && args.length > 0) args.forEach(function(arg) {\n            if (isObject(arg)) Object.keys(arg).forEach(function(key) {\n                target[key] = arg[key];\n            });\n        });\n        return target;\n    };\n    var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n    /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */ function normalizeDecimalNumber(value) {\n        var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n        return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n    }\n    var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n    /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */ function setStyle(element, styles) {\n        var style = element.style;\n        forEach(styles, function(value, property) {\n            if (REGEXP_SUFFIX.test(property) && isNumber(value)) value = \"\".concat(value, \"px\");\n            style[property] = value;\n        });\n    }\n    /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */ function hasClass(element, value) {\n        return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n    }\n    /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */ function addClass(element, value) {\n        if (!value) return;\n        if (isNumber(element.length)) {\n            forEach(element, function(elem) {\n                addClass(elem, value);\n            });\n            return;\n        }\n        if (element.classList) {\n            element.classList.add(value);\n            return;\n        }\n        var className = element.className.trim();\n        if (!className) element.className = value;\n        else if (className.indexOf(value) < 0) element.className = \"\".concat(className, \" \").concat(value);\n    }\n    /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */ function removeClass(element, value) {\n        if (!value) return;\n        if (isNumber(element.length)) {\n            forEach(element, function(elem) {\n                removeClass(elem, value);\n            });\n            return;\n        }\n        if (element.classList) {\n            element.classList.remove(value);\n            return;\n        }\n        if (element.className.indexOf(value) >= 0) element.className = element.className.replace(value, \"\");\n    }\n    /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */ function toggleClass(element, value, added) {\n        if (!value) return;\n        if (isNumber(element.length)) {\n            forEach(element, function(elem) {\n                toggleClass(elem, value, added);\n            });\n            return;\n        }\n        // IE10-11 doesn't support the second parameter of `classList.toggle`\n        if (added) addClass(element, value);\n        else removeClass(element, value);\n    }\n    var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n    /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */ function toParamCase(value) {\n        return value.replace(REGEXP_CAMEL_CASE, \"$1-$2\").toLowerCase();\n    }\n    /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */ function getData(element, name) {\n        if (isObject(element[name])) return element[name];\n        if (element.dataset) return element.dataset[name];\n        return element.getAttribute(\"data-\".concat(toParamCase(name)));\n    }\n    /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */ function setData(element, name, data) {\n        if (isObject(data)) element[name] = data;\n        else if (element.dataset) element.dataset[name] = data;\n        else element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n    /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */ function removeData(element, name) {\n        if (isObject(element[name])) try {\n            delete element[name];\n        } catch (error) {\n            element[name] = undefined;\n        }\n        else if (element.dataset) // #128 Safari not allows to delete dataset property\n        try {\n            delete element.dataset[name];\n        } catch (error) {\n            element.dataset[name] = undefined;\n        }\n        else element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n    var REGEXP_SPACES = /\\s\\s*/;\n    var onceSupported = function() {\n        var supported = false;\n        if (IS_BROWSER) {\n            var once = false;\n            var listener = function listener() {};\n            var options = Object.defineProperty({}, \"once\", {\n                get: function get() {\n                    supported = true;\n                    return once;\n                },\n                /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */ set: function set(value) {\n                    once = value;\n                }\n            });\n            WINDOW.addEventListener(\"test\", listener, options);\n            WINDOW.removeEventListener(\"test\", listener, options);\n        }\n        return supported;\n    }();\n    /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */ function removeListener(element, type, listener) {\n        var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n        var handler = listener;\n        type.trim().split(REGEXP_SPACES).forEach(function(event) {\n            if (!onceSupported) {\n                var listeners = element.listeners;\n                if (listeners && listeners[event] && listeners[event][listener]) {\n                    handler = listeners[event][listener];\n                    delete listeners[event][listener];\n                    if (Object.keys(listeners[event]).length === 0) delete listeners[event];\n                    if (Object.keys(listeners).length === 0) delete element.listeners;\n                }\n            }\n            element.removeEventListener(event, handler, options);\n        });\n    }\n    /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */ function addListener(element, type, listener) {\n        var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n        var _handler = listener;\n        type.trim().split(REGEXP_SPACES).forEach(function(event) {\n            if (options.once && !onceSupported) {\n                var _element$listeners = element.listeners, listeners = _element$listeners === void 0 ? {} : _element$listeners;\n                _handler = function handler() {\n                    delete listeners[event][listener];\n                    element.removeEventListener(event, _handler, options);\n                    for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++)args[_key2] = arguments[_key2];\n                    listener.apply(element, args);\n                };\n                if (!listeners[event]) listeners[event] = {};\n                if (listeners[event][listener]) element.removeEventListener(event, listeners[event][listener], options);\n                listeners[event][listener] = _handler;\n                element.listeners = listeners;\n            }\n            element.addEventListener(event, _handler, options);\n        });\n    }\n    /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */ function dispatchEvent(element, type, data) {\n        var event;\n        // Event and CustomEvent on IE9-11 are global objects, not constructors\n        if (isFunction(Event) && isFunction(CustomEvent)) event = new CustomEvent(type, {\n            detail: data,\n            bubbles: true,\n            cancelable: true\n        });\n        else {\n            event = document.createEvent(\"CustomEvent\");\n            event.initCustomEvent(type, true, true, data);\n        }\n        return element.dispatchEvent(event);\n    }\n    /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */ function getOffset(element) {\n        var box = element.getBoundingClientRect();\n        return {\n            left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n            top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n        };\n    }\n    var location = WINDOW.location;\n    var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n    /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */ function isCrossOriginURL(url) {\n        var parts = url.match(REGEXP_ORIGINS);\n        return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n    }\n    /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */ function addTimestamp(url) {\n        var timestamp = \"timestamp=\".concat(new Date().getTime());\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + timestamp;\n    }\n    /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */ function getTransforms(_ref) {\n        var rotate = _ref.rotate, scaleX = _ref.scaleX, scaleY = _ref.scaleY, translateX = _ref.translateX, translateY = _ref.translateY;\n        var values = [];\n        if (isNumber(translateX) && translateX !== 0) values.push(\"translateX(\".concat(translateX, \"px)\"));\n        if (isNumber(translateY) && translateY !== 0) values.push(\"translateY(\".concat(translateY, \"px)\"));\n        // Rotate should come first before scale to match orientation transform\n        if (isNumber(rotate) && rotate !== 0) values.push(\"rotate(\".concat(rotate, \"deg)\"));\n        if (isNumber(scaleX) && scaleX !== 1) values.push(\"scaleX(\".concat(scaleX, \")\"));\n        if (isNumber(scaleY) && scaleY !== 1) values.push(\"scaleY(\".concat(scaleY, \")\"));\n        var transform = values.length ? values.join(\" \") : \"none\";\n        return {\n            WebkitTransform: transform,\n            msTransform: transform,\n            transform: transform\n        };\n    }\n    /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */ function getMaxZoomRatio(pointers) {\n        var pointers2 = _objectSpread2({}, pointers);\n        var maxRatio = 0;\n        forEach(pointers, function(pointer, pointerId) {\n            delete pointers2[pointerId];\n            forEach(pointers2, function(pointer2) {\n                var x1 = Math.abs(pointer.startX - pointer2.startX);\n                var y1 = Math.abs(pointer.startY - pointer2.startY);\n                var x2 = Math.abs(pointer.endX - pointer2.endX);\n                var y2 = Math.abs(pointer.endY - pointer2.endY);\n                var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n                var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n                var ratio = (z2 - z1) / z1;\n                if (Math.abs(ratio) > Math.abs(maxRatio)) maxRatio = ratio;\n            });\n        });\n        return maxRatio;\n    }\n    /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */ function getPointer(_ref2, endOnly) {\n        var pageX = _ref2.pageX, pageY = _ref2.pageY;\n        var end = {\n            endX: pageX,\n            endY: pageY\n        };\n        return endOnly ? end : _objectSpread2({\n            startX: pageX,\n            startY: pageY\n        }, end);\n    }\n    /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */ function getPointersCenter(pointers) {\n        var pageX = 0;\n        var pageY = 0;\n        var count = 0;\n        forEach(pointers, function(_ref3) {\n            var startX = _ref3.startX, startY = _ref3.startY;\n            pageX += startX;\n            pageY += startY;\n            count += 1;\n        });\n        pageX /= count;\n        pageY /= count;\n        return {\n            pageX: pageX,\n            pageY: pageY\n        };\n    }\n    /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */ function getAdjustedSizes(_ref4) {\n        var aspectRatio = _ref4.aspectRatio, height = _ref4.height, width = _ref4.width;\n        var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"contain\";\n        var isValidWidth = isPositiveNumber(width);\n        var isValidHeight = isPositiveNumber(height);\n        if (isValidWidth && isValidHeight) {\n            var adjustedWidth = height * aspectRatio;\n            if (type === \"contain\" && adjustedWidth > width || type === \"cover\" && adjustedWidth < width) height = width / aspectRatio;\n            else width = height * aspectRatio;\n        } else if (isValidWidth) height = width / aspectRatio;\n        else if (isValidHeight) width = height * aspectRatio;\n        return {\n            width: width,\n            height: height\n        };\n    }\n    /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */ function getRotatedSizes(_ref5) {\n        var width = _ref5.width, height = _ref5.height, degree = _ref5.degree;\n        degree = Math.abs(degree) % 180;\n        if (degree === 90) return {\n            width: height,\n            height: width\n        };\n        var arc = degree % 90 * Math.PI / 180;\n        var sinArc = Math.sin(arc);\n        var cosArc = Math.cos(arc);\n        var newWidth = width * cosArc + height * sinArc;\n        var newHeight = width * sinArc + height * cosArc;\n        return degree > 90 ? {\n            width: newHeight,\n            height: newWidth\n        } : {\n            width: newWidth,\n            height: newHeight\n        };\n    }\n    /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */ function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n        var imageAspectRatio = _ref6.aspectRatio, imageNaturalWidth = _ref6.naturalWidth, imageNaturalHeight = _ref6.naturalHeight, _ref6$rotate = _ref6.rotate, rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate, _ref6$scaleX = _ref6.scaleX, scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX, _ref6$scaleY = _ref6.scaleY, scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n        var aspectRatio = _ref7.aspectRatio, naturalWidth = _ref7.naturalWidth, naturalHeight = _ref7.naturalHeight;\n        var _ref8$fillColor = _ref8.fillColor, fillColor = _ref8$fillColor === void 0 ? \"transparent\" : _ref8$fillColor, _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled, imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE, _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality, imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? \"low\" : _ref8$imageSmoothingQ, _ref8$maxWidth = _ref8.maxWidth, maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth, _ref8$maxHeight = _ref8.maxHeight, maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight, _ref8$minWidth = _ref8.minWidth, minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth, _ref8$minHeight = _ref8.minHeight, minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n        var canvas = document.createElement(\"canvas\");\n        var context = canvas.getContext(\"2d\");\n        var maxSizes = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: maxWidth,\n            height: maxHeight\n        });\n        var minSizes = getAdjustedSizes({\n            aspectRatio: aspectRatio,\n            width: minWidth,\n            height: minHeight\n        }, \"cover\");\n        var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n        var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight));\n        // Note: should always use image's natural sizes for drawing as\n        // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n        var destMaxSizes = getAdjustedSizes({\n            aspectRatio: imageAspectRatio,\n            width: maxWidth,\n            height: maxHeight\n        });\n        var destMinSizes = getAdjustedSizes({\n            aspectRatio: imageAspectRatio,\n            width: minWidth,\n            height: minHeight\n        }, \"cover\");\n        var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n        var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n        var params = [\n            -destWidth / 2,\n            -destHeight / 2,\n            destWidth,\n            destHeight\n        ];\n        canvas.width = normalizeDecimalNumber(width);\n        canvas.height = normalizeDecimalNumber(height);\n        context.fillStyle = fillColor;\n        context.fillRect(0, 0, width, height);\n        context.save();\n        context.translate(width / 2, height / 2);\n        context.rotate(rotate * Math.PI / 180);\n        context.scale(scaleX, scaleY);\n        context.imageSmoothingEnabled = imageSmoothingEnabled;\n        context.imageSmoothingQuality = imageSmoothingQuality;\n        context.drawImage.apply(context, [\n            image\n        ].concat(_toConsumableArray(params.map(function(param) {\n            return Math.floor(normalizeDecimalNumber(param));\n        }))));\n        context.restore();\n        return canvas;\n    }\n    var fromCharCode = String.fromCharCode;\n    /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */ function getStringFromCharCode(dataView, start, length) {\n        var str = \"\";\n        length += start;\n        for(var i = start; i < length; i += 1)str += fromCharCode(dataView.getUint8(i));\n        return str;\n    }\n    var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n    /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */ function dataURLToArrayBuffer(dataURL) {\n        var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, \"\");\n        var binary = atob(base64);\n        var arrayBuffer = new ArrayBuffer(binary.length);\n        var uint8 = new Uint8Array(arrayBuffer);\n        forEach(uint8, function(value, i) {\n            uint8[i] = binary.charCodeAt(i);\n        });\n        return arrayBuffer;\n    }\n    /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */ function arrayBufferToDataURL(arrayBuffer, mimeType) {\n        var chunks = [];\n        // Chunk Typed Array for better performance (#435)\n        var chunkSize = 8192;\n        var uint8 = new Uint8Array(arrayBuffer);\n        while(uint8.length > 0){\n            // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n            // eslint-disable-next-line prefer-spread\n            chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n            uint8 = uint8.subarray(chunkSize);\n        }\n        return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join(\"\")));\n    }\n    /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */ function resetAndGetOrientation(arrayBuffer) {\n        var dataView = new DataView(arrayBuffer);\n        var orientation;\n        // Ignores range error when the image does not have correct Exif information\n        try {\n            var littleEndian;\n            var app1Start;\n            var ifdStart;\n            // Only handle JPEG image (start by 0xFFD8)\n            if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n                var length = dataView.byteLength;\n                var offset = 2;\n                while(offset + 1 < length){\n                    if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n                        app1Start = offset;\n                        break;\n                    }\n                    offset += 1;\n                }\n            }\n            if (app1Start) {\n                var exifIDCode = app1Start + 4;\n                var tiffOffset = app1Start + 10;\n                if (getStringFromCharCode(dataView, exifIDCode, 4) === \"Exif\") {\n                    var endianness = dataView.getUint16(tiffOffset);\n                    littleEndian = endianness === 0x4949;\n                    if (littleEndian || endianness === 0x4D4D /* bigEndian */ ) {\n                        if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n                            var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n                            if (firstIFDOffset >= 0x00000008) ifdStart = tiffOffset + firstIFDOffset;\n                        }\n                    }\n                }\n            }\n            if (ifdStart) {\n                var _length = dataView.getUint16(ifdStart, littleEndian);\n                var _offset;\n                var i;\n                for(i = 0; i < _length; i += 1){\n                    _offset = ifdStart + i * 12 + 2;\n                    if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */ ) {\n                        // 8 is the offset of the current tag's value\n                        _offset += 8;\n                        // Get the original orientation value\n                        orientation = dataView.getUint16(_offset, littleEndian);\n                        // Override the orientation with its default value\n                        dataView.setUint16(_offset, 1, littleEndian);\n                        break;\n                    }\n                }\n            }\n        } catch (error) {\n            orientation = 1;\n        }\n        return orientation;\n    }\n    /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */ function parseOrientation(orientation) {\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n        switch(orientation){\n            // Flip horizontal\n            case 2:\n                scaleX = -1;\n                break;\n            // Rotate left 180°\n            case 3:\n                rotate = -180;\n                break;\n            // Flip vertical\n            case 4:\n                scaleY = -1;\n                break;\n            // Flip vertical and rotate right 90°\n            case 5:\n                rotate = 90;\n                scaleY = -1;\n                break;\n            // Rotate right 90°\n            case 6:\n                rotate = 90;\n                break;\n            // Flip horizontal and rotate right 90°\n            case 7:\n                rotate = 90;\n                scaleX = -1;\n                break;\n            // Rotate left 90°\n            case 8:\n                rotate = -90;\n                break;\n        }\n        return {\n            rotate: rotate,\n            scaleX: scaleX,\n            scaleY: scaleY\n        };\n    }\n    var render = {\n        render: function render() {\n            this.initContainer();\n            this.initCanvas();\n            this.initCropBox();\n            this.renderCanvas();\n            if (this.cropped) this.renderCropBox();\n        },\n        initContainer: function initContainer() {\n            var element = this.element, options = this.options, container = this.container, cropper = this.cropper;\n            var minWidth = Number(options.minContainerWidth);\n            var minHeight = Number(options.minContainerHeight);\n            addClass(cropper, CLASS_HIDDEN);\n            removeClass(element, CLASS_HIDDEN);\n            var containerData = {\n                width: Math.max(container.offsetWidth, minWidth >= 0 ? minWidth : MIN_CONTAINER_WIDTH),\n                height: Math.max(container.offsetHeight, minHeight >= 0 ? minHeight : MIN_CONTAINER_HEIGHT)\n            };\n            this.containerData = containerData;\n            setStyle(cropper, {\n                width: containerData.width,\n                height: containerData.height\n            });\n            addClass(element, CLASS_HIDDEN);\n            removeClass(cropper, CLASS_HIDDEN);\n        },\n        // Canvas (image wrapper)\n        initCanvas: function initCanvas() {\n            var containerData = this.containerData, imageData = this.imageData;\n            var viewMode = this.options.viewMode;\n            var rotated = Math.abs(imageData.rotate) % 180 === 90;\n            var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n            var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n            var aspectRatio = naturalWidth / naturalHeight;\n            var canvasWidth = containerData.width;\n            var canvasHeight = containerData.height;\n            if (containerData.height * aspectRatio > containerData.width) {\n                if (viewMode === 3) canvasWidth = containerData.height * aspectRatio;\n                else canvasHeight = containerData.width / aspectRatio;\n            } else if (viewMode === 3) canvasHeight = containerData.width / aspectRatio;\n            else canvasWidth = containerData.height * aspectRatio;\n            var canvasData = {\n                aspectRatio: aspectRatio,\n                naturalWidth: naturalWidth,\n                naturalHeight: naturalHeight,\n                width: canvasWidth,\n                height: canvasHeight\n            };\n            this.canvasData = canvasData;\n            this.limited = viewMode === 1 || viewMode === 2;\n            this.limitCanvas(true, true);\n            canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n            canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n            canvasData.left = (containerData.width - canvasData.width) / 2;\n            canvasData.top = (containerData.height - canvasData.height) / 2;\n            canvasData.oldLeft = canvasData.left;\n            canvasData.oldTop = canvasData.top;\n            this.initialCanvasData = assign({}, canvasData);\n        },\n        limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n            var options = this.options, containerData = this.containerData, canvasData = this.canvasData, cropBoxData = this.cropBoxData;\n            var viewMode = options.viewMode;\n            var aspectRatio = canvasData.aspectRatio;\n            var cropped = this.cropped && cropBoxData;\n            if (sizeLimited) {\n                var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n                var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n                if (viewMode > 1) {\n                    minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n                    minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n                    if (viewMode === 3) {\n                        if (minCanvasHeight * aspectRatio > minCanvasWidth) minCanvasWidth = minCanvasHeight * aspectRatio;\n                        else minCanvasHeight = minCanvasWidth / aspectRatio;\n                    }\n                } else if (viewMode > 0) {\n                    if (minCanvasWidth) minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n                    else if (minCanvasHeight) minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n                    else if (cropped) {\n                        minCanvasWidth = cropBoxData.width;\n                        minCanvasHeight = cropBoxData.height;\n                        if (minCanvasHeight * aspectRatio > minCanvasWidth) minCanvasWidth = minCanvasHeight * aspectRatio;\n                        else minCanvasHeight = minCanvasWidth / aspectRatio;\n                    }\n                }\n                var _getAdjustedSizes = getAdjustedSizes({\n                    aspectRatio: aspectRatio,\n                    width: minCanvasWidth,\n                    height: minCanvasHeight\n                });\n                minCanvasWidth = _getAdjustedSizes.width;\n                minCanvasHeight = _getAdjustedSizes.height;\n                canvasData.minWidth = minCanvasWidth;\n                canvasData.minHeight = minCanvasHeight;\n                canvasData.maxWidth = Infinity;\n                canvasData.maxHeight = Infinity;\n            }\n            if (positionLimited) {\n                if (viewMode > (cropped ? 0 : 1)) {\n                    var newCanvasLeft = containerData.width - canvasData.width;\n                    var newCanvasTop = containerData.height - canvasData.height;\n                    canvasData.minLeft = Math.min(0, newCanvasLeft);\n                    canvasData.minTop = Math.min(0, newCanvasTop);\n                    canvasData.maxLeft = Math.max(0, newCanvasLeft);\n                    canvasData.maxTop = Math.max(0, newCanvasTop);\n                    if (cropped && this.limited) {\n                        canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n                        canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n                        canvasData.maxLeft = cropBoxData.left;\n                        canvasData.maxTop = cropBoxData.top;\n                        if (viewMode === 2) {\n                            if (canvasData.width >= containerData.width) {\n                                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n                            }\n                            if (canvasData.height >= containerData.height) {\n                                canvasData.minTop = Math.min(0, newCanvasTop);\n                                canvasData.maxTop = Math.max(0, newCanvasTop);\n                            }\n                        }\n                    }\n                } else {\n                    canvasData.minLeft = -canvasData.width;\n                    canvasData.minTop = -canvasData.height;\n                    canvasData.maxLeft = containerData.width;\n                    canvasData.maxTop = containerData.height;\n                }\n            }\n        },\n        renderCanvas: function renderCanvas(changed, transformed) {\n            var canvasData = this.canvasData, imageData = this.imageData;\n            if (transformed) {\n                var _getRotatedSizes = getRotatedSizes({\n                    width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n                    height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n                    degree: imageData.rotate || 0\n                }), naturalWidth = _getRotatedSizes.width, naturalHeight = _getRotatedSizes.height;\n                var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n                var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n                canvasData.left -= (width - canvasData.width) / 2;\n                canvasData.top -= (height - canvasData.height) / 2;\n                canvasData.width = width;\n                canvasData.height = height;\n                canvasData.aspectRatio = naturalWidth / naturalHeight;\n                canvasData.naturalWidth = naturalWidth;\n                canvasData.naturalHeight = naturalHeight;\n                this.limitCanvas(true, false);\n            }\n            if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) canvasData.left = canvasData.oldLeft;\n            if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) canvasData.top = canvasData.oldTop;\n            canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n            canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n            this.limitCanvas(false, true);\n            canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n            canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n            canvasData.oldLeft = canvasData.left;\n            canvasData.oldTop = canvasData.top;\n            setStyle(this.canvas, assign({\n                width: canvasData.width,\n                height: canvasData.height\n            }, getTransforms({\n                translateX: canvasData.left,\n                translateY: canvasData.top\n            })));\n            this.renderImage(changed);\n            if (this.cropped && this.limited) this.limitCropBox(true, true);\n        },\n        renderImage: function renderImage(changed) {\n            var canvasData = this.canvasData, imageData = this.imageData;\n            var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n            var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n            assign(imageData, {\n                width: width,\n                height: height,\n                left: (canvasData.width - width) / 2,\n                top: (canvasData.height - height) / 2\n            });\n            setStyle(this.image, assign({\n                width: imageData.width,\n                height: imageData.height\n            }, getTransforms(assign({\n                translateX: imageData.left,\n                translateY: imageData.top\n            }, imageData))));\n            if (changed) this.output();\n        },\n        initCropBox: function initCropBox() {\n            var options = this.options, canvasData = this.canvasData;\n            var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n            var autoCropArea = Number(options.autoCropArea) || 0.8;\n            var cropBoxData = {\n                width: canvasData.width,\n                height: canvasData.height\n            };\n            if (aspectRatio) {\n                if (canvasData.height * aspectRatio > canvasData.width) cropBoxData.height = cropBoxData.width / aspectRatio;\n                else cropBoxData.width = cropBoxData.height * aspectRatio;\n            }\n            this.cropBoxData = cropBoxData;\n            this.limitCropBox(true, true);\n            // Initialize auto crop area\n            cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n            cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n            // The width/height of auto crop area must large than \"minWidth/Height\"\n            cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n            cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n            cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n            cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n            cropBoxData.oldLeft = cropBoxData.left;\n            cropBoxData.oldTop = cropBoxData.top;\n            this.initialCropBoxData = assign({}, cropBoxData);\n        },\n        limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n            var options = this.options, containerData = this.containerData, canvasData = this.canvasData, cropBoxData = this.cropBoxData, limited = this.limited;\n            var aspectRatio = options.aspectRatio;\n            if (sizeLimited) {\n                var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n                var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n                var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n                var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height;\n                // The min/maxCropBoxWidth/Height must be less than container's width/height\n                minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n                minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n                if (aspectRatio) {\n                    if (minCropBoxWidth && minCropBoxHeight) {\n                        if (minCropBoxHeight * aspectRatio > minCropBoxWidth) minCropBoxHeight = minCropBoxWidth / aspectRatio;\n                        else minCropBoxWidth = minCropBoxHeight * aspectRatio;\n                    } else if (minCropBoxWidth) minCropBoxHeight = minCropBoxWidth / aspectRatio;\n                    else if (minCropBoxHeight) minCropBoxWidth = minCropBoxHeight * aspectRatio;\n                    if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n                    else maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n                }\n                // The minWidth/Height must be less than maxWidth/Height\n                cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n                cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n                cropBoxData.maxWidth = maxCropBoxWidth;\n                cropBoxData.maxHeight = maxCropBoxHeight;\n            }\n            if (positionLimited) {\n                if (limited) {\n                    cropBoxData.minLeft = Math.max(0, canvasData.left);\n                    cropBoxData.minTop = Math.max(0, canvasData.top);\n                    cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n                    cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n                } else {\n                    cropBoxData.minLeft = 0;\n                    cropBoxData.minTop = 0;\n                    cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n                    cropBoxData.maxTop = containerData.height - cropBoxData.height;\n                }\n            }\n        },\n        renderCropBox: function renderCropBox() {\n            var options = this.options, containerData = this.containerData, cropBoxData = this.cropBoxData;\n            if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) cropBoxData.left = cropBoxData.oldLeft;\n            if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) cropBoxData.top = cropBoxData.oldTop;\n            cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n            cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n            this.limitCropBox(false, true);\n            cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n            cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n            cropBoxData.oldLeft = cropBoxData.left;\n            cropBoxData.oldTop = cropBoxData.top;\n            if (options.movable && options.cropBoxMovable) // Turn to move the canvas when the crop box is equal to the container\n            setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n            setStyle(this.cropBox, assign({\n                width: cropBoxData.width,\n                height: cropBoxData.height\n            }, getTransforms({\n                translateX: cropBoxData.left,\n                translateY: cropBoxData.top\n            })));\n            if (this.cropped && this.limited) this.limitCanvas(true, true);\n            if (!this.disabled) this.output();\n        },\n        output: function output() {\n            this.preview();\n            dispatchEvent(this.element, EVENT_CROP, this.getData());\n        }\n    };\n    var preview = {\n        initPreview: function initPreview() {\n            var element = this.element, crossOrigin = this.crossOrigin;\n            var preview = this.options.preview;\n            var url = crossOrigin ? this.crossOriginUrl : this.url;\n            var alt = element.alt || \"The image to preview\";\n            var image = document.createElement(\"img\");\n            if (crossOrigin) image.crossOrigin = crossOrigin;\n            image.src = url;\n            image.alt = alt;\n            this.viewBox.appendChild(image);\n            this.viewBoxImage = image;\n            if (!preview) return;\n            var previews = preview;\n            if (typeof preview === \"string\") previews = element.ownerDocument.querySelectorAll(preview);\n            else if (preview.querySelector) previews = [\n                preview\n            ];\n            this.previews = previews;\n            forEach(previews, function(el) {\n                var img = document.createElement(\"img\");\n                // Save the original size for recover\n                setData(el, DATA_PREVIEW, {\n                    width: el.offsetWidth,\n                    height: el.offsetHeight,\n                    html: el.innerHTML\n                });\n                if (crossOrigin) img.crossOrigin = crossOrigin;\n                img.src = url;\n                img.alt = alt;\n                /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */ img.style.cssText = 'display:block;width:100%;height:auto;min-width:0!important;min-height:0!important;max-width:none!important;max-height:none!important;image-orientation:0deg!important;\"';\n                el.innerHTML = \"\";\n                el.appendChild(img);\n            });\n        },\n        resetPreview: function resetPreview() {\n            forEach(this.previews, function(element) {\n                var data = getData(element, DATA_PREVIEW);\n                setStyle(element, {\n                    width: data.width,\n                    height: data.height\n                });\n                element.innerHTML = data.html;\n                removeData(element, DATA_PREVIEW);\n            });\n        },\n        preview: function preview() {\n            var imageData = this.imageData, canvasData = this.canvasData, cropBoxData = this.cropBoxData;\n            var cropBoxWidth = cropBoxData.width, cropBoxHeight = cropBoxData.height;\n            var width = imageData.width, height = imageData.height;\n            var left = cropBoxData.left - canvasData.left - imageData.left;\n            var top = cropBoxData.top - canvasData.top - imageData.top;\n            if (!this.cropped || this.disabled) return;\n            setStyle(this.viewBoxImage, assign({\n                width: width,\n                height: height\n            }, getTransforms(assign({\n                translateX: -left,\n                translateY: -top\n            }, imageData))));\n            forEach(this.previews, function(element) {\n                var data = getData(element, DATA_PREVIEW);\n                var originalWidth = data.width;\n                var originalHeight = data.height;\n                var newWidth = originalWidth;\n                var newHeight = originalHeight;\n                var ratio = 1;\n                if (cropBoxWidth) {\n                    ratio = originalWidth / cropBoxWidth;\n                    newHeight = cropBoxHeight * ratio;\n                }\n                if (cropBoxHeight && newHeight > originalHeight) {\n                    ratio = originalHeight / cropBoxHeight;\n                    newWidth = cropBoxWidth * ratio;\n                    newHeight = originalHeight;\n                }\n                setStyle(element, {\n                    width: newWidth,\n                    height: newHeight\n                });\n                setStyle(element.getElementsByTagName(\"img\")[0], assign({\n                    width: width * ratio,\n                    height: height * ratio\n                }, getTransforms(assign({\n                    translateX: -left * ratio,\n                    translateY: -top * ratio\n                }, imageData))));\n            });\n        }\n    };\n    var events = {\n        bind: function bind() {\n            var element = this.element, options = this.options, cropper = this.cropper;\n            if (isFunction(options.cropstart)) addListener(element, EVENT_CROP_START, options.cropstart);\n            if (isFunction(options.cropmove)) addListener(element, EVENT_CROP_MOVE, options.cropmove);\n            if (isFunction(options.cropend)) addListener(element, EVENT_CROP_END, options.cropend);\n            if (isFunction(options.crop)) addListener(element, EVENT_CROP, options.crop);\n            if (isFunction(options.zoom)) addListener(element, EVENT_ZOOM, options.zoom);\n            addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n            if (options.zoomable && options.zoomOnWheel) addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n                passive: false,\n                capture: true\n            });\n            if (options.toggleDragModeOnDblclick) addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n            addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n            addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n            if (options.responsive) addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n        },\n        unbind: function unbind() {\n            var element = this.element, options = this.options, cropper = this.cropper;\n            if (isFunction(options.cropstart)) removeListener(element, EVENT_CROP_START, options.cropstart);\n            if (isFunction(options.cropmove)) removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n            if (isFunction(options.cropend)) removeListener(element, EVENT_CROP_END, options.cropend);\n            if (isFunction(options.crop)) removeListener(element, EVENT_CROP, options.crop);\n            if (isFunction(options.zoom)) removeListener(element, EVENT_ZOOM, options.zoom);\n            removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n            if (options.zoomable && options.zoomOnWheel) removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n                passive: false,\n                capture: true\n            });\n            if (options.toggleDragModeOnDblclick) removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n            removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n            removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n            if (options.responsive) removeListener(window, EVENT_RESIZE, this.onResize);\n        }\n    };\n    var handlers = {\n        resize: function resize() {\n            if (this.disabled) return;\n            var options = this.options, container = this.container, containerData = this.containerData;\n            var ratioX = container.offsetWidth / containerData.width;\n            var ratioY = container.offsetHeight / containerData.height;\n            var ratio = Math.abs(ratioX - 1) > Math.abs(ratioY - 1) ? ratioX : ratioY;\n            // Resize when width changed or height changed\n            if (ratio !== 1) {\n                var canvasData;\n                var cropBoxData;\n                if (options.restore) {\n                    canvasData = this.getCanvasData();\n                    cropBoxData = this.getCropBoxData();\n                }\n                this.render();\n                if (options.restore) {\n                    this.setCanvasData(forEach(canvasData, function(n, i) {\n                        canvasData[i] = n * ratio;\n                    }));\n                    this.setCropBoxData(forEach(cropBoxData, function(n, i) {\n                        cropBoxData[i] = n * ratio;\n                    }));\n                }\n            }\n        },\n        dblclick: function dblclick() {\n            if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) return;\n            this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n        },\n        wheel: function wheel(event) {\n            var _this = this;\n            var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n            var delta = 1;\n            if (this.disabled) return;\n            event.preventDefault();\n            // Limit wheel speed to prevent zoom too fast (#21)\n            if (this.wheeling) return;\n            this.wheeling = true;\n            setTimeout(function() {\n                _this.wheeling = false;\n            }, 50);\n            if (event.deltaY) delta = event.deltaY > 0 ? 1 : -1;\n            else if (event.wheelDelta) delta = -event.wheelDelta / 120;\n            else if (event.detail) delta = event.detail > 0 ? 1 : -1;\n            this.zoom(-delta * ratio, event);\n        },\n        cropStart: function cropStart(event) {\n            var buttons = event.buttons, button = event.button;\n            if (this.disabled || (event.type === \"mousedown\" || event.type === \"pointerdown\" && event.pointerType === \"mouse\") && // No primary button (Usually the left button)\n            (isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0 || event.ctrlKey)) return;\n            var options = this.options, pointers = this.pointers;\n            var action;\n            if (event.changedTouches) // Handle touch event\n            forEach(event.changedTouches, function(touch) {\n                pointers[touch.identifier] = getPointer(touch);\n            });\n            else // Handle mouse event and pointer event\n            pointers[event.pointerId || 0] = getPointer(event);\n            if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) action = ACTION_ZOOM;\n            else action = getData(event.target, DATA_ACTION);\n            if (!REGEXP_ACTIONS.test(action)) return;\n            if (dispatchEvent(this.element, EVENT_CROP_START, {\n                originalEvent: event,\n                action: action\n            }) === false) return;\n            // This line is required for preventing page zooming in iOS browsers\n            event.preventDefault();\n            this.action = action;\n            this.cropping = false;\n            if (action === ACTION_CROP) {\n                this.cropping = true;\n                addClass(this.dragBox, CLASS_MODAL);\n            }\n        },\n        cropMove: function cropMove(event) {\n            var action = this.action;\n            if (this.disabled || !action) return;\n            var pointers = this.pointers;\n            event.preventDefault();\n            if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n                originalEvent: event,\n                action: action\n            }) === false) return;\n            if (event.changedTouches) forEach(event.changedTouches, function(touch) {\n                // The first parameter should not be undefined (#432)\n                assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n            });\n            else assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n            this.change(event);\n        },\n        cropEnd: function cropEnd(event) {\n            if (this.disabled) return;\n            var action = this.action, pointers = this.pointers;\n            if (event.changedTouches) forEach(event.changedTouches, function(touch) {\n                delete pointers[touch.identifier];\n            });\n            else delete pointers[event.pointerId || 0];\n            if (!action) return;\n            event.preventDefault();\n            if (!Object.keys(pointers).length) this.action = \"\";\n            if (this.cropping) {\n                this.cropping = false;\n                toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n            }\n            dispatchEvent(this.element, EVENT_CROP_END, {\n                originalEvent: event,\n                action: action\n            });\n        }\n    };\n    var change = {\n        change: function change(event) {\n            var options = this.options, canvasData = this.canvasData, containerData = this.containerData, cropBoxData = this.cropBoxData, pointers = this.pointers;\n            var action = this.action;\n            var aspectRatio = options.aspectRatio;\n            var left = cropBoxData.left, top = cropBoxData.top, width = cropBoxData.width, height = cropBoxData.height;\n            var right = left + width;\n            var bottom = top + height;\n            var minLeft = 0;\n            var minTop = 0;\n            var maxWidth = containerData.width;\n            var maxHeight = containerData.height;\n            var renderable = true;\n            var offset;\n            // Locking aspect ratio in \"free mode\" by holding shift key\n            if (!aspectRatio && event.shiftKey) aspectRatio = width && height ? width / height : 1;\n            if (this.limited) {\n                minLeft = cropBoxData.minLeft;\n                minTop = cropBoxData.minTop;\n                maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n                maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n            }\n            var pointer = pointers[Object.keys(pointers)[0]];\n            var range = {\n                x: pointer.endX - pointer.startX,\n                y: pointer.endY - pointer.startY\n            };\n            var check = function check(side) {\n                switch(side){\n                    case ACTION_EAST:\n                        if (right + range.x > maxWidth) range.x = maxWidth - right;\n                        break;\n                    case ACTION_WEST:\n                        if (left + range.x < minLeft) range.x = minLeft - left;\n                        break;\n                    case ACTION_NORTH:\n                        if (top + range.y < minTop) range.y = minTop - top;\n                        break;\n                    case ACTION_SOUTH:\n                        if (bottom + range.y > maxHeight) range.y = maxHeight - bottom;\n                        break;\n                }\n            };\n            switch(action){\n                // Move crop box\n                case ACTION_ALL:\n                    left += range.x;\n                    top += range.y;\n                    break;\n                // Resize crop box\n                case ACTION_EAST:\n                    if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n                        renderable = false;\n                        break;\n                    }\n                    check(ACTION_EAST);\n                    width += range.x;\n                    if (width < 0) {\n                        action = ACTION_WEST;\n                        width = -width;\n                        left -= width;\n                    }\n                    if (aspectRatio) {\n                        height = width / aspectRatio;\n                        top += (cropBoxData.height - height) / 2;\n                    }\n                    break;\n                case ACTION_NORTH:\n                    if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n                        renderable = false;\n                        break;\n                    }\n                    check(ACTION_NORTH);\n                    height -= range.y;\n                    top += range.y;\n                    if (height < 0) {\n                        action = ACTION_SOUTH;\n                        height = -height;\n                        top -= height;\n                    }\n                    if (aspectRatio) {\n                        width = height * aspectRatio;\n                        left += (cropBoxData.width - width) / 2;\n                    }\n                    break;\n                case ACTION_WEST:\n                    if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n                        renderable = false;\n                        break;\n                    }\n                    check(ACTION_WEST);\n                    width -= range.x;\n                    left += range.x;\n                    if (width < 0) {\n                        action = ACTION_EAST;\n                        width = -width;\n                        left -= width;\n                    }\n                    if (aspectRatio) {\n                        height = width / aspectRatio;\n                        top += (cropBoxData.height - height) / 2;\n                    }\n                    break;\n                case ACTION_SOUTH:\n                    if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n                        renderable = false;\n                        break;\n                    }\n                    check(ACTION_SOUTH);\n                    height += range.y;\n                    if (height < 0) {\n                        action = ACTION_NORTH;\n                        height = -height;\n                        top -= height;\n                    }\n                    if (aspectRatio) {\n                        width = height * aspectRatio;\n                        left += (cropBoxData.width - width) / 2;\n                    }\n                    break;\n                case ACTION_NORTH_EAST:\n                    if (aspectRatio) {\n                        if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n                            renderable = false;\n                            break;\n                        }\n                        check(ACTION_NORTH);\n                        height -= range.y;\n                        top += range.y;\n                        width = height * aspectRatio;\n                    } else {\n                        check(ACTION_NORTH);\n                        check(ACTION_EAST);\n                        if (range.x >= 0) {\n                            if (right < maxWidth) width += range.x;\n                            else if (range.y <= 0 && top <= minTop) renderable = false;\n                        } else width += range.x;\n                        if (range.y <= 0) {\n                            if (top > minTop) {\n                                height -= range.y;\n                                top += range.y;\n                            }\n                        } else {\n                            height -= range.y;\n                            top += range.y;\n                        }\n                    }\n                    if (width < 0 && height < 0) {\n                        action = ACTION_SOUTH_WEST;\n                        height = -height;\n                        width = -width;\n                        top -= height;\n                        left -= width;\n                    } else if (width < 0) {\n                        action = ACTION_NORTH_WEST;\n                        width = -width;\n                        left -= width;\n                    } else if (height < 0) {\n                        action = ACTION_SOUTH_EAST;\n                        height = -height;\n                        top -= height;\n                    }\n                    break;\n                case ACTION_NORTH_WEST:\n                    if (aspectRatio) {\n                        if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n                            renderable = false;\n                            break;\n                        }\n                        check(ACTION_NORTH);\n                        height -= range.y;\n                        top += range.y;\n                        width = height * aspectRatio;\n                        left += cropBoxData.width - width;\n                    } else {\n                        check(ACTION_NORTH);\n                        check(ACTION_WEST);\n                        if (range.x <= 0) {\n                            if (left > minLeft) {\n                                width -= range.x;\n                                left += range.x;\n                            } else if (range.y <= 0 && top <= minTop) renderable = false;\n                        } else {\n                            width -= range.x;\n                            left += range.x;\n                        }\n                        if (range.y <= 0) {\n                            if (top > minTop) {\n                                height -= range.y;\n                                top += range.y;\n                            }\n                        } else {\n                            height -= range.y;\n                            top += range.y;\n                        }\n                    }\n                    if (width < 0 && height < 0) {\n                        action = ACTION_SOUTH_EAST;\n                        height = -height;\n                        width = -width;\n                        top -= height;\n                        left -= width;\n                    } else if (width < 0) {\n                        action = ACTION_NORTH_EAST;\n                        width = -width;\n                        left -= width;\n                    } else if (height < 0) {\n                        action = ACTION_SOUTH_WEST;\n                        height = -height;\n                        top -= height;\n                    }\n                    break;\n                case ACTION_SOUTH_WEST:\n                    if (aspectRatio) {\n                        if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n                            renderable = false;\n                            break;\n                        }\n                        check(ACTION_WEST);\n                        width -= range.x;\n                        left += range.x;\n                        height = width / aspectRatio;\n                    } else {\n                        check(ACTION_SOUTH);\n                        check(ACTION_WEST);\n                        if (range.x <= 0) {\n                            if (left > minLeft) {\n                                width -= range.x;\n                                left += range.x;\n                            } else if (range.y >= 0 && bottom >= maxHeight) renderable = false;\n                        } else {\n                            width -= range.x;\n                            left += range.x;\n                        }\n                        if (range.y >= 0) {\n                            if (bottom < maxHeight) height += range.y;\n                        } else height += range.y;\n                    }\n                    if (width < 0 && height < 0) {\n                        action = ACTION_NORTH_EAST;\n                        height = -height;\n                        width = -width;\n                        top -= height;\n                        left -= width;\n                    } else if (width < 0) {\n                        action = ACTION_SOUTH_EAST;\n                        width = -width;\n                        left -= width;\n                    } else if (height < 0) {\n                        action = ACTION_NORTH_WEST;\n                        height = -height;\n                        top -= height;\n                    }\n                    break;\n                case ACTION_SOUTH_EAST:\n                    if (aspectRatio) {\n                        if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n                            renderable = false;\n                            break;\n                        }\n                        check(ACTION_EAST);\n                        width += range.x;\n                        height = width / aspectRatio;\n                    } else {\n                        check(ACTION_SOUTH);\n                        check(ACTION_EAST);\n                        if (range.x >= 0) {\n                            if (right < maxWidth) width += range.x;\n                            else if (range.y >= 0 && bottom >= maxHeight) renderable = false;\n                        } else width += range.x;\n                        if (range.y >= 0) {\n                            if (bottom < maxHeight) height += range.y;\n                        } else height += range.y;\n                    }\n                    if (width < 0 && height < 0) {\n                        action = ACTION_NORTH_WEST;\n                        height = -height;\n                        width = -width;\n                        top -= height;\n                        left -= width;\n                    } else if (width < 0) {\n                        action = ACTION_SOUTH_WEST;\n                        width = -width;\n                        left -= width;\n                    } else if (height < 0) {\n                        action = ACTION_NORTH_EAST;\n                        height = -height;\n                        top -= height;\n                    }\n                    break;\n                // Move canvas\n                case ACTION_MOVE:\n                    this.move(range.x, range.y);\n                    renderable = false;\n                    break;\n                // Zoom canvas\n                case ACTION_ZOOM:\n                    this.zoom(getMaxZoomRatio(pointers), event);\n                    renderable = false;\n                    break;\n                // Create crop box\n                case ACTION_CROP:\n                    if (!range.x || !range.y) {\n                        renderable = false;\n                        break;\n                    }\n                    offset = getOffset(this.cropper);\n                    left = pointer.startX - offset.left;\n                    top = pointer.startY - offset.top;\n                    width = cropBoxData.minWidth;\n                    height = cropBoxData.minHeight;\n                    if (range.x > 0) action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n                    else if (range.x < 0) {\n                        left -= width;\n                        action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n                    }\n                    if (range.y < 0) top -= height;\n                    // Show the crop box if is hidden\n                    if (!this.cropped) {\n                        removeClass(this.cropBox, CLASS_HIDDEN);\n                        this.cropped = true;\n                        if (this.limited) this.limitCropBox(true, true);\n                    }\n                    break;\n            }\n            if (renderable) {\n                cropBoxData.width = width;\n                cropBoxData.height = height;\n                cropBoxData.left = left;\n                cropBoxData.top = top;\n                this.action = action;\n                this.renderCropBox();\n            }\n            // Override\n            forEach(pointers, function(p) {\n                p.startX = p.endX;\n                p.startY = p.endY;\n            });\n        }\n    };\n    var methods = {\n        // Show the crop box manually\n        crop: function crop() {\n            if (this.ready && !this.cropped && !this.disabled) {\n                this.cropped = true;\n                this.limitCropBox(true, true);\n                if (this.options.modal) addClass(this.dragBox, CLASS_MODAL);\n                removeClass(this.cropBox, CLASS_HIDDEN);\n                this.setCropBoxData(this.initialCropBoxData);\n            }\n            return this;\n        },\n        // Reset the image and crop box to their initial states\n        reset: function reset() {\n            if (this.ready && !this.disabled) {\n                this.imageData = assign({}, this.initialImageData);\n                this.canvasData = assign({}, this.initialCanvasData);\n                this.cropBoxData = assign({}, this.initialCropBoxData);\n                this.renderCanvas();\n                if (this.cropped) this.renderCropBox();\n            }\n            return this;\n        },\n        // Clear the crop box\n        clear: function clear() {\n            if (this.cropped && !this.disabled) {\n                assign(this.cropBoxData, {\n                    left: 0,\n                    top: 0,\n                    width: 0,\n                    height: 0\n                });\n                this.cropped = false;\n                this.renderCropBox();\n                this.limitCanvas(true, true);\n                // Render canvas after crop box rendered\n                this.renderCanvas();\n                removeClass(this.dragBox, CLASS_MODAL);\n                addClass(this.cropBox, CLASS_HIDDEN);\n            }\n            return this;\n        },\n        /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */ replace: function replace(url) {\n            var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            if (!this.disabled && url) {\n                if (this.isImg) this.element.src = url;\n                if (hasSameSize) {\n                    this.url = url;\n                    this.image.src = url;\n                    if (this.ready) {\n                        this.viewBoxImage.src = url;\n                        forEach(this.previews, function(element) {\n                            element.getElementsByTagName(\"img\")[0].src = url;\n                        });\n                    }\n                } else {\n                    if (this.isImg) this.replaced = true;\n                    this.options.data = null;\n                    this.uncreate();\n                    this.load(url);\n                }\n            }\n            return this;\n        },\n        // Enable (unfreeze) the cropper\n        enable: function enable() {\n            if (this.ready && this.disabled) {\n                this.disabled = false;\n                removeClass(this.cropper, CLASS_DISABLED);\n            }\n            return this;\n        },\n        // Disable (freeze) the cropper\n        disable: function disable() {\n            if (this.ready && !this.disabled) {\n                this.disabled = true;\n                addClass(this.cropper, CLASS_DISABLED);\n            }\n            return this;\n        },\n        /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */ destroy: function destroy() {\n            var element = this.element;\n            if (!element[NAMESPACE]) return this;\n            element[NAMESPACE] = undefined;\n            if (this.isImg && this.replaced) element.src = this.originalUrl;\n            this.uncreate();\n            return this;\n        },\n        /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */ move: function move(offsetX) {\n            var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n            var _this$canvasData = this.canvasData, left = _this$canvasData.left, top = _this$canvasData.top;\n            return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n        },\n        /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */ moveTo: function moveTo(x) {\n            var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n            var canvasData = this.canvasData;\n            var changed = false;\n            x = Number(x);\n            y = Number(y);\n            if (this.ready && !this.disabled && this.options.movable) {\n                if (isNumber(x)) {\n                    canvasData.left = x;\n                    changed = true;\n                }\n                if (isNumber(y)) {\n                    canvasData.top = y;\n                    changed = true;\n                }\n                if (changed) this.renderCanvas(true);\n            }\n            return this;\n        },\n        /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */ zoom: function zoom(ratio, _originalEvent) {\n            var canvasData = this.canvasData;\n            ratio = Number(ratio);\n            if (ratio < 0) ratio = 1 / (1 - ratio);\n            else ratio = 1 + ratio;\n            return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n        },\n        /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */ zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n            var options = this.options, canvasData = this.canvasData;\n            var width = canvasData.width, height = canvasData.height, naturalWidth = canvasData.naturalWidth, naturalHeight = canvasData.naturalHeight;\n            ratio = Number(ratio);\n            if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n                var newWidth = naturalWidth * ratio;\n                var newHeight = naturalHeight * ratio;\n                if (dispatchEvent(this.element, EVENT_ZOOM, {\n                    ratio: ratio,\n                    oldRatio: width / naturalWidth,\n                    originalEvent: _originalEvent\n                }) === false) return this;\n                if (_originalEvent) {\n                    var pointers = this.pointers;\n                    var offset = getOffset(this.cropper);\n                    var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n                        pageX: _originalEvent.pageX,\n                        pageY: _originalEvent.pageY\n                    };\n                    // Zoom from the triggering point of the event\n                    canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n                    canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n                } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n                    canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n                    canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n                } else {\n                    // Zoom from the center of the canvas\n                    canvasData.left -= (newWidth - width) / 2;\n                    canvasData.top -= (newHeight - height) / 2;\n                }\n                canvasData.width = newWidth;\n                canvasData.height = newHeight;\n                this.renderCanvas(true);\n            }\n            return this;\n        },\n        /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */ rotate: function rotate(degree) {\n            return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n        },\n        /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */ rotateTo: function rotateTo(degree) {\n            degree = Number(degree);\n            if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n                this.imageData.rotate = degree % 360;\n                this.renderCanvas(true, true);\n            }\n            return this;\n        },\n        /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */ scaleX: function scaleX(_scaleX) {\n            var scaleY = this.imageData.scaleY;\n            return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n        },\n        /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */ scaleY: function scaleY(_scaleY) {\n            var scaleX = this.imageData.scaleX;\n            return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n        },\n        /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */ scale: function scale(scaleX) {\n            var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n            var imageData = this.imageData;\n            var transformed = false;\n            scaleX = Number(scaleX);\n            scaleY = Number(scaleY);\n            if (this.ready && !this.disabled && this.options.scalable) {\n                if (isNumber(scaleX)) {\n                    imageData.scaleX = scaleX;\n                    transformed = true;\n                }\n                if (isNumber(scaleY)) {\n                    imageData.scaleY = scaleY;\n                    transformed = true;\n                }\n                if (transformed) this.renderCanvas(true, true);\n            }\n            return this;\n        },\n        /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */ getData: function getData() {\n            var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            var options = this.options, imageData = this.imageData, canvasData = this.canvasData, cropBoxData = this.cropBoxData;\n            var data;\n            if (this.ready && this.cropped) {\n                data = {\n                    x: cropBoxData.left - canvasData.left,\n                    y: cropBoxData.top - canvasData.top,\n                    width: cropBoxData.width,\n                    height: cropBoxData.height\n                };\n                var ratio = imageData.width / imageData.naturalWidth;\n                forEach(data, function(n, i) {\n                    data[i] = n / ratio;\n                });\n                if (rounded) {\n                    // In case rounding off leads to extra 1px in right or bottom border\n                    // we should round the top-left corner and the dimension (#343).\n                    var bottom = Math.round(data.y + data.height);\n                    var right = Math.round(data.x + data.width);\n                    data.x = Math.round(data.x);\n                    data.y = Math.round(data.y);\n                    data.width = right - data.x;\n                    data.height = bottom - data.y;\n                }\n            } else data = {\n                x: 0,\n                y: 0,\n                width: 0,\n                height: 0\n            };\n            if (options.rotatable) data.rotate = imageData.rotate || 0;\n            if (options.scalable) {\n                data.scaleX = imageData.scaleX || 1;\n                data.scaleY = imageData.scaleY || 1;\n            }\n            return data;\n        },\n        /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */ setData: function setData(data) {\n            var options = this.options, imageData = this.imageData, canvasData = this.canvasData;\n            var cropBoxData = {};\n            if (this.ready && !this.disabled && isPlainObject(data)) {\n                var transformed = false;\n                if (options.rotatable) {\n                    if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n                        imageData.rotate = data.rotate;\n                        transformed = true;\n                    }\n                }\n                if (options.scalable) {\n                    if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n                        imageData.scaleX = data.scaleX;\n                        transformed = true;\n                    }\n                    if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n                        imageData.scaleY = data.scaleY;\n                        transformed = true;\n                    }\n                }\n                if (transformed) this.renderCanvas(true, true);\n                var ratio = imageData.width / imageData.naturalWidth;\n                if (isNumber(data.x)) cropBoxData.left = data.x * ratio + canvasData.left;\n                if (isNumber(data.y)) cropBoxData.top = data.y * ratio + canvasData.top;\n                if (isNumber(data.width)) cropBoxData.width = data.width * ratio;\n                if (isNumber(data.height)) cropBoxData.height = data.height * ratio;\n                this.setCropBoxData(cropBoxData);\n            }\n            return this;\n        },\n        /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */ getContainerData: function getContainerData() {\n            return this.ready ? assign({}, this.containerData) : {};\n        },\n        /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */ getImageData: function getImageData() {\n            return this.sized ? assign({}, this.imageData) : {};\n        },\n        /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */ getCanvasData: function getCanvasData() {\n            var canvasData = this.canvasData;\n            var data = {};\n            if (this.ready) forEach([\n                \"left\",\n                \"top\",\n                \"width\",\n                \"height\",\n                \"naturalWidth\",\n                \"naturalHeight\"\n            ], function(n) {\n                data[n] = canvasData[n];\n            });\n            return data;\n        },\n        /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */ setCanvasData: function setCanvasData(data) {\n            var canvasData = this.canvasData;\n            var aspectRatio = canvasData.aspectRatio;\n            if (this.ready && !this.disabled && isPlainObject(data)) {\n                if (isNumber(data.left)) canvasData.left = data.left;\n                if (isNumber(data.top)) canvasData.top = data.top;\n                if (isNumber(data.width)) {\n                    canvasData.width = data.width;\n                    canvasData.height = data.width / aspectRatio;\n                } else if (isNumber(data.height)) {\n                    canvasData.height = data.height;\n                    canvasData.width = data.height * aspectRatio;\n                }\n                this.renderCanvas(true);\n            }\n            return this;\n        },\n        /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */ getCropBoxData: function getCropBoxData() {\n            var cropBoxData = this.cropBoxData;\n            var data;\n            if (this.ready && this.cropped) data = {\n                left: cropBoxData.left,\n                top: cropBoxData.top,\n                width: cropBoxData.width,\n                height: cropBoxData.height\n            };\n            return data || {};\n        },\n        /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */ setCropBoxData: function setCropBoxData(data) {\n            var cropBoxData = this.cropBoxData;\n            var aspectRatio = this.options.aspectRatio;\n            var widthChanged;\n            var heightChanged;\n            if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n                if (isNumber(data.left)) cropBoxData.left = data.left;\n                if (isNumber(data.top)) cropBoxData.top = data.top;\n                if (isNumber(data.width) && data.width !== cropBoxData.width) {\n                    widthChanged = true;\n                    cropBoxData.width = data.width;\n                }\n                if (isNumber(data.height) && data.height !== cropBoxData.height) {\n                    heightChanged = true;\n                    cropBoxData.height = data.height;\n                }\n                if (aspectRatio) {\n                    if (widthChanged) cropBoxData.height = cropBoxData.width / aspectRatio;\n                    else if (heightChanged) cropBoxData.width = cropBoxData.height * aspectRatio;\n                }\n                this.renderCropBox();\n            }\n            return this;\n        },\n        /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */ getCroppedCanvas: function getCroppedCanvas() {\n            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n            if (!this.ready || !window.HTMLCanvasElement) return null;\n            var canvasData = this.canvasData;\n            var source = getSourceCanvas(this.image, this.imageData, canvasData, options);\n            // Returns the source canvas if it is not cropped.\n            if (!this.cropped) return source;\n            var _this$getData = this.getData(options.rounded), initialX = _this$getData.x, initialY = _this$getData.y, initialWidth = _this$getData.width, initialHeight = _this$getData.height;\n            var ratio = source.width / Math.floor(canvasData.naturalWidth);\n            if (ratio !== 1) {\n                initialX *= ratio;\n                initialY *= ratio;\n                initialWidth *= ratio;\n                initialHeight *= ratio;\n            }\n            var aspectRatio = initialWidth / initialHeight;\n            var maxSizes = getAdjustedSizes({\n                aspectRatio: aspectRatio,\n                width: options.maxWidth || Infinity,\n                height: options.maxHeight || Infinity\n            });\n            var minSizes = getAdjustedSizes({\n                aspectRatio: aspectRatio,\n                width: options.minWidth || 0,\n                height: options.minHeight || 0\n            }, \"cover\");\n            var _getAdjustedSizes = getAdjustedSizes({\n                aspectRatio: aspectRatio,\n                width: options.width || (ratio !== 1 ? source.width : initialWidth),\n                height: options.height || (ratio !== 1 ? source.height : initialHeight)\n            }), width = _getAdjustedSizes.width, height = _getAdjustedSizes.height;\n            width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n            height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n            var canvas = document.createElement(\"canvas\");\n            var context = canvas.getContext(\"2d\");\n            canvas.width = normalizeDecimalNumber(width);\n            canvas.height = normalizeDecimalNumber(height);\n            context.fillStyle = options.fillColor || \"transparent\";\n            context.fillRect(0, 0, width, height);\n            var _options$imageSmoothi = options.imageSmoothingEnabled, imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi, imageSmoothingQuality = options.imageSmoothingQuality;\n            context.imageSmoothingEnabled = imageSmoothingEnabled;\n            if (imageSmoothingQuality) context.imageSmoothingQuality = imageSmoothingQuality;\n            // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n            var sourceWidth = source.width;\n            var sourceHeight = source.height;\n            // Source canvas parameters\n            var srcX = initialX;\n            var srcY = initialY;\n            var srcWidth;\n            var srcHeight;\n            // Destination canvas parameters\n            var dstX;\n            var dstY;\n            var dstWidth;\n            var dstHeight;\n            if (srcX <= -initialWidth || srcX > sourceWidth) {\n                srcX = 0;\n                srcWidth = 0;\n                dstX = 0;\n                dstWidth = 0;\n            } else if (srcX <= 0) {\n                dstX = -srcX;\n                srcX = 0;\n                srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n                dstWidth = srcWidth;\n            } else if (srcX <= sourceWidth) {\n                dstX = 0;\n                srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n                dstWidth = srcWidth;\n            }\n            if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n                srcY = 0;\n                srcHeight = 0;\n                dstY = 0;\n                dstHeight = 0;\n            } else if (srcY <= 0) {\n                dstY = -srcY;\n                srcY = 0;\n                srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n                dstHeight = srcHeight;\n            } else if (srcY <= sourceHeight) {\n                dstY = 0;\n                srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n                dstHeight = srcHeight;\n            }\n            var params = [\n                srcX,\n                srcY,\n                srcWidth,\n                srcHeight\n            ];\n            // Avoid \"IndexSizeError\"\n            if (dstWidth > 0 && dstHeight > 0) {\n                var scale = width / initialWidth;\n                params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n            }\n            // All the numerical parameters should be integer for `drawImage`\n            // https://github.com/fengyuanchen/cropper/issues/476\n            context.drawImage.apply(context, [\n                source\n            ].concat(_toConsumableArray(params.map(function(param) {\n                return Math.floor(normalizeDecimalNumber(param));\n            }))));\n            return canvas;\n        },\n        /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */ setAspectRatio: function setAspectRatio(aspectRatio) {\n            var options = this.options;\n            if (!this.disabled && !isUndefined(aspectRatio)) {\n                // 0 -> NaN\n                options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n                if (this.ready) {\n                    this.initCropBox();\n                    if (this.cropped) this.renderCropBox();\n                }\n            }\n            return this;\n        },\n        /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */ setDragMode: function setDragMode(mode) {\n            var options = this.options, dragBox = this.dragBox, face = this.face;\n            if (this.ready && !this.disabled) {\n                var croppable = mode === DRAG_MODE_CROP;\n                var movable = options.movable && mode === DRAG_MODE_MOVE;\n                mode = croppable || movable ? mode : DRAG_MODE_NONE;\n                options.dragMode = mode;\n                setData(dragBox, DATA_ACTION, mode);\n                toggleClass(dragBox, CLASS_CROP, croppable);\n                toggleClass(dragBox, CLASS_MOVE, movable);\n                if (!options.cropBoxMovable) {\n                    // Sync drag mode to crop box when it is not movable\n                    setData(face, DATA_ACTION, mode);\n                    toggleClass(face, CLASS_CROP, croppable);\n                    toggleClass(face, CLASS_MOVE, movable);\n                }\n            }\n            return this;\n        }\n    };\n    var AnotherCropper = WINDOW.Cropper;\n    var Cropper = /*#__PURE__*/ function() {\n        /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */ function Cropper(element) {\n            var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n            _classCallCheck(this, Cropper);\n            if (!element || !REGEXP_TAG_NAME.test(element.tagName)) throw new Error(\"The first argument is required and must be an <img> or <canvas> element.\");\n            this.element = element;\n            this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n            this.cropped = false;\n            this.disabled = false;\n            this.pointers = {};\n            this.ready = false;\n            this.reloading = false;\n            this.replaced = false;\n            this.sized = false;\n            this.sizing = false;\n            this.init();\n        }\n        return _createClass(Cropper, [\n            {\n                key: \"init\",\n                value: function init() {\n                    var element = this.element;\n                    var tagName = element.tagName.toLowerCase();\n                    var url;\n                    if (element[NAMESPACE]) return;\n                    element[NAMESPACE] = this;\n                    if (tagName === \"img\") {\n                        this.isImg = true;\n                        // e.g.: \"img/picture.jpg\"\n                        url = element.getAttribute(\"src\") || \"\";\n                        this.originalUrl = url;\n                        // Stop when it's a blank image\n                        if (!url) return;\n                        // e.g.: \"https://example.com/img/picture.jpg\"\n                        url = element.src;\n                    } else if (tagName === \"canvas\" && window.HTMLCanvasElement) url = element.toDataURL();\n                    this.load(url);\n                }\n            },\n            {\n                key: \"load\",\n                value: function load(url) {\n                    var _this = this;\n                    if (!url) return;\n                    this.url = url;\n                    this.imageData = {};\n                    var element = this.element, options = this.options;\n                    if (!options.rotatable && !options.scalable) options.checkOrientation = false;\n                    // Only IE10+ supports Typed Arrays\n                    if (!options.checkOrientation || !window.ArrayBuffer) {\n                        this.clone();\n                        return;\n                    }\n                    // Detect the mime type of the image directly if it is a Data URL\n                    if (REGEXP_DATA_URL.test(url)) {\n                        // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n                        if (REGEXP_DATA_URL_JPEG.test(url)) this.read(dataURLToArrayBuffer(url));\n                        else // Only a JPEG image may contains Exif Orientation information,\n                        // the rest types of Data URLs are not necessary to check orientation at all.\n                        this.clone();\n                        return;\n                    }\n                    // 1. Detect the mime type of the image by a XMLHttpRequest.\n                    // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n                    var xhr = new XMLHttpRequest();\n                    var clone = this.clone.bind(this);\n                    this.reloading = true;\n                    this.xhr = xhr;\n                    // 1. Cross origin requests are only supported for protocol schemes:\n                    // http, https, data, chrome, chrome-extension.\n                    // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n                    // in some browsers as IE11 and Safari.\n                    xhr.onabort = clone;\n                    xhr.onerror = clone;\n                    xhr.ontimeout = clone;\n                    xhr.onprogress = function() {\n                        // Abort the request directly if it not a JPEG image for better performance\n                        if (xhr.getResponseHeader(\"content-type\") !== MIME_TYPE_JPEG) xhr.abort();\n                    };\n                    xhr.onload = function() {\n                        _this.read(xhr.response);\n                    };\n                    xhr.onloadend = function() {\n                        _this.reloading = false;\n                        _this.xhr = null;\n                    };\n                    // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n                    if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) url = addTimestamp(url);\n                    // The third parameter is required for avoiding side-effect (#682)\n                    xhr.open(\"GET\", url, true);\n                    xhr.responseType = \"arraybuffer\";\n                    xhr.withCredentials = element.crossOrigin === \"use-credentials\";\n                    xhr.send();\n                }\n            },\n            {\n                key: \"read\",\n                value: function read(arrayBuffer) {\n                    var options = this.options, imageData = this.imageData;\n                    // Reset the orientation value to its default value 1\n                    // as some iOS browsers will render image with its orientation\n                    var orientation = resetAndGetOrientation(arrayBuffer);\n                    var rotate = 0;\n                    var scaleX = 1;\n                    var scaleY = 1;\n                    if (orientation > 1) {\n                        // Generate a new URL which has the default orientation value\n                        this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n                        var _parseOrientation = parseOrientation(orientation);\n                        rotate = _parseOrientation.rotate;\n                        scaleX = _parseOrientation.scaleX;\n                        scaleY = _parseOrientation.scaleY;\n                    }\n                    if (options.rotatable) imageData.rotate = rotate;\n                    if (options.scalable) {\n                        imageData.scaleX = scaleX;\n                        imageData.scaleY = scaleY;\n                    }\n                    this.clone();\n                }\n            },\n            {\n                key: \"clone\",\n                value: function clone() {\n                    var element = this.element, url = this.url;\n                    var crossOrigin = element.crossOrigin;\n                    var crossOriginUrl = url;\n                    if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n                        if (!crossOrigin) crossOrigin = \"anonymous\";\n                        // Bust cache when there is not a \"crossOrigin\" property (#519)\n                        crossOriginUrl = addTimestamp(url);\n                    }\n                    this.crossOrigin = crossOrigin;\n                    this.crossOriginUrl = crossOriginUrl;\n                    var image = document.createElement(\"img\");\n                    if (crossOrigin) image.crossOrigin = crossOrigin;\n                    image.src = crossOriginUrl || url;\n                    image.alt = element.alt || \"The image to crop\";\n                    this.image = image;\n                    image.onload = this.start.bind(this);\n                    image.onerror = this.stop.bind(this);\n                    addClass(image, CLASS_HIDE);\n                    element.parentNode.insertBefore(image, element.nextSibling);\n                }\n            },\n            {\n                key: \"start\",\n                value: function start() {\n                    var _this2 = this;\n                    var image = this.image;\n                    image.onload = null;\n                    image.onerror = null;\n                    this.sizing = true;\n                    // Match all browsers that use WebKit as the layout engine in iOS devices,\n                    // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n                    var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n                    var done = function done(naturalWidth, naturalHeight) {\n                        assign(_this2.imageData, {\n                            naturalWidth: naturalWidth,\n                            naturalHeight: naturalHeight,\n                            aspectRatio: naturalWidth / naturalHeight\n                        });\n                        _this2.initialImageData = assign({}, _this2.imageData);\n                        _this2.sizing = false;\n                        _this2.sized = true;\n                        _this2.build();\n                    };\n                    // Most modern browsers (excepts iOS WebKit)\n                    if (image.naturalWidth && !isIOSWebKit) {\n                        done(image.naturalWidth, image.naturalHeight);\n                        return;\n                    }\n                    var sizingImage = document.createElement(\"img\");\n                    var body = document.body || document.documentElement;\n                    this.sizingImage = sizingImage;\n                    sizingImage.onload = function() {\n                        done(sizingImage.width, sizingImage.height);\n                        if (!isIOSWebKit) body.removeChild(sizingImage);\n                    };\n                    sizingImage.src = image.src;\n                    // iOS WebKit will convert the image automatically\n                    // with its orientation once append it into DOM (#279)\n                    if (!isIOSWebKit) {\n                        sizingImage.style.cssText = \"left:0;max-height:none!important;max-width:none!important;min-height:0!important;min-width:0!important;opacity:0;position:absolute;top:0;z-index:-1;\";\n                        body.appendChild(sizingImage);\n                    }\n                }\n            },\n            {\n                key: \"stop\",\n                value: function stop() {\n                    var image = this.image;\n                    image.onload = null;\n                    image.onerror = null;\n                    image.parentNode.removeChild(image);\n                    this.image = null;\n                }\n            },\n            {\n                key: \"build\",\n                value: function build() {\n                    if (!this.sized || this.ready) return;\n                    var element = this.element, options = this.options, image = this.image;\n                    // Create cropper elements\n                    var container = element.parentNode;\n                    var template = document.createElement(\"div\");\n                    template.innerHTML = TEMPLATE;\n                    var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n                    var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n                    var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n                    var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n                    var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n                    this.container = container;\n                    this.cropper = cropper;\n                    this.canvas = canvas;\n                    this.dragBox = dragBox;\n                    this.cropBox = cropBox;\n                    this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n                    this.face = face;\n                    canvas.appendChild(image);\n                    // Hide the original image\n                    addClass(element, CLASS_HIDDEN);\n                    // Inserts the cropper after to the current image\n                    container.insertBefore(cropper, element.nextSibling);\n                    // Show the hidden image\n                    removeClass(image, CLASS_HIDE);\n                    this.initPreview();\n                    this.bind();\n                    options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n                    options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n                    options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n                    addClass(cropBox, CLASS_HIDDEN);\n                    if (!options.guides) addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n                    if (!options.center) addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n                    if (options.background) addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n                    if (!options.highlight) addClass(face, CLASS_INVISIBLE);\n                    if (options.cropBoxMovable) {\n                        addClass(face, CLASS_MOVE);\n                        setData(face, DATA_ACTION, ACTION_ALL);\n                    }\n                    if (!options.cropBoxResizable) {\n                        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n                        addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n                    }\n                    this.render();\n                    this.ready = true;\n                    this.setDragMode(options.dragMode);\n                    if (options.autoCrop) this.crop();\n                    this.setData(options.data);\n                    if (isFunction(options.ready)) addListener(element, EVENT_READY, options.ready, {\n                        once: true\n                    });\n                    dispatchEvent(element, EVENT_READY);\n                }\n            },\n            {\n                key: \"unbuild\",\n                value: function unbuild() {\n                    if (!this.ready) return;\n                    this.ready = false;\n                    this.unbind();\n                    this.resetPreview();\n                    var parentNode = this.cropper.parentNode;\n                    if (parentNode) parentNode.removeChild(this.cropper);\n                    removeClass(this.element, CLASS_HIDDEN);\n                }\n            },\n            {\n                key: \"uncreate\",\n                value: function uncreate() {\n                    if (this.ready) {\n                        this.unbuild();\n                        this.ready = false;\n                        this.cropped = false;\n                    } else if (this.sizing) {\n                        this.sizingImage.onload = null;\n                        this.sizing = false;\n                        this.sized = false;\n                    } else if (this.reloading) {\n                        this.xhr.onabort = null;\n                        this.xhr.abort();\n                    } else if (this.image) this.stop();\n                }\n            }\n        ], [\n            {\n                key: \"noConflict\",\n                value: function noConflict() {\n                    window.Cropper = AnotherCropper;\n                    return Cropper;\n                }\n            },\n            {\n                key: \"setDefaults\",\n                value: function setDefaults(options) {\n                    assign(DEFAULTS, isPlainObject(options) && options);\n                }\n            }\n        ]);\n    }();\n    assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n    return Cropper;\n});\n\n\n// DOM елементы\nconst $aa459f0fea9822fe$var$uploadInput = document.getElementById(\"image-upload\");\nconst $aa459f0fea9822fe$var$uploadBtn = document.getElementById(\"upload-button\");\nconst $aa459f0fea9822fe$var$croppBtn = document.getElementById(\"crop-button\");\nconst $aa459f0fea9822fe$var$downloadBtn = document.getElementById(\"download-button\");\nconst $aa459f0fea9822fe$var$imageWrapper = document.querySelector(\".image-wrapper\");\nconst $aa459f0fea9822fe$var$imageDisplay = document.getElementById(\"displayed-image\");\nconst $aa459f0fea9822fe$var$croppImage = document.getElementById(\"image-cropped\");\nconst $aa459f0fea9822fe$var$croppedContainer = document.querySelector(\".cropped-container\");\n// переменные для работы приложения\nlet $aa459f0fea9822fe$var$downloadLink = null;\nlet $aa459f0fea9822fe$var$imageName = \"\";\nlet $aa459f0fea9822fe$var$imageType = \"\";\nlet $aa459f0fea9822fe$var$isUpload = false;\nlet $aa459f0fea9822fe$var$isCropped = false;\nlet $aa459f0fea9822fe$var$cropper = null;\n//создание сообщения об ошибке\nconst $aa459f0fea9822fe$var$errorMessage = (0, $4ee2d5169fef8bbb$exports.el)(\"span.error-message\");\n(0, $4ee2d5169fef8bbb$exports.mount)($aa459f0fea9822fe$var$imageWrapper, $aa459f0fea9822fe$var$errorMessage);\n// клик по скрытому инпуту при нажатии на кнопку загрузка изображения\n$aa459f0fea9822fe$var$uploadBtn.addEventListener(\"click\", ()=>{\n    $aa459f0fea9822fe$var$uploadInput.click();\n});\n// обработчик события на скрытом инпуте\n$aa459f0fea9822fe$var$uploadInput.addEventListener(\"change\", (e)=>{\n    try {\n        if ($aa459f0fea9822fe$var$cropper) $aa459f0fea9822fe$var$cropper.destroy();\n        // загрузка изображения\n        const reader = new FileReader();\n        const isValid = /\\.(jpe?g|svg|png|webp)$/i.test(e.target.value);\n        // если выбранный файл не является изображением - ошибка\n        if (!isValid) {\n            $aa459f0fea9822fe$var$imageDisplay.src = \"\";\n            throw new Error(\"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0438\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u0435 \\u0434\\u043B\\u044F \\u0437\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0438\");\n        }\n        if ($aa459f0fea9822fe$var$isCropped) (0, $4ee2d5169fef8bbb$exports.setStyle)($aa459f0fea9822fe$var$croppedContainer, {\n            display: \"none\"\n        });\n        $aa459f0fea9822fe$var$errorMessage.textContent = \"\";\n        reader.onload = (e)=>{\n            $aa459f0fea9822fe$var$imageDisplay.onload = ()=>{};\n            $aa459f0fea9822fe$var$imageDisplay.src = e.target.result;\n            $aa459f0fea9822fe$var$cropper = new (0, (/*@__PURE__*/$parcel$interopDefault($580b9926dc0eed57$exports)))($aa459f0fea9822fe$var$imageDisplay, {\n                viewMode: 2\n            });\n        };\n        reader.readAsDataURL(e.target.files[0]);\n        // получение имени и типа загруженног изображения для передачи в ссылку для скачивания\n        $aa459f0fea9822fe$var$imageName = e.target.files[0].name.replace(/\\.(jpe?g|svg|png|webp)$/i, \"\");\n        $aa459f0fea9822fe$var$imageType = e.target.files[0].type;\n        $aa459f0fea9822fe$var$isUpload = true;\n    } catch (error) {\n        // обработка ошибки\n        $aa459f0fea9822fe$var$errorMessage.textContent = error.message;\n        $aa459f0fea9822fe$var$isUpload = false;\n    }\n});\n// обработчик клика на кнопке cropp image\n$aa459f0fea9822fe$var$croppBtn.addEventListener(\"click\", ()=>{\n    if (!$aa459f0fea9822fe$var$isUpload) {\n        $aa459f0fea9822fe$var$isCropped = false;\n        return;\n    }\n    // получение данных из Cropper\n    const croppedImage = $aa459f0fea9822fe$var$cropper.getCroppedCanvas().toDataURL($aa459f0fea9822fe$var$imageType);\n    const containerData = $aa459f0fea9822fe$var$cropper.getImageData();\n    const data = $aa459f0fea9822fe$var$cropper.getCropBoxData();\n    // установка размеров для контейнера обрезанного изображения\n    (0, $4ee2d5169fef8bbb$exports.setStyle)($aa459f0fea9822fe$var$croppedContainer, {\n        width: `${containerData.width}px`\n    });\n    (0, $4ee2d5169fef8bbb$exports.setStyle)($aa459f0fea9822fe$var$croppedContainer, {\n        height: `${containerData.height}px`\n    });\n    // отрисовка и размеры обрезанного изображения\n    $aa459f0fea9822fe$var$croppImage.src = croppedImage;\n    (0, $4ee2d5169fef8bbb$exports.setStyle)($aa459f0fea9822fe$var$croppImage, {\n        width: `${data.width}px`\n    });\n    (0, $4ee2d5169fef8bbb$exports.setStyle)($aa459f0fea9822fe$var$croppImage, {\n        height: `${data.height}px`\n    });\n    (0, $4ee2d5169fef8bbb$exports.setStyle)($aa459f0fea9822fe$var$croppedContainer, {\n        display: \"block\"\n    });\n    $aa459f0fea9822fe$var$isCropped = true;\n});\n// скачивание результата\n$aa459f0fea9822fe$var$downloadBtn.addEventListener(\"click\", ()=>{\n    if (!$aa459f0fea9822fe$var$isCropped) return;\n    if (!$aa459f0fea9822fe$var$downloadLink) $aa459f0fea9822fe$var$downloadLink = (0, $4ee2d5169fef8bbb$exports.el)(\"a.hidden-link\", {});\n    $aa459f0fea9822fe$var$downloadLink.download = $aa459f0fea9822fe$var$imageName;\n    $aa459f0fea9822fe$var$downloadLink.href = $aa459f0fea9822fe$var$croppImage.src;\n    (0, $4ee2d5169fef8bbb$exports.mount)($aa459f0fea9822fe$var$croppedContainer, $aa459f0fea9822fe$var$downloadLink);\n    $aa459f0fea9822fe$var$downloadLink.click();\n});\n\n\n//# sourceMappingURL=index.1971d991.js.map\n","import { el, mount, setStyle } from 'redom';\nimport Cropper from 'cropperjs';\n\n// DOM елементы\nconst uploadInput = document.getElementById('image-upload');\nconst uploadBtn = document.getElementById('upload-button');\nconst croppBtn = document.getElementById('crop-button');\nconst downloadBtn = document.getElementById('download-button');\nconst imageWrapper = document.querySelector('.image-wrapper');\nconst imageDisplay = document.getElementById('displayed-image');\nconst croppImage = document.getElementById('image-cropped');\nconst croppedContainer = document.querySelector('.cropped-container');\n\n// переменные для работы приложения\nlet downloadLink = null;\nlet imageName = '';\nlet imageType = '';\nlet isUpload = false;\nlet isCropped = false;\nlet cropper = null;\n\n//создание сообщения об ошибке\nconst errorMessage = el('span.error-message');\nmount(imageWrapper, errorMessage);\n\n// клик по скрытому инпуту при нажатии на кнопку загрузка изображения\nuploadBtn.addEventListener('click', () => {\n  uploadInput.click();\n});\n\n// обработчик события на скрытом инпуте\nuploadInput.addEventListener('change', (e) => {\n  try {\n    if (cropper) {\n      cropper.destroy();\n    }\n    // загрузка изображения\n    const reader = new FileReader();\n    const isValid = /\\.(jpe?g|svg|png|webp)$/i.test(e.target.value);\n    // если выбранный файл не является изображением - ошибка\n    if (!isValid) {\n      imageDisplay.src = '';\n      throw new Error('Выберите изображение для загрузки');\n    }\n    if (isCropped) {\n      setStyle(croppedContainer, { display: 'none' });\n    }\n\n    errorMessage.textContent = '';\n    reader.onload = (e) => {\n      imageDisplay.onload = () => {};\n      imageDisplay.src = e.target.result;\n      cropper = new Cropper(imageDisplay, {\n        viewMode: 2,\n      });\n    };\n\n    reader.readAsDataURL(e.target.files[0]);\n    // получение имени и типа загруженног изображения для передачи в ссылку для скачивания\n    imageName = e.target.files[0].name.replace(/\\.(jpe?g|svg|png|webp)$/i, '');\n    imageType = e.target.files[0].type;\n\n    isUpload = true;\n  } catch (error) {\n    // обработка ошибки\n    errorMessage.textContent = error.message;\n    isUpload = false;\n  }\n});\n\n// обработчик клика на кнопке cropp image\ncroppBtn.addEventListener('click', () => {\n  if (!isUpload) {\n    isCropped = false;\n    return;\n  }\n\n  // получение данных из Cropper\n  const croppedImage = cropper.getCroppedCanvas().toDataURL(imageType);\n  const containerData = cropper.getImageData();\n  const data = cropper.getCropBoxData();\n\n  // установка размеров для контейнера обрезанного изображения\n  setStyle(croppedContainer, { width: `${containerData.width}px` });\n  setStyle(croppedContainer, { height: `${containerData.height}px` });\n  // отрисовка и размеры обрезанного изображения\n  croppImage.src = croppedImage;\n  setStyle(croppImage, { width: `${data.width}px` });\n  setStyle(croppImage, { height: `${data.height}px` });\n  setStyle(croppedContainer, { display: 'block' });\n  isCropped = true;\n});\n\n// скачивание результата\ndownloadBtn.addEventListener('click', () => {\n  if (!isCropped) {\n    return;\n  }\n  if (!downloadLink) {\n    downloadLink = el('a.hidden-link', {});\n  }\n  downloadLink.download = imageName;\n  downloadLink.href = croppImage.src;\n  mount(croppedContainer, downloadLink);\n  downloadLink.click();\n});\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.redom = {}));\n})(this, (function (exports) { 'use strict';\n\n  function createElement(query, ns) {\n    var ref = parse(query);\n    var tag = ref.tag;\n    var id = ref.id;\n    var className = ref.className;\n    var element = ns\n      ? document.createElementNS(ns, tag)\n      : document.createElement(tag);\n\n    if (id) {\n      element.id = id;\n    }\n\n    if (className) {\n      if (ns) {\n        element.setAttribute(\"class\", className);\n      } else {\n        element.className = className;\n      }\n    }\n\n    return element;\n  }\n\n  function parse(query) {\n    var chunks = query.split(/([.#])/);\n    var className = \"\";\n    var id = \"\";\n\n    for (var i = 1; i < chunks.length; i += 2) {\n      switch (chunks[i]) {\n        case \".\":\n          className += \" \" + (chunks[i + 1]);\n          break;\n\n        case \"#\":\n          id = chunks[i + 1];\n      }\n    }\n\n    return {\n      className: className.trim(),\n      tag: chunks[0] || \"div\",\n      id: id,\n    };\n  }\n\n  function html(query) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    var element;\n\n    var type = typeof query;\n\n    if (type === \"string\") {\n      element = createElement(query);\n    } else if (type === \"function\") {\n      var Query = query;\n      element = new (Function.prototype.bind.apply( Query, [ null ].concat( args) ));\n    } else {\n      throw new Error(\"At least one argument required\");\n    }\n\n    parseArgumentsInternal(getEl(element), args, true);\n\n    return element;\n  }\n\n  var el = html;\n  var h = html;\n\n  html.extend = function extendHtml() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    return html.bind.apply(html, [ this ].concat( args ));\n  };\n\n  function unmount(parent, child) {\n    var parentEl = getEl(parent);\n    var childEl = getEl(child);\n\n    if (child === childEl && childEl.__redom_view) {\n      // try to look up the view if not provided\n      child = childEl.__redom_view;\n    }\n\n    if (childEl.parentNode) {\n      doUnmount(child, childEl, parentEl);\n\n      parentEl.removeChild(childEl);\n    }\n\n    return child;\n  }\n\n  function doUnmount(child, childEl, parentEl) {\n    var hooks = childEl.__redom_lifecycle;\n\n    if (hooksAreEmpty(hooks)) {\n      childEl.__redom_lifecycle = {};\n      return;\n    }\n\n    var traverse = parentEl;\n\n    if (childEl.__redom_mounted) {\n      trigger(childEl, \"onunmount\");\n    }\n\n    while (traverse) {\n      var parentHooks = traverse.__redom_lifecycle || {};\n\n      for (var hook in hooks) {\n        if (parentHooks[hook]) {\n          parentHooks[hook] -= hooks[hook];\n        }\n      }\n\n      if (hooksAreEmpty(parentHooks)) {\n        traverse.__redom_lifecycle = null;\n      }\n\n      traverse = traverse.parentNode;\n    }\n  }\n\n  function hooksAreEmpty(hooks) {\n    if (hooks == null) {\n      return true;\n    }\n    for (var key in hooks) {\n      if (hooks[key]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /* global Node, ShadowRoot */\n\n\n  var hookNames = [\"onmount\", \"onremount\", \"onunmount\"];\n  var shadowRootAvailable =\n    typeof window !== \"undefined\" && \"ShadowRoot\" in window;\n\n  function mount(parent, child, before, replace) {\n    var parentEl = getEl(parent);\n    var childEl = getEl(child);\n\n    if (child === childEl && childEl.__redom_view) {\n      // try to look up the view if not provided\n      child = childEl.__redom_view;\n    }\n\n    if (child !== childEl) {\n      childEl.__redom_view = child;\n    }\n\n    var wasMounted = childEl.__redom_mounted;\n    var oldParent = childEl.parentNode;\n\n    if (wasMounted && oldParent !== parentEl) {\n      doUnmount(child, childEl, oldParent);\n    }\n\n    if (before != null) {\n      if (replace) {\n        var beforeEl = getEl(before);\n\n        if (beforeEl.__redom_mounted) {\n          trigger(beforeEl, \"onunmount\");\n        }\n\n        parentEl.replaceChild(childEl, beforeEl);\n      } else {\n        parentEl.insertBefore(childEl, getEl(before));\n      }\n    } else {\n      parentEl.appendChild(childEl);\n    }\n\n    doMount(child, childEl, parentEl, oldParent);\n\n    return child;\n  }\n\n  function trigger(el, eventName) {\n    if (eventName === \"onmount\" || eventName === \"onremount\") {\n      el.__redom_mounted = true;\n    } else if (eventName === \"onunmount\") {\n      el.__redom_mounted = false;\n    }\n\n    var hooks = el.__redom_lifecycle;\n\n    if (!hooks) {\n      return;\n    }\n\n    var view = el.__redom_view;\n    var hookCount = 0;\n\n    view && view[eventName] && view[eventName]();\n\n    for (var hook in hooks) {\n      if (hook) {\n        hookCount++;\n      }\n    }\n\n    if (hookCount) {\n      var traverse = el.firstChild;\n\n      while (traverse) {\n        var next = traverse.nextSibling;\n\n        trigger(traverse, eventName);\n\n        traverse = next;\n      }\n    }\n  }\n\n  function doMount(child, childEl, parentEl, oldParent) {\n    var hooks = childEl.__redom_lifecycle || (childEl.__redom_lifecycle = {});\n    var remount = parentEl === oldParent;\n    var hooksFound = false;\n\n    for (var i = 0, list = hookNames; i < list.length; i += 1) {\n      var hookName = list[i];\n\n      if (!remount) {\n        // if already mounted, skip this phase\n        if (child !== childEl) {\n          // only Views can have lifecycle events\n          if (hookName in child) {\n            hooks[hookName] = (hooks[hookName] || 0) + 1;\n          }\n        }\n      }\n      if (hooks[hookName]) {\n        hooksFound = true;\n      }\n    }\n\n    if (!hooksFound) {\n      childEl.__redom_lifecycle = {};\n      return;\n    }\n\n    var traverse = parentEl;\n    var triggered = false;\n\n    if (remount || (traverse && traverse.__redom_mounted)) {\n      trigger(childEl, remount ? \"onremount\" : \"onmount\");\n      triggered = true;\n    }\n\n    while (traverse) {\n      var parent = traverse.parentNode;\n      var parentHooks =\n        traverse.__redom_lifecycle || (traverse.__redom_lifecycle = {});\n\n      for (var hook in hooks) {\n        parentHooks[hook] = (parentHooks[hook] || 0) + hooks[hook];\n      }\n\n      if (triggered) {\n        break;\n      } else {\n        if (\n          traverse.nodeType === Node.DOCUMENT_NODE ||\n          (shadowRootAvailable && traverse instanceof ShadowRoot) ||\n          (parent && parent.__redom_mounted)\n        ) {\n          trigger(traverse, remount ? \"onremount\" : \"onmount\");\n          triggered = true;\n        }\n        traverse = parent;\n      }\n    }\n  }\n\n  function setStyle(view, arg1, arg2) {\n    var el = getEl(view);\n\n    if (typeof arg1 === \"object\") {\n      for (var key in arg1) {\n        setStyleValue(el, key, arg1[key]);\n      }\n    } else {\n      setStyleValue(el, arg1, arg2);\n    }\n  }\n\n  function setStyleValue(el, key, value) {\n    el.style[key] = value == null ? \"\" : value;\n  }\n\n  /* global SVGElement */\n\n\n  var xlinkns = \"http://www.w3.org/1999/xlink\";\n\n  function setAttr(view, arg1, arg2) {\n    setAttrInternal(view, arg1, arg2);\n  }\n\n  function setAttrInternal(view, arg1, arg2, initial) {\n    var el = getEl(view);\n\n    var isObj = typeof arg1 === \"object\";\n\n    if (isObj) {\n      for (var key in arg1) {\n        setAttrInternal(el, key, arg1[key], initial);\n      }\n    } else {\n      var isSVG = el instanceof SVGElement;\n      var isFunc = typeof arg2 === \"function\";\n\n      if (arg1 === \"style\" && typeof arg2 === \"object\") {\n        setStyle(el, arg2);\n      } else if (isSVG && isFunc) {\n        el[arg1] = arg2;\n      } else if (arg1 === \"dataset\") {\n        setData(el, arg2);\n      } else if (!isSVG && (arg1 in el || isFunc) && arg1 !== \"list\") {\n        el[arg1] = arg2;\n      } else {\n        if (isSVG && arg1 === \"xlink\") {\n          setXlink(el, arg2);\n          return;\n        }\n        if (initial && arg1 === \"class\") {\n          arg2 = el.className + \" \" + arg2;\n        }\n        if (arg2 == null) {\n          el.removeAttribute(arg1);\n        } else {\n          el.setAttribute(arg1, arg2);\n        }\n      }\n    }\n  }\n\n  function setXlink(el, arg1, arg2) {\n    if (typeof arg1 === \"object\") {\n      for (var key in arg1) {\n        setXlink(el, key, arg1[key]);\n      }\n    } else {\n      if (arg2 != null) {\n        el.setAttributeNS(xlinkns, arg1, arg2);\n      } else {\n        el.removeAttributeNS(xlinkns, arg1, arg2);\n      }\n    }\n  }\n\n  function setData(el, arg1, arg2) {\n    if (typeof arg1 === \"object\") {\n      for (var key in arg1) {\n        setData(el, key, arg1[key]);\n      }\n    } else {\n      if (arg2 != null) {\n        el.dataset[arg1] = arg2;\n      } else {\n        delete el.dataset[arg1];\n      }\n    }\n  }\n\n  function text(str) {\n    return document.createTextNode(str != null ? str : \"\");\n  }\n\n  function parseArgumentsInternal(element, args, initial) {\n    for (var i = 0, list = args; i < list.length; i += 1) {\n      var arg = list[i];\n\n      if (arg !== 0 && !arg) {\n        continue;\n      }\n\n      var type = typeof arg;\n\n      if (type === \"function\") {\n        arg(element);\n      } else if (type === \"string\" || type === \"number\") {\n        element.appendChild(text(arg));\n      } else if (isNode(getEl(arg))) {\n        mount(element, arg);\n      } else if (arg.length) {\n        parseArgumentsInternal(element, arg, initial);\n      } else if (type === \"object\") {\n        setAttrInternal(element, arg, null, initial);\n      }\n    }\n  }\n\n  function ensureEl(parent) {\n    return typeof parent === \"string\" ? html(parent) : getEl(parent);\n  }\n\n  function getEl(parent) {\n    return (\n      (parent.nodeType && parent) || (!parent.el && parent) || getEl(parent.el)\n    );\n  }\n\n  function isNode(arg) {\n    return arg && arg.nodeType;\n  }\n\n  function dispatch(child, data, eventName) {\n    if ( eventName === void 0 ) eventName = \"redom\";\n\n    var childEl = getEl(child);\n    var event = new CustomEvent(eventName, { bubbles: true, detail: data });\n    childEl.dispatchEvent(event);\n  }\n\n  function setChildren(parent) {\n    var children = [], len = arguments.length - 1;\n    while ( len-- > 0 ) children[ len ] = arguments[ len + 1 ];\n\n    var parentEl = getEl(parent);\n    var current = traverse(parent, children, parentEl.firstChild);\n\n    while (current) {\n      var next = current.nextSibling;\n\n      unmount(parent, current);\n\n      current = next;\n    }\n  }\n\n  function traverse(parent, children, _current) {\n    var current = _current;\n\n    var childEls = Array(children.length);\n\n    for (var i = 0; i < children.length; i++) {\n      childEls[i] = children[i] && getEl(children[i]);\n    }\n\n    for (var i$1 = 0; i$1 < children.length; i$1++) {\n      var child = children[i$1];\n\n      if (!child) {\n        continue;\n      }\n\n      var childEl = childEls[i$1];\n\n      if (childEl === current) {\n        current = current.nextSibling;\n        continue;\n      }\n\n      if (isNode(childEl)) {\n        var next = current && current.nextSibling;\n        var exists = child.__redom_index != null;\n        var replace = exists && next === childEls[i$1 + 1];\n\n        mount(parent, child, current, replace);\n\n        if (replace) {\n          current = next;\n        }\n\n        continue;\n      }\n\n      if (child.length != null) {\n        current = traverse(parent, child, current);\n      }\n    }\n\n    return current;\n  }\n\n  function listPool(View, key, initData) {\n    return new ListPool(View, key, initData);\n  }\n\n  var ListPool = function ListPool(View, key, initData) {\n    this.View = View;\n    this.initData = initData;\n    this.oldLookup = {};\n    this.lookup = {};\n    this.oldViews = [];\n    this.views = [];\n\n    if (key != null) {\n      this.key = typeof key === \"function\" ? key : propKey(key);\n    }\n  };\n\n  ListPool.prototype.update = function update (data, context) {\n    var ref = this;\n      var View = ref.View;\n      var key = ref.key;\n      var initData = ref.initData;\n    var keySet = key != null;\n\n    var oldLookup = this.lookup;\n    var newLookup = {};\n\n    var newViews = Array(data.length);\n    var oldViews = this.views;\n\n    for (var i = 0; i < data.length; i++) {\n      var item = data[i];\n      var view = (void 0);\n\n      if (keySet) {\n        var id = key(item);\n\n        view = oldLookup[id] || new View(initData, item, i, data);\n        newLookup[id] = view;\n        view.__redom_id = id;\n      } else {\n        view = oldViews[i] || new View(initData, item, i, data);\n      }\n      view.update && view.update(item, i, data, context);\n\n      var el = getEl(view.el);\n\n      el.__redom_view = view;\n      newViews[i] = view;\n    }\n\n    this.oldViews = oldViews;\n    this.views = newViews;\n\n    this.oldLookup = oldLookup;\n    this.lookup = newLookup;\n  };\n\n  function propKey(key) {\n    return function (item) {\n      return item[key];\n    };\n  }\n\n  function list(parent, View, key, initData) {\n    return new List(parent, View, key, initData);\n  }\n\n  var List = function List(parent, View, key, initData) {\n    this.View = View;\n    this.initData = initData;\n    this.views = [];\n    this.pool = new ListPool(View, key, initData);\n    this.el = ensureEl(parent);\n    this.keySet = key != null;\n  };\n\n  List.prototype.update = function update (data, context) {\n      if ( data === void 0 ) data = [];\n\n    var ref = this;\n      var keySet = ref.keySet;\n    var oldViews = this.views;\n\n    this.pool.update(data, context);\n\n    var ref$1 = this.pool;\n      var views = ref$1.views;\n      var lookup = ref$1.lookup;\n\n    if (keySet) {\n      for (var i = 0; i < oldViews.length; i++) {\n        var oldView = oldViews[i];\n        var id = oldView.__redom_id;\n\n        if (lookup[id] == null) {\n          oldView.__redom_index = null;\n          unmount(this, oldView);\n        }\n      }\n    }\n\n    for (var i$1 = 0; i$1 < views.length; i$1++) {\n      var view = views[i$1];\n\n      view.__redom_index = i$1;\n    }\n\n    setChildren(this, views);\n\n    if (keySet) {\n      this.lookup = lookup;\n    }\n    this.views = views;\n  };\n\n  List.extend = function extendList(parent, View, key, initData) {\n    return List.bind(List, parent, View, key, initData);\n  };\n\n  list.extend = List.extend;\n\n  /* global Node */\n\n\n  function place(View, initData) {\n    return new Place(View, initData);\n  }\n\n  var Place = function Place(View, initData) {\n    this.el = text(\"\");\n    this.visible = false;\n    this.view = null;\n    this._placeholder = this.el;\n\n    if (View instanceof Node) {\n      this._el = View;\n    } else if (View.el instanceof Node) {\n      this._el = View;\n      this.view = View;\n    } else {\n      this._View = View;\n    }\n\n    this._initData = initData;\n  };\n\n  Place.prototype.update = function update (visible, data) {\n    var placeholder = this._placeholder;\n    var parentNode = this.el.parentNode;\n\n    if (visible) {\n      if (!this.visible) {\n        if (this._el) {\n          mount(parentNode, this._el, placeholder);\n          unmount(parentNode, placeholder);\n\n          this.el = getEl(this._el);\n          this.visible = visible;\n        } else {\n          var View = this._View;\n          var view = new View(this._initData);\n\n          this.el = getEl(view);\n          this.view = view;\n\n          mount(parentNode, view, placeholder);\n          unmount(parentNode, placeholder);\n        }\n      }\n      this.view && this.view.update && this.view.update(data);\n    } else {\n      if (this.visible) {\n        if (this._el) {\n          mount(parentNode, placeholder, this._el);\n          unmount(parentNode, this._el);\n\n          this.el = placeholder;\n          this.visible = visible;\n\n          return;\n        }\n        mount(parentNode, placeholder, this.view);\n        unmount(parentNode, this.view);\n\n        this.el = placeholder;\n        this.view = null;\n      }\n    }\n    this.visible = visible;\n  };\n\n  /* global Node */\n\n\n  function router(parent, views, initData) {\n    return new Router(parent, views, initData);\n  }\n\n  var Router = function Router(parent, views, initData) {\n    this.el = ensureEl(parent);\n    this.views = views;\n    this.Views = views; // backwards compatibility\n    this.initData = initData;\n  };\n\n  Router.prototype.update = function update (route, data) {\n    if (route !== this.route) {\n      var views = this.views;\n      var View = views[route];\n\n      this.route = route;\n\n      if (View && (View instanceof Node || View.el instanceof Node)) {\n        this.view = View;\n      } else {\n        this.view = View && new View(this.initData, data);\n      }\n\n      setChildren(this.el, [this.view]);\n    }\n    this.view && this.view.update && this.view.update(data, route);\n  };\n\n  var ns = \"http://www.w3.org/2000/svg\";\n\n  function svg(query) {\n    var args = [], len = arguments.length - 1;\n    while ( len-- > 0 ) args[ len ] = arguments[ len + 1 ];\n\n    var element;\n\n    var type = typeof query;\n\n    if (type === \"string\") {\n      element = createElement(query, ns);\n    } else if (type === \"function\") {\n      var Query = query;\n      element = new (Function.prototype.bind.apply( Query, [ null ].concat( args) ));\n    } else {\n      throw new Error(\"At least one argument required\");\n    }\n\n    parseArgumentsInternal(getEl(element), args, true);\n\n    return element;\n  }\n\n  var s = svg;\n\n  svg.extend = function extendSvg() {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    return svg.bind.apply(svg, [ this ].concat( args ));\n  };\n\n  svg.ns = ns;\n\n  function viewFactory(views, key) {\n    if (!views || typeof views !== \"object\") {\n      throw new Error(\"views must be an object\");\n    }\n    if (!key || typeof key !== \"string\") {\n      throw new Error(\"key must be a string\");\n    }\n    return function (initData, item, i, data) {\n      var viewKey = item[key];\n      var View = views[viewKey];\n\n      if (View) {\n        return new View(initData, item, i, data);\n      } else {\n        throw new Error((\"view \" + viewKey + \" not found\"));\n      }\n    };\n  }\n\n  exports.List = List;\n  exports.ListPool = ListPool;\n  exports.Place = Place;\n  exports.Router = Router;\n  exports.dispatch = dispatch;\n  exports.el = el;\n  exports.h = h;\n  exports.html = html;\n  exports.list = list;\n  exports.listPool = listPool;\n  exports.mount = mount;\n  exports.place = place;\n  exports.router = router;\n  exports.s = s;\n  exports.setAttr = setAttr;\n  exports.setChildren = setChildren;\n  exports.setData = setData;\n  exports.setStyle = setStyle;\n  exports.setXlink = setXlink;\n  exports.svg = svg;\n  exports.text = text;\n  exports.unmount = unmount;\n  exports.viewFactory = viewFactory;\n\n}));\n","/*!\n * Cropper.js v1.6.2\n * https://fengyuanchen.github.io/cropperjs\n *\n * Copyright 2015-present Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2024-04-21T07:43:05.335Z\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Cropper = factory());\n})(this, (function () { 'use strict';\n\n  function ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n      var o = Object.getOwnPropertySymbols(e);\n      r && (o = o.filter(function (r) {\n        return Object.getOwnPropertyDescriptor(e, r).enumerable;\n      })), t.push.apply(t, o);\n    }\n    return t;\n  }\n  function _objectSpread2(e) {\n    for (var r = 1; r < arguments.length; r++) {\n      var t = null != arguments[r] ? arguments[r] : {};\n      r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n        _defineProperty(e, r, t[r]);\n      }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n        Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n      });\n    }\n    return e;\n  }\n  function _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n      var i = e.call(t, r || \"default\");\n      if (\"object\" != typeof i) return i;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n  }\n  function _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n  }\n  function _typeof(o) {\n    \"@babel/helpers - typeof\";\n\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n      return typeof o;\n    } : function (o) {\n      return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n  }\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n  }\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n  function _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n  }\n  function _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n  }\n  function _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var IS_BROWSER = typeof window !== 'undefined' && typeof window.document !== 'undefined';\n  var WINDOW = IS_BROWSER ? window : {};\n  var IS_TOUCH_DEVICE = IS_BROWSER && WINDOW.document.documentElement ? 'ontouchstart' in WINDOW.document.documentElement : false;\n  var HAS_POINTER_EVENT = IS_BROWSER ? 'PointerEvent' in WINDOW : false;\n  var NAMESPACE = 'cropper';\n\n  // Actions\n  var ACTION_ALL = 'all';\n  var ACTION_CROP = 'crop';\n  var ACTION_MOVE = 'move';\n  var ACTION_ZOOM = 'zoom';\n  var ACTION_EAST = 'e';\n  var ACTION_WEST = 'w';\n  var ACTION_SOUTH = 's';\n  var ACTION_NORTH = 'n';\n  var ACTION_NORTH_EAST = 'ne';\n  var ACTION_NORTH_WEST = 'nw';\n  var ACTION_SOUTH_EAST = 'se';\n  var ACTION_SOUTH_WEST = 'sw';\n\n  // Classes\n  var CLASS_CROP = \"\".concat(NAMESPACE, \"-crop\");\n  var CLASS_DISABLED = \"\".concat(NAMESPACE, \"-disabled\");\n  var CLASS_HIDDEN = \"\".concat(NAMESPACE, \"-hidden\");\n  var CLASS_HIDE = \"\".concat(NAMESPACE, \"-hide\");\n  var CLASS_INVISIBLE = \"\".concat(NAMESPACE, \"-invisible\");\n  var CLASS_MODAL = \"\".concat(NAMESPACE, \"-modal\");\n  var CLASS_MOVE = \"\".concat(NAMESPACE, \"-move\");\n\n  // Data keys\n  var DATA_ACTION = \"\".concat(NAMESPACE, \"Action\");\n  var DATA_PREVIEW = \"\".concat(NAMESPACE, \"Preview\");\n\n  // Drag modes\n  var DRAG_MODE_CROP = 'crop';\n  var DRAG_MODE_MOVE = 'move';\n  var DRAG_MODE_NONE = 'none';\n\n  // Events\n  var EVENT_CROP = 'crop';\n  var EVENT_CROP_END = 'cropend';\n  var EVENT_CROP_MOVE = 'cropmove';\n  var EVENT_CROP_START = 'cropstart';\n  var EVENT_DBLCLICK = 'dblclick';\n  var EVENT_TOUCH_START = IS_TOUCH_DEVICE ? 'touchstart' : 'mousedown';\n  var EVENT_TOUCH_MOVE = IS_TOUCH_DEVICE ? 'touchmove' : 'mousemove';\n  var EVENT_TOUCH_END = IS_TOUCH_DEVICE ? 'touchend touchcancel' : 'mouseup';\n  var EVENT_POINTER_DOWN = HAS_POINTER_EVENT ? 'pointerdown' : EVENT_TOUCH_START;\n  var EVENT_POINTER_MOVE = HAS_POINTER_EVENT ? 'pointermove' : EVENT_TOUCH_MOVE;\n  var EVENT_POINTER_UP = HAS_POINTER_EVENT ? 'pointerup pointercancel' : EVENT_TOUCH_END;\n  var EVENT_READY = 'ready';\n  var EVENT_RESIZE = 'resize';\n  var EVENT_WHEEL = 'wheel';\n  var EVENT_ZOOM = 'zoom';\n\n  // Mime types\n  var MIME_TYPE_JPEG = 'image/jpeg';\n\n  // RegExps\n  var REGEXP_ACTIONS = /^e|w|s|n|se|sw|ne|nw|all|crop|move|zoom$/;\n  var REGEXP_DATA_URL = /^data:/;\n  var REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\n  var REGEXP_TAG_NAME = /^img|canvas$/i;\n\n  // Misc\n  // Inspired by the default width and height of a canvas element.\n  var MIN_CONTAINER_WIDTH = 200;\n  var MIN_CONTAINER_HEIGHT = 100;\n\n  var DEFAULTS = {\n    // Define the view mode of the cropper\n    viewMode: 0,\n    // 0, 1, 2, 3\n\n    // Define the dragging mode of the cropper\n    dragMode: DRAG_MODE_CROP,\n    // 'crop', 'move' or 'none'\n\n    // Define the initial aspect ratio of the crop box\n    initialAspectRatio: NaN,\n    // Define the aspect ratio of the crop box\n    aspectRatio: NaN,\n    // An object with the previous cropping result data\n    data: null,\n    // A selector for adding extra containers to preview\n    preview: '',\n    // Re-render the cropper when resize the window\n    responsive: true,\n    // Restore the cropped area after resize the window\n    restore: true,\n    // Check if the current image is a cross-origin image\n    checkCrossOrigin: true,\n    // Check the current image's Exif Orientation information\n    checkOrientation: true,\n    // Show the black modal\n    modal: true,\n    // Show the dashed lines for guiding\n    guides: true,\n    // Show the center indicator for guiding\n    center: true,\n    // Show the white modal to highlight the crop box\n    highlight: true,\n    // Show the grid background\n    background: true,\n    // Enable to crop the image automatically when initialize\n    autoCrop: true,\n    // Define the percentage of automatic cropping area when initializes\n    autoCropArea: 0.8,\n    // Enable to move the image\n    movable: true,\n    // Enable to rotate the image\n    rotatable: true,\n    // Enable to scale the image\n    scalable: true,\n    // Enable to zoom the image\n    zoomable: true,\n    // Enable to zoom the image by dragging touch\n    zoomOnTouch: true,\n    // Enable to zoom the image by wheeling mouse\n    zoomOnWheel: true,\n    // Define zoom ratio when zoom the image by wheeling mouse\n    wheelZoomRatio: 0.1,\n    // Enable to move the crop box\n    cropBoxMovable: true,\n    // Enable to resize the crop box\n    cropBoxResizable: true,\n    // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n    toggleDragModeOnDblclick: true,\n    // Size limitation\n    minCanvasWidth: 0,\n    minCanvasHeight: 0,\n    minCropBoxWidth: 0,\n    minCropBoxHeight: 0,\n    minContainerWidth: MIN_CONTAINER_WIDTH,\n    minContainerHeight: MIN_CONTAINER_HEIGHT,\n    // Shortcuts of events\n    ready: null,\n    cropstart: null,\n    cropmove: null,\n    cropend: null,\n    crop: null,\n    zoom: null\n  };\n\n  var TEMPLATE = '<div class=\"cropper-container\" touch-action=\"none\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-cropper-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-cropper-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-cropper-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-cropper-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-cropper-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-cropper-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-cropper-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-cropper-action=\"se\"></span>' + '</div>' + '</div>';\n\n  /**\n   * Check if the given value is not a number.\n   */\n  var isNaN = Number.isNaN || WINDOW.isNaN;\n\n  /**\n   * Check if the given value is a number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n   */\n  function isNumber(value) {\n    return typeof value === 'number' && !isNaN(value);\n  }\n\n  /**\n   * Check if the given value is a positive number.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a positive number, else `false`.\n   */\n  var isPositiveNumber = function isPositiveNumber(value) {\n    return value > 0 && value < Infinity;\n  };\n\n  /**\n   * Check if the given value is undefined.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n   */\n  function isUndefined(value) {\n    return typeof value === 'undefined';\n  }\n\n  /**\n   * Check if the given value is an object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n   */\n  function isObject(value) {\n    return _typeof(value) === 'object' && value !== null;\n  }\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n\n  /**\n   * Check if the given value is a plain object.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n   */\n  function isPlainObject(value) {\n    if (!isObject(value)) {\n      return false;\n    }\n    try {\n      var _constructor = value.constructor;\n      var prototype = _constructor.prototype;\n      return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n    } catch (error) {\n      return false;\n    }\n  }\n\n  /**\n   * Check if the given value is a function.\n   * @param {*} value - The value to check.\n   * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n   */\n  function isFunction(value) {\n    return typeof value === 'function';\n  }\n  var slice = Array.prototype.slice;\n\n  /**\n   * Convert array-like or iterable object to an array.\n   * @param {*} value - The value to convert.\n   * @returns {Array} Returns a new array.\n   */\n  function toArray(value) {\n    return Array.from ? Array.from(value) : slice.call(value);\n  }\n\n  /**\n   * Iterate the given data.\n   * @param {*} data - The data to iterate.\n   * @param {Function} callback - The process function for each element.\n   * @returns {*} The original data.\n   */\n  function forEach(data, callback) {\n    if (data && isFunction(callback)) {\n      if (Array.isArray(data) || isNumber(data.length) /* array-like */) {\n        toArray(data).forEach(function (value, key) {\n          callback.call(data, value, key, data);\n        });\n      } else if (isObject(data)) {\n        Object.keys(data).forEach(function (key) {\n          callback.call(data, data[key], key, data);\n        });\n      }\n    }\n    return data;\n  }\n\n  /**\n   * Extend the given object.\n   * @param {*} target - The target object to extend.\n   * @param {*} args - The rest objects for merging to the target object.\n   * @returns {Object} The extended object.\n   */\n  var assign = Object.assign || function assign(target) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (isObject(target) && args.length > 0) {\n      args.forEach(function (arg) {\n        if (isObject(arg)) {\n          Object.keys(arg).forEach(function (key) {\n            target[key] = arg[key];\n          });\n        }\n      });\n    }\n    return target;\n  };\n  var REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/;\n\n  /**\n   * Normalize decimal number.\n   * Check out {@link https://0.30000000000000004.com/}\n   * @param {number} value - The value to normalize.\n   * @param {number} [times=100000000000] - The times for normalizing.\n   * @returns {number} Returns the normalized number.\n   */\n  function normalizeDecimalNumber(value) {\n    var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n    return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n  }\n  var REGEXP_SUFFIX = /^width|height|left|top|marginLeft|marginTop$/;\n\n  /**\n   * Apply styles to the given element.\n   * @param {Element} element - The target element.\n   * @param {Object} styles - The styles for applying.\n   */\n  function setStyle(element, styles) {\n    var style = element.style;\n    forEach(styles, function (value, property) {\n      if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n        value = \"\".concat(value, \"px\");\n      }\n      style[property] = value;\n    });\n  }\n\n  /**\n   * Check if the given element has a special class.\n   * @param {Element} element - The element to check.\n   * @param {string} value - The class to search.\n   * @returns {boolean} Returns `true` if the special class was found.\n   */\n  function hasClass(element, value) {\n    return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n  }\n\n  /**\n   * Add classes to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be added.\n   */\n  function addClass(element, value) {\n    if (!value) {\n      return;\n    }\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        addClass(elem, value);\n      });\n      return;\n    }\n    if (element.classList) {\n      element.classList.add(value);\n      return;\n    }\n    var className = element.className.trim();\n    if (!className) {\n      element.className = value;\n    } else if (className.indexOf(value) < 0) {\n      element.className = \"\".concat(className, \" \").concat(value);\n    }\n  }\n\n  /**\n   * Remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be removed.\n   */\n  function removeClass(element, value) {\n    if (!value) {\n      return;\n    }\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        removeClass(elem, value);\n      });\n      return;\n    }\n    if (element.classList) {\n      element.classList.remove(value);\n      return;\n    }\n    if (element.className.indexOf(value) >= 0) {\n      element.className = element.className.replace(value, '');\n    }\n  }\n\n  /**\n   * Add or remove classes from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} value - The classes to be toggled.\n   * @param {boolean} added - Add only.\n   */\n  function toggleClass(element, value, added) {\n    if (!value) {\n      return;\n    }\n    if (isNumber(element.length)) {\n      forEach(element, function (elem) {\n        toggleClass(elem, value, added);\n      });\n      return;\n    }\n\n    // IE10-11 doesn't support the second parameter of `classList.toggle`\n    if (added) {\n      addClass(element, value);\n    } else {\n      removeClass(element, value);\n    }\n  }\n  var REGEXP_CAMEL_CASE = /([a-z\\d])([A-Z])/g;\n\n  /**\n   * Transform the given string from camelCase to kebab-case\n   * @param {string} value - The value to transform.\n   * @returns {string} The transformed value.\n   */\n  function toParamCase(value) {\n    return value.replace(REGEXP_CAMEL_CASE, '$1-$2').toLowerCase();\n  }\n\n  /**\n   * Get data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to get.\n   * @returns {string} The data value.\n   */\n  function getData(element, name) {\n    if (isObject(element[name])) {\n      return element[name];\n    }\n    if (element.dataset) {\n      return element.dataset[name];\n    }\n    return element.getAttribute(\"data-\".concat(toParamCase(name)));\n  }\n\n  /**\n   * Set data to the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to set.\n   * @param {string} data - The data value.\n   */\n  function setData(element, name, data) {\n    if (isObject(data)) {\n      element[name] = data;\n    } else if (element.dataset) {\n      element.dataset[name] = data;\n    } else {\n      element.setAttribute(\"data-\".concat(toParamCase(name)), data);\n    }\n  }\n\n  /**\n   * Remove data from the given element.\n   * @param {Element} element - The target element.\n   * @param {string} name - The data key to remove.\n   */\n  function removeData(element, name) {\n    if (isObject(element[name])) {\n      try {\n        delete element[name];\n      } catch (error) {\n        element[name] = undefined;\n      }\n    } else if (element.dataset) {\n      // #128 Safari not allows to delete dataset property\n      try {\n        delete element.dataset[name];\n      } catch (error) {\n        element.dataset[name] = undefined;\n      }\n    } else {\n      element.removeAttribute(\"data-\".concat(toParamCase(name)));\n    }\n  }\n  var REGEXP_SPACES = /\\s\\s*/;\n  var onceSupported = function () {\n    var supported = false;\n    if (IS_BROWSER) {\n      var once = false;\n      var listener = function listener() {};\n      var options = Object.defineProperty({}, 'once', {\n        get: function get() {\n          supported = true;\n          return once;\n        },\n        /**\n         * This setter can fix a `TypeError` in strict mode\n         * {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Errors/Getter_only}\n         * @param {boolean} value - The value to set\n         */\n        set: function set(value) {\n          once = value;\n        }\n      });\n      WINDOW.addEventListener('test', listener, options);\n      WINDOW.removeEventListener('test', listener, options);\n    }\n    return supported;\n  }();\n\n  /**\n   * Remove event listener from the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n  function removeListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (!onceSupported) {\n        var listeners = element.listeners;\n        if (listeners && listeners[event] && listeners[event][listener]) {\n          handler = listeners[event][listener];\n          delete listeners[event][listener];\n          if (Object.keys(listeners[event]).length === 0) {\n            delete listeners[event];\n          }\n          if (Object.keys(listeners).length === 0) {\n            delete element.listeners;\n          }\n        }\n      }\n      element.removeEventListener(event, handler, options);\n    });\n  }\n\n  /**\n   * Add event listener to the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Function} listener - The event listener.\n   * @param {Object} options - The event options.\n   */\n  function addListener(element, type, listener) {\n    var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var _handler = listener;\n    type.trim().split(REGEXP_SPACES).forEach(function (event) {\n      if (options.once && !onceSupported) {\n        var _element$listeners = element.listeners,\n          listeners = _element$listeners === void 0 ? {} : _element$listeners;\n        _handler = function handler() {\n          delete listeners[event][listener];\n          element.removeEventListener(event, _handler, options);\n          for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n            args[_key2] = arguments[_key2];\n          }\n          listener.apply(element, args);\n        };\n        if (!listeners[event]) {\n          listeners[event] = {};\n        }\n        if (listeners[event][listener]) {\n          element.removeEventListener(event, listeners[event][listener], options);\n        }\n        listeners[event][listener] = _handler;\n        element.listeners = listeners;\n      }\n      element.addEventListener(event, _handler, options);\n    });\n  }\n\n  /**\n   * Dispatch event on the target element.\n   * @param {Element} element - The event target.\n   * @param {string} type - The event type(s).\n   * @param {Object} data - The additional event data.\n   * @returns {boolean} Indicate if the event is default prevented or not.\n   */\n  function dispatchEvent(element, type, data) {\n    var event;\n\n    // Event and CustomEvent on IE9-11 are global objects, not constructors\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      event = new CustomEvent(type, {\n        detail: data,\n        bubbles: true,\n        cancelable: true\n      });\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n    return element.dispatchEvent(event);\n  }\n\n  /**\n   * Get the offset base on the document.\n   * @param {Element} element - The target element.\n   * @returns {Object} The offset data.\n   */\n  function getOffset(element) {\n    var box = element.getBoundingClientRect();\n    return {\n      left: box.left + (window.pageXOffset - document.documentElement.clientLeft),\n      top: box.top + (window.pageYOffset - document.documentElement.clientTop)\n    };\n  }\n  var location = WINDOW.location;\n  var REGEXP_ORIGINS = /^(\\w+:)\\/\\/([^:/?#]*):?(\\d*)/i;\n\n  /**\n   * Check if the given URL is a cross origin URL.\n   * @param {string} url - The target URL.\n   * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n   */\n  function isCrossOriginURL(url) {\n    var parts = url.match(REGEXP_ORIGINS);\n    return parts !== null && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n  }\n\n  /**\n   * Add timestamp to the given URL.\n   * @param {string} url - The target URL.\n   * @returns {string} The result URL.\n   */\n  function addTimestamp(url) {\n    var timestamp = \"timestamp=\".concat(new Date().getTime());\n    return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n  }\n\n  /**\n   * Get transforms base on the given object.\n   * @param {Object} obj - The target object.\n   * @returns {string} A string contains transform values.\n   */\n  function getTransforms(_ref) {\n    var rotate = _ref.rotate,\n      scaleX = _ref.scaleX,\n      scaleY = _ref.scaleY,\n      translateX = _ref.translateX,\n      translateY = _ref.translateY;\n    var values = [];\n    if (isNumber(translateX) && translateX !== 0) {\n      values.push(\"translateX(\".concat(translateX, \"px)\"));\n    }\n    if (isNumber(translateY) && translateY !== 0) {\n      values.push(\"translateY(\".concat(translateY, \"px)\"));\n    }\n\n    // Rotate should come first before scale to match orientation transform\n    if (isNumber(rotate) && rotate !== 0) {\n      values.push(\"rotate(\".concat(rotate, \"deg)\"));\n    }\n    if (isNumber(scaleX) && scaleX !== 1) {\n      values.push(\"scaleX(\".concat(scaleX, \")\"));\n    }\n    if (isNumber(scaleY) && scaleY !== 1) {\n      values.push(\"scaleY(\".concat(scaleY, \")\"));\n    }\n    var transform = values.length ? values.join(' ') : 'none';\n    return {\n      WebkitTransform: transform,\n      msTransform: transform,\n      transform: transform\n    };\n  }\n\n  /**\n   * Get the max ratio of a group of pointers.\n   * @param {string} pointers - The target pointers.\n   * @returns {number} The result ratio.\n   */\n  function getMaxZoomRatio(pointers) {\n    var pointers2 = _objectSpread2({}, pointers);\n    var maxRatio = 0;\n    forEach(pointers, function (pointer, pointerId) {\n      delete pointers2[pointerId];\n      forEach(pointers2, function (pointer2) {\n        var x1 = Math.abs(pointer.startX - pointer2.startX);\n        var y1 = Math.abs(pointer.startY - pointer2.startY);\n        var x2 = Math.abs(pointer.endX - pointer2.endX);\n        var y2 = Math.abs(pointer.endY - pointer2.endY);\n        var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n        var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n        var ratio = (z2 - z1) / z1;\n        if (Math.abs(ratio) > Math.abs(maxRatio)) {\n          maxRatio = ratio;\n        }\n      });\n    });\n    return maxRatio;\n  }\n\n  /**\n   * Get a pointer from an event object.\n   * @param {Object} event - The target event object.\n   * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n   * @returns {Object} The result pointer contains start and/or end point coordinates.\n   */\n  function getPointer(_ref2, endOnly) {\n    var pageX = _ref2.pageX,\n      pageY = _ref2.pageY;\n    var end = {\n      endX: pageX,\n      endY: pageY\n    };\n    return endOnly ? end : _objectSpread2({\n      startX: pageX,\n      startY: pageY\n    }, end);\n  }\n\n  /**\n   * Get the center point coordinate of a group of pointers.\n   * @param {Object} pointers - The target pointers.\n   * @returns {Object} The center point coordinate.\n   */\n  function getPointersCenter(pointers) {\n    var pageX = 0;\n    var pageY = 0;\n    var count = 0;\n    forEach(pointers, function (_ref3) {\n      var startX = _ref3.startX,\n        startY = _ref3.startY;\n      pageX += startX;\n      pageY += startY;\n      count += 1;\n    });\n    pageX /= count;\n    pageY /= count;\n    return {\n      pageX: pageX,\n      pageY: pageY\n    };\n  }\n\n  /**\n   * Get the max sizes in a rectangle under the given aspect ratio.\n   * @param {Object} data - The original sizes.\n   * @param {string} [type='contain'] - The adjust type.\n   * @returns {Object} The result sizes.\n   */\n  function getAdjustedSizes(_ref4) {\n    var aspectRatio = _ref4.aspectRatio,\n      height = _ref4.height,\n      width = _ref4.width;\n    var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'contain';\n    var isValidWidth = isPositiveNumber(width);\n    var isValidHeight = isPositiveNumber(height);\n    if (isValidWidth && isValidHeight) {\n      var adjustedWidth = height * aspectRatio;\n      if (type === 'contain' && adjustedWidth > width || type === 'cover' && adjustedWidth < width) {\n        height = width / aspectRatio;\n      } else {\n        width = height * aspectRatio;\n      }\n    } else if (isValidWidth) {\n      height = width / aspectRatio;\n    } else if (isValidHeight) {\n      width = height * aspectRatio;\n    }\n    return {\n      width: width,\n      height: height\n    };\n  }\n\n  /**\n   * Get the new sizes of a rectangle after rotated.\n   * @param {Object} data - The original sizes.\n   * @returns {Object} The result sizes.\n   */\n  function getRotatedSizes(_ref5) {\n    var width = _ref5.width,\n      height = _ref5.height,\n      degree = _ref5.degree;\n    degree = Math.abs(degree) % 180;\n    if (degree === 90) {\n      return {\n        width: height,\n        height: width\n      };\n    }\n    var arc = degree % 90 * Math.PI / 180;\n    var sinArc = Math.sin(arc);\n    var cosArc = Math.cos(arc);\n    var newWidth = width * cosArc + height * sinArc;\n    var newHeight = width * sinArc + height * cosArc;\n    return degree > 90 ? {\n      width: newHeight,\n      height: newWidth\n    } : {\n      width: newWidth,\n      height: newHeight\n    };\n  }\n\n  /**\n   * Get a canvas which drew the given image.\n   * @param {HTMLImageElement} image - The image for drawing.\n   * @param {Object} imageData - The image data.\n   * @param {Object} canvasData - The canvas data.\n   * @param {Object} options - The options.\n   * @returns {HTMLCanvasElement} The result canvas.\n   */\n  function getSourceCanvas(image, _ref6, _ref7, _ref8) {\n    var imageAspectRatio = _ref6.aspectRatio,\n      imageNaturalWidth = _ref6.naturalWidth,\n      imageNaturalHeight = _ref6.naturalHeight,\n      _ref6$rotate = _ref6.rotate,\n      rotate = _ref6$rotate === void 0 ? 0 : _ref6$rotate,\n      _ref6$scaleX = _ref6.scaleX,\n      scaleX = _ref6$scaleX === void 0 ? 1 : _ref6$scaleX,\n      _ref6$scaleY = _ref6.scaleY,\n      scaleY = _ref6$scaleY === void 0 ? 1 : _ref6$scaleY;\n    var aspectRatio = _ref7.aspectRatio,\n      naturalWidth = _ref7.naturalWidth,\n      naturalHeight = _ref7.naturalHeight;\n    var _ref8$fillColor = _ref8.fillColor,\n      fillColor = _ref8$fillColor === void 0 ? 'transparent' : _ref8$fillColor,\n      _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n      imageSmoothingEnabled = _ref8$imageSmoothingE === void 0 ? true : _ref8$imageSmoothingE,\n      _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n      imageSmoothingQuality = _ref8$imageSmoothingQ === void 0 ? 'low' : _ref8$imageSmoothingQ,\n      _ref8$maxWidth = _ref8.maxWidth,\n      maxWidth = _ref8$maxWidth === void 0 ? Infinity : _ref8$maxWidth,\n      _ref8$maxHeight = _ref8.maxHeight,\n      maxHeight = _ref8$maxHeight === void 0 ? Infinity : _ref8$maxHeight,\n      _ref8$minWidth = _ref8.minWidth,\n      minWidth = _ref8$minWidth === void 0 ? 0 : _ref8$minWidth,\n      _ref8$minHeight = _ref8.minHeight,\n      minHeight = _ref8$minHeight === void 0 ? 0 : _ref8$minHeight;\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n    var maxSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var minSizes = getAdjustedSizes({\n      aspectRatio: aspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n    var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight));\n\n    // Note: should always use image's natural sizes for drawing as\n    // imageData.naturalWidth === canvasData.naturalHeight when rotate % 180 === 90\n    var destMaxSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: maxWidth,\n      height: maxHeight\n    });\n    var destMinSizes = getAdjustedSizes({\n      aspectRatio: imageAspectRatio,\n      width: minWidth,\n      height: minHeight\n    }, 'cover');\n    var destWidth = Math.min(destMaxSizes.width, Math.max(destMinSizes.width, imageNaturalWidth));\n    var destHeight = Math.min(destMaxSizes.height, Math.max(destMinSizes.height, imageNaturalHeight));\n    var params = [-destWidth / 2, -destHeight / 2, destWidth, destHeight];\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n    context.fillStyle = fillColor;\n    context.fillRect(0, 0, width, height);\n    context.save();\n    context.translate(width / 2, height / 2);\n    context.rotate(rotate * Math.PI / 180);\n    context.scale(scaleX, scaleY);\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n    context.imageSmoothingQuality = imageSmoothingQuality;\n    context.drawImage.apply(context, [image].concat(_toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n    context.restore();\n    return canvas;\n  }\n  var fromCharCode = String.fromCharCode;\n\n  /**\n   * Get string from char code in data view.\n   * @param {DataView} dataView - The data view for read.\n   * @param {number} start - The start index.\n   * @param {number} length - The read length.\n   * @returns {string} The read result.\n   */\n  function getStringFromCharCode(dataView, start, length) {\n    var str = '';\n    length += start;\n    for (var i = start; i < length; i += 1) {\n      str += fromCharCode(dataView.getUint8(i));\n    }\n    return str;\n  }\n  var REGEXP_DATA_URL_HEAD = /^data:.*,/;\n\n  /**\n   * Transform Data URL to array buffer.\n   * @param {string} dataURL - The Data URL to transform.\n   * @returns {ArrayBuffer} The result array buffer.\n   */\n  function dataURLToArrayBuffer(dataURL) {\n    var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n    var binary = atob(base64);\n    var arrayBuffer = new ArrayBuffer(binary.length);\n    var uint8 = new Uint8Array(arrayBuffer);\n    forEach(uint8, function (value, i) {\n      uint8[i] = binary.charCodeAt(i);\n    });\n    return arrayBuffer;\n  }\n\n  /**\n   * Transform array buffer to Data URL.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n   * @param {string} mimeType - The mime type of the Data URL.\n   * @returns {string} The result Data URL.\n   */\n  function arrayBufferToDataURL(arrayBuffer, mimeType) {\n    var chunks = [];\n\n    // Chunk Typed Array for better performance (#435)\n    var chunkSize = 8192;\n    var uint8 = new Uint8Array(arrayBuffer);\n    while (uint8.length > 0) {\n      // XXX: Babel's `toConsumableArray` helper will throw error in IE or Safari 9\n      // eslint-disable-next-line prefer-spread\n      chunks.push(fromCharCode.apply(null, toArray(uint8.subarray(0, chunkSize))));\n      uint8 = uint8.subarray(chunkSize);\n    }\n    return \"data:\".concat(mimeType, \";base64,\").concat(btoa(chunks.join('')));\n  }\n\n  /**\n   * Get orientation value from given array buffer.\n   * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n   * @returns {number} The read orientation value.\n   */\n  function resetAndGetOrientation(arrayBuffer) {\n    var dataView = new DataView(arrayBuffer);\n    var orientation;\n\n    // Ignores range error when the image does not have correct Exif information\n    try {\n      var littleEndian;\n      var app1Start;\n      var ifdStart;\n\n      // Only handle JPEG image (start by 0xFFD8)\n      if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n        var length = dataView.byteLength;\n        var offset = 2;\n        while (offset + 1 < length) {\n          if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n            app1Start = offset;\n            break;\n          }\n          offset += 1;\n        }\n      }\n      if (app1Start) {\n        var exifIDCode = app1Start + 4;\n        var tiffOffset = app1Start + 10;\n        if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n          var endianness = dataView.getUint16(tiffOffset);\n          littleEndian = endianness === 0x4949;\n          if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n            if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n              var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n              if (firstIFDOffset >= 0x00000008) {\n                ifdStart = tiffOffset + firstIFDOffset;\n              }\n            }\n          }\n        }\n      }\n      if (ifdStart) {\n        var _length = dataView.getUint16(ifdStart, littleEndian);\n        var _offset;\n        var i;\n        for (i = 0; i < _length; i += 1) {\n          _offset = ifdStart + i * 12 + 2;\n          if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\n            // 8 is the offset of the current tag's value\n            _offset += 8;\n\n            // Get the original orientation value\n            orientation = dataView.getUint16(_offset, littleEndian);\n\n            // Override the orientation with its default value\n            dataView.setUint16(_offset, 1, littleEndian);\n            break;\n          }\n        }\n      }\n    } catch (error) {\n      orientation = 1;\n    }\n    return orientation;\n  }\n\n  /**\n   * Parse Exif Orientation value.\n   * @param {number} orientation - The orientation to parse.\n   * @returns {Object} The parsed result.\n   */\n  function parseOrientation(orientation) {\n    var rotate = 0;\n    var scaleX = 1;\n    var scaleY = 1;\n    switch (orientation) {\n      // Flip horizontal\n      case 2:\n        scaleX = -1;\n        break;\n\n      // Rotate left 180°\n      case 3:\n        rotate = -180;\n        break;\n\n      // Flip vertical\n      case 4:\n        scaleY = -1;\n        break;\n\n      // Flip vertical and rotate right 90°\n      case 5:\n        rotate = 90;\n        scaleY = -1;\n        break;\n\n      // Rotate right 90°\n      case 6:\n        rotate = 90;\n        break;\n\n      // Flip horizontal and rotate right 90°\n      case 7:\n        rotate = 90;\n        scaleX = -1;\n        break;\n\n      // Rotate left 90°\n      case 8:\n        rotate = -90;\n        break;\n    }\n    return {\n      rotate: rotate,\n      scaleX: scaleX,\n      scaleY: scaleY\n    };\n  }\n\n  var render = {\n    render: function render() {\n      this.initContainer();\n      this.initCanvas();\n      this.initCropBox();\n      this.renderCanvas();\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    },\n    initContainer: function initContainer() {\n      var element = this.element,\n        options = this.options,\n        container = this.container,\n        cropper = this.cropper;\n      var minWidth = Number(options.minContainerWidth);\n      var minHeight = Number(options.minContainerHeight);\n      addClass(cropper, CLASS_HIDDEN);\n      removeClass(element, CLASS_HIDDEN);\n      var containerData = {\n        width: Math.max(container.offsetWidth, minWidth >= 0 ? minWidth : MIN_CONTAINER_WIDTH),\n        height: Math.max(container.offsetHeight, minHeight >= 0 ? minHeight : MIN_CONTAINER_HEIGHT)\n      };\n      this.containerData = containerData;\n      setStyle(cropper, {\n        width: containerData.width,\n        height: containerData.height\n      });\n      addClass(element, CLASS_HIDDEN);\n      removeClass(cropper, CLASS_HIDDEN);\n    },\n    // Canvas (image wrapper)\n    initCanvas: function initCanvas() {\n      var containerData = this.containerData,\n        imageData = this.imageData;\n      var viewMode = this.options.viewMode;\n      var rotated = Math.abs(imageData.rotate) % 180 === 90;\n      var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n      var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n      var aspectRatio = naturalWidth / naturalHeight;\n      var canvasWidth = containerData.width;\n      var canvasHeight = containerData.height;\n      if (containerData.height * aspectRatio > containerData.width) {\n        if (viewMode === 3) {\n          canvasWidth = containerData.height * aspectRatio;\n        } else {\n          canvasHeight = containerData.width / aspectRatio;\n        }\n      } else if (viewMode === 3) {\n        canvasHeight = containerData.width / aspectRatio;\n      } else {\n        canvasWidth = containerData.height * aspectRatio;\n      }\n      var canvasData = {\n        aspectRatio: aspectRatio,\n        naturalWidth: naturalWidth,\n        naturalHeight: naturalHeight,\n        width: canvasWidth,\n        height: canvasHeight\n      };\n      this.canvasData = canvasData;\n      this.limited = viewMode === 1 || viewMode === 2;\n      this.limitCanvas(true, true);\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      canvasData.left = (containerData.width - canvasData.width) / 2;\n      canvasData.top = (containerData.height - canvasData.height) / 2;\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      this.initialCanvasData = assign({}, canvasData);\n    },\n    limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n      var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n      var viewMode = options.viewMode;\n      var aspectRatio = canvasData.aspectRatio;\n      var cropped = this.cropped && cropBoxData;\n      if (sizeLimited) {\n        var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n        var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n        if (viewMode > 1) {\n          minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n          minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n          if (viewMode === 3) {\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        } else if (viewMode > 0) {\n          if (minCanvasWidth) {\n            minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n          } else if (minCanvasHeight) {\n            minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n          } else if (cropped) {\n            minCanvasWidth = cropBoxData.width;\n            minCanvasHeight = cropBoxData.height;\n            if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n              minCanvasWidth = minCanvasHeight * aspectRatio;\n            } else {\n              minCanvasHeight = minCanvasWidth / aspectRatio;\n            }\n          }\n        }\n        var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: minCanvasWidth,\n          height: minCanvasHeight\n        });\n        minCanvasWidth = _getAdjustedSizes.width;\n        minCanvasHeight = _getAdjustedSizes.height;\n        canvasData.minWidth = minCanvasWidth;\n        canvasData.minHeight = minCanvasHeight;\n        canvasData.maxWidth = Infinity;\n        canvasData.maxHeight = Infinity;\n      }\n      if (positionLimited) {\n        if (viewMode > (cropped ? 0 : 1)) {\n          var newCanvasLeft = containerData.width - canvasData.width;\n          var newCanvasTop = containerData.height - canvasData.height;\n          canvasData.minLeft = Math.min(0, newCanvasLeft);\n          canvasData.minTop = Math.min(0, newCanvasTop);\n          canvasData.maxLeft = Math.max(0, newCanvasLeft);\n          canvasData.maxTop = Math.max(0, newCanvasTop);\n          if (cropped && this.limited) {\n            canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n            canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n            canvasData.maxLeft = cropBoxData.left;\n            canvasData.maxTop = cropBoxData.top;\n            if (viewMode === 2) {\n              if (canvasData.width >= containerData.width) {\n                canvasData.minLeft = Math.min(0, newCanvasLeft);\n                canvasData.maxLeft = Math.max(0, newCanvasLeft);\n              }\n              if (canvasData.height >= containerData.height) {\n                canvasData.minTop = Math.min(0, newCanvasTop);\n                canvasData.maxTop = Math.max(0, newCanvasTop);\n              }\n            }\n          }\n        } else {\n          canvasData.minLeft = -canvasData.width;\n          canvasData.minTop = -canvasData.height;\n          canvasData.maxLeft = containerData.width;\n          canvasData.maxTop = containerData.height;\n        }\n      }\n    },\n    renderCanvas: function renderCanvas(changed, transformed) {\n      var canvasData = this.canvasData,\n        imageData = this.imageData;\n      if (transformed) {\n        var _getRotatedSizes = getRotatedSizes({\n            width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n            height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n            degree: imageData.rotate || 0\n          }),\n          naturalWidth = _getRotatedSizes.width,\n          naturalHeight = _getRotatedSizes.height;\n        var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n        var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n        canvasData.left -= (width - canvasData.width) / 2;\n        canvasData.top -= (height - canvasData.height) / 2;\n        canvasData.width = width;\n        canvasData.height = height;\n        canvasData.aspectRatio = naturalWidth / naturalHeight;\n        canvasData.naturalWidth = naturalWidth;\n        canvasData.naturalHeight = naturalHeight;\n        this.limitCanvas(true, false);\n      }\n      if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n        canvasData.left = canvasData.oldLeft;\n      }\n      if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n        canvasData.top = canvasData.oldTop;\n      }\n      canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n      canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n      this.limitCanvas(false, true);\n      canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n      canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n      canvasData.oldLeft = canvasData.left;\n      canvasData.oldTop = canvasData.top;\n      setStyle(this.canvas, assign({\n        width: canvasData.width,\n        height: canvasData.height\n      }, getTransforms({\n        translateX: canvasData.left,\n        translateY: canvasData.top\n      })));\n      this.renderImage(changed);\n      if (this.cropped && this.limited) {\n        this.limitCropBox(true, true);\n      }\n    },\n    renderImage: function renderImage(changed) {\n      var canvasData = this.canvasData,\n        imageData = this.imageData;\n      var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n      var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n      assign(imageData, {\n        width: width,\n        height: height,\n        left: (canvasData.width - width) / 2,\n        top: (canvasData.height - height) / 2\n      });\n      setStyle(this.image, assign({\n        width: imageData.width,\n        height: imageData.height\n      }, getTransforms(assign({\n        translateX: imageData.left,\n        translateY: imageData.top\n      }, imageData))));\n      if (changed) {\n        this.output();\n      }\n    },\n    initCropBox: function initCropBox() {\n      var options = this.options,\n        canvasData = this.canvasData;\n      var aspectRatio = options.aspectRatio || options.initialAspectRatio;\n      var autoCropArea = Number(options.autoCropArea) || 0.8;\n      var cropBoxData = {\n        width: canvasData.width,\n        height: canvasData.height\n      };\n      if (aspectRatio) {\n        if (canvasData.height * aspectRatio > canvasData.width) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n      this.cropBoxData = cropBoxData;\n      this.limitCropBox(true, true);\n\n      // Initialize auto crop area\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n\n      // The width/height of auto crop area must large than \"minWidth/Height\"\n      cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n      cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n      cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n      cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      this.initialCropBoxData = assign({}, cropBoxData);\n    },\n    limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n      var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData,\n        limited = this.limited;\n      var aspectRatio = options.aspectRatio;\n      if (sizeLimited) {\n        var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n        var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n        var maxCropBoxWidth = limited ? Math.min(containerData.width, canvasData.width, canvasData.width + canvasData.left, containerData.width - canvasData.left) : containerData.width;\n        var maxCropBoxHeight = limited ? Math.min(containerData.height, canvasData.height, canvasData.height + canvasData.top, containerData.height - canvasData.top) : containerData.height;\n\n        // The min/maxCropBoxWidth/Height must be less than container's width/height\n        minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n        minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n        if (aspectRatio) {\n          if (minCropBoxWidth && minCropBoxHeight) {\n            if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n              minCropBoxHeight = minCropBoxWidth / aspectRatio;\n            } else {\n              minCropBoxWidth = minCropBoxHeight * aspectRatio;\n            }\n          } else if (minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else if (minCropBoxHeight) {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n          if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n            maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n          } else {\n            maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n          }\n        }\n\n        // The minWidth/Height must be less than maxWidth/Height\n        cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n        cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n        cropBoxData.maxWidth = maxCropBoxWidth;\n        cropBoxData.maxHeight = maxCropBoxHeight;\n      }\n      if (positionLimited) {\n        if (limited) {\n          cropBoxData.minLeft = Math.max(0, canvasData.left);\n          cropBoxData.minTop = Math.max(0, canvasData.top);\n          cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n          cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n        } else {\n          cropBoxData.minLeft = 0;\n          cropBoxData.minTop = 0;\n          cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n          cropBoxData.maxTop = containerData.height - cropBoxData.height;\n        }\n      }\n    },\n    renderCropBox: function renderCropBox() {\n      var options = this.options,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData;\n      if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n        cropBoxData.left = cropBoxData.oldLeft;\n      }\n      if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n        cropBoxData.top = cropBoxData.oldTop;\n      }\n      cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n      cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n      this.limitCropBox(false, true);\n      cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n      cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n      cropBoxData.oldLeft = cropBoxData.left;\n      cropBoxData.oldTop = cropBoxData.top;\n      if (options.movable && options.cropBoxMovable) {\n        // Turn to move the canvas when the crop box is equal to the container\n        setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n      }\n      setStyle(this.cropBox, assign({\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      }, getTransforms({\n        translateX: cropBoxData.left,\n        translateY: cropBoxData.top\n      })));\n      if (this.cropped && this.limited) {\n        this.limitCanvas(true, true);\n      }\n      if (!this.disabled) {\n        this.output();\n      }\n    },\n    output: function output() {\n      this.preview();\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  };\n\n  var preview = {\n    initPreview: function initPreview() {\n      var element = this.element,\n        crossOrigin = this.crossOrigin;\n      var preview = this.options.preview;\n      var url = crossOrigin ? this.crossOriginUrl : this.url;\n      var alt = element.alt || 'The image to preview';\n      var image = document.createElement('img');\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n      image.src = url;\n      image.alt = alt;\n      this.viewBox.appendChild(image);\n      this.viewBoxImage = image;\n      if (!preview) {\n        return;\n      }\n      var previews = preview;\n      if (typeof preview === 'string') {\n        previews = element.ownerDocument.querySelectorAll(preview);\n      } else if (preview.querySelector) {\n        previews = [preview];\n      }\n      this.previews = previews;\n      forEach(previews, function (el) {\n        var img = document.createElement('img');\n\n        // Save the original size for recover\n        setData(el, DATA_PREVIEW, {\n          width: el.offsetWidth,\n          height: el.offsetHeight,\n          html: el.innerHTML\n        });\n        if (crossOrigin) {\n          img.crossOrigin = crossOrigin;\n        }\n        img.src = url;\n        img.alt = alt;\n\n        /**\n         * Override img element styles\n         * Add `display:block` to avoid margin top issue\n         * Add `height:auto` to override `height` attribute on IE8\n         * (Occur only when margin-top <= -height)\n         */\n        img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n        el.innerHTML = '';\n        el.appendChild(img);\n      });\n    },\n    resetPreview: function resetPreview() {\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        setStyle(element, {\n          width: data.width,\n          height: data.height\n        });\n        element.innerHTML = data.html;\n        removeData(element, DATA_PREVIEW);\n      });\n    },\n    preview: function preview() {\n      var imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n      var cropBoxWidth = cropBoxData.width,\n        cropBoxHeight = cropBoxData.height;\n      var width = imageData.width,\n        height = imageData.height;\n      var left = cropBoxData.left - canvasData.left - imageData.left;\n      var top = cropBoxData.top - canvasData.top - imageData.top;\n      if (!this.cropped || this.disabled) {\n        return;\n      }\n      setStyle(this.viewBoxImage, assign({\n        width: width,\n        height: height\n      }, getTransforms(assign({\n        translateX: -left,\n        translateY: -top\n      }, imageData))));\n      forEach(this.previews, function (element) {\n        var data = getData(element, DATA_PREVIEW);\n        var originalWidth = data.width;\n        var originalHeight = data.height;\n        var newWidth = originalWidth;\n        var newHeight = originalHeight;\n        var ratio = 1;\n        if (cropBoxWidth) {\n          ratio = originalWidth / cropBoxWidth;\n          newHeight = cropBoxHeight * ratio;\n        }\n        if (cropBoxHeight && newHeight > originalHeight) {\n          ratio = originalHeight / cropBoxHeight;\n          newWidth = cropBoxWidth * ratio;\n          newHeight = originalHeight;\n        }\n        setStyle(element, {\n          width: newWidth,\n          height: newHeight\n        });\n        setStyle(element.getElementsByTagName('img')[0], assign({\n          width: width * ratio,\n          height: height * ratio\n        }, getTransforms(assign({\n          translateX: -left * ratio,\n          translateY: -top * ratio\n        }, imageData))));\n      });\n    }\n  };\n\n  var events = {\n    bind: function bind() {\n      var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n      if (isFunction(options.cropstart)) {\n        addListener(element, EVENT_CROP_START, options.cropstart);\n      }\n      if (isFunction(options.cropmove)) {\n        addListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n      if (isFunction(options.cropend)) {\n        addListener(element, EVENT_CROP_END, options.cropend);\n      }\n      if (isFunction(options.crop)) {\n        addListener(element, EVENT_CROP, options.crop);\n      }\n      if (isFunction(options.zoom)) {\n        addListener(element, EVENT_ZOOM, options.zoom);\n      }\n      addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = this.cropStart.bind(this));\n      if (options.zoomable && options.zoomOnWheel) {\n        addListener(cropper, EVENT_WHEEL, this.onWheel = this.wheel.bind(this), {\n          passive: false,\n          capture: true\n        });\n      }\n      if (options.toggleDragModeOnDblclick) {\n        addListener(cropper, EVENT_DBLCLICK, this.onDblclick = this.dblclick.bind(this));\n      }\n      addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = this.cropMove.bind(this));\n      addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = this.cropEnd.bind(this));\n      if (options.responsive) {\n        addListener(window, EVENT_RESIZE, this.onResize = this.resize.bind(this));\n      }\n    },\n    unbind: function unbind() {\n      var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n      if (isFunction(options.cropstart)) {\n        removeListener(element, EVENT_CROP_START, options.cropstart);\n      }\n      if (isFunction(options.cropmove)) {\n        removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n      }\n      if (isFunction(options.cropend)) {\n        removeListener(element, EVENT_CROP_END, options.cropend);\n      }\n      if (isFunction(options.crop)) {\n        removeListener(element, EVENT_CROP, options.crop);\n      }\n      if (isFunction(options.zoom)) {\n        removeListener(element, EVENT_ZOOM, options.zoom);\n      }\n      removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n      if (options.zoomable && options.zoomOnWheel) {\n        removeListener(cropper, EVENT_WHEEL, this.onWheel, {\n          passive: false,\n          capture: true\n        });\n      }\n      if (options.toggleDragModeOnDblclick) {\n        removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n      }\n      removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n      removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n      if (options.responsive) {\n        removeListener(window, EVENT_RESIZE, this.onResize);\n      }\n    }\n  };\n\n  var handlers = {\n    resize: function resize() {\n      if (this.disabled) {\n        return;\n      }\n      var options = this.options,\n        container = this.container,\n        containerData = this.containerData;\n      var ratioX = container.offsetWidth / containerData.width;\n      var ratioY = container.offsetHeight / containerData.height;\n      var ratio = Math.abs(ratioX - 1) > Math.abs(ratioY - 1) ? ratioX : ratioY;\n\n      // Resize when width changed or height changed\n      if (ratio !== 1) {\n        var canvasData;\n        var cropBoxData;\n        if (options.restore) {\n          canvasData = this.getCanvasData();\n          cropBoxData = this.getCropBoxData();\n        }\n        this.render();\n        if (options.restore) {\n          this.setCanvasData(forEach(canvasData, function (n, i) {\n            canvasData[i] = n * ratio;\n          }));\n          this.setCropBoxData(forEach(cropBoxData, function (n, i) {\n            cropBoxData[i] = n * ratio;\n          }));\n        }\n      }\n    },\n    dblclick: function dblclick() {\n      if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n        return;\n      }\n      this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n    },\n    wheel: function wheel(event) {\n      var _this = this;\n      var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n      var delta = 1;\n      if (this.disabled) {\n        return;\n      }\n      event.preventDefault();\n\n      // Limit wheel speed to prevent zoom too fast (#21)\n      if (this.wheeling) {\n        return;\n      }\n      this.wheeling = true;\n      setTimeout(function () {\n        _this.wheeling = false;\n      }, 50);\n      if (event.deltaY) {\n        delta = event.deltaY > 0 ? 1 : -1;\n      } else if (event.wheelDelta) {\n        delta = -event.wheelDelta / 120;\n      } else if (event.detail) {\n        delta = event.detail > 0 ? 1 : -1;\n      }\n      this.zoom(-delta * ratio, event);\n    },\n    cropStart: function cropStart(event) {\n      var buttons = event.buttons,\n        button = event.button;\n      if (this.disabled\n\n      // Handle mouse event and pointer event and ignore touch event\n      || (event.type === 'mousedown' || event.type === 'pointerdown' && event.pointerType === 'mouse') && (\n      // No primary button (Usually the left button)\n      isNumber(buttons) && buttons !== 1 || isNumber(button) && button !== 0\n\n      // Open context menu\n      || event.ctrlKey)) {\n        return;\n      }\n      var options = this.options,\n        pointers = this.pointers;\n      var action;\n      if (event.changedTouches) {\n        // Handle touch event\n        forEach(event.changedTouches, function (touch) {\n          pointers[touch.identifier] = getPointer(touch);\n        });\n      } else {\n        // Handle mouse event and pointer event\n        pointers[event.pointerId || 0] = getPointer(event);\n      }\n      if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n        action = ACTION_ZOOM;\n      } else {\n        action = getData(event.target, DATA_ACTION);\n      }\n      if (!REGEXP_ACTIONS.test(action)) {\n        return;\n      }\n      if (dispatchEvent(this.element, EVENT_CROP_START, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n\n      // This line is required for preventing page zooming in iOS browsers\n      event.preventDefault();\n      this.action = action;\n      this.cropping = false;\n      if (action === ACTION_CROP) {\n        this.cropping = true;\n        addClass(this.dragBox, CLASS_MODAL);\n      }\n    },\n    cropMove: function cropMove(event) {\n      var action = this.action;\n      if (this.disabled || !action) {\n        return;\n      }\n      var pointers = this.pointers;\n      event.preventDefault();\n      if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n        originalEvent: event,\n        action: action\n      }) === false) {\n        return;\n      }\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          // The first parameter should not be undefined (#432)\n          assign(pointers[touch.identifier] || {}, getPointer(touch, true));\n        });\n      } else {\n        assign(pointers[event.pointerId || 0] || {}, getPointer(event, true));\n      }\n      this.change(event);\n    },\n    cropEnd: function cropEnd(event) {\n      if (this.disabled) {\n        return;\n      }\n      var action = this.action,\n        pointers = this.pointers;\n      if (event.changedTouches) {\n        forEach(event.changedTouches, function (touch) {\n          delete pointers[touch.identifier];\n        });\n      } else {\n        delete pointers[event.pointerId || 0];\n      }\n      if (!action) {\n        return;\n      }\n      event.preventDefault();\n      if (!Object.keys(pointers).length) {\n        this.action = '';\n      }\n      if (this.cropping) {\n        this.cropping = false;\n        toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n      }\n      dispatchEvent(this.element, EVENT_CROP_END, {\n        originalEvent: event,\n        action: action\n      });\n    }\n  };\n\n  var change = {\n    change: function change(event) {\n      var options = this.options,\n        canvasData = this.canvasData,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData,\n        pointers = this.pointers;\n      var action = this.action;\n      var aspectRatio = options.aspectRatio;\n      var left = cropBoxData.left,\n        top = cropBoxData.top,\n        width = cropBoxData.width,\n        height = cropBoxData.height;\n      var right = left + width;\n      var bottom = top + height;\n      var minLeft = 0;\n      var minTop = 0;\n      var maxWidth = containerData.width;\n      var maxHeight = containerData.height;\n      var renderable = true;\n      var offset;\n\n      // Locking aspect ratio in \"free mode\" by holding shift key\n      if (!aspectRatio && event.shiftKey) {\n        aspectRatio = width && height ? width / height : 1;\n      }\n      if (this.limited) {\n        minLeft = cropBoxData.minLeft;\n        minTop = cropBoxData.minTop;\n        maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n        maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n      }\n      var pointer = pointers[Object.keys(pointers)[0]];\n      var range = {\n        x: pointer.endX - pointer.startX,\n        y: pointer.endY - pointer.startY\n      };\n      var check = function check(side) {\n        switch (side) {\n          case ACTION_EAST:\n            if (right + range.x > maxWidth) {\n              range.x = maxWidth - right;\n            }\n            break;\n          case ACTION_WEST:\n            if (left + range.x < minLeft) {\n              range.x = minLeft - left;\n            }\n            break;\n          case ACTION_NORTH:\n            if (top + range.y < minTop) {\n              range.y = minTop - top;\n            }\n            break;\n          case ACTION_SOUTH:\n            if (bottom + range.y > maxHeight) {\n              range.y = maxHeight - bottom;\n            }\n            break;\n        }\n      };\n      switch (action) {\n        // Move crop box\n        case ACTION_ALL:\n          left += range.x;\n          top += range.y;\n          break;\n\n        // Resize crop box\n        case ACTION_EAST:\n          if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n          check(ACTION_EAST);\n          width += range.x;\n          if (width < 0) {\n            action = ACTION_WEST;\n            width = -width;\n            left -= width;\n          }\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n          break;\n        case ACTION_NORTH:\n          if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          if (height < 0) {\n            action = ACTION_SOUTH;\n            height = -height;\n            top -= height;\n          }\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n          break;\n        case ACTION_WEST:\n          if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n            renderable = false;\n            break;\n          }\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n          if (width < 0) {\n            action = ACTION_EAST;\n            width = -width;\n            left -= width;\n          }\n          if (aspectRatio) {\n            height = width / aspectRatio;\n            top += (cropBoxData.height - height) / 2;\n          }\n          break;\n        case ACTION_SOUTH:\n          if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n            renderable = false;\n            break;\n          }\n          check(ACTION_SOUTH);\n          height += range.y;\n          if (height < 0) {\n            action = ACTION_NORTH;\n            height = -height;\n            top -= height;\n          }\n          if (aspectRatio) {\n            width = height * aspectRatio;\n            left += (cropBoxData.width - width) / 2;\n          }\n          break;\n        case ACTION_NORTH_EAST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n              renderable = false;\n              break;\n            }\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_EAST);\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            top -= height;\n          }\n          break;\n        case ACTION_NORTH_WEST:\n          if (aspectRatio) {\n            if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n              renderable = false;\n              break;\n            }\n            check(ACTION_NORTH);\n            height -= range.y;\n            top += range.y;\n            width = height * aspectRatio;\n            left += cropBoxData.width - width;\n          } else {\n            check(ACTION_NORTH);\n            check(ACTION_WEST);\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y <= 0 && top <= minTop) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n            if (range.y <= 0) {\n              if (top > minTop) {\n                height -= range.y;\n                top += range.y;\n              }\n            } else {\n              height -= range.y;\n              top += range.y;\n            }\n          }\n          if (width < 0 && height < 0) {\n            action = ACTION_SOUTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_NORTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_SOUTH_WEST;\n            height = -height;\n            top -= height;\n          }\n          break;\n        case ACTION_SOUTH_WEST:\n          if (aspectRatio) {\n            if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n            check(ACTION_WEST);\n            width -= range.x;\n            left += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_WEST);\n            if (range.x <= 0) {\n              if (left > minLeft) {\n                width -= range.x;\n                left += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width -= range.x;\n              left += range.x;\n            }\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_EAST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            top -= height;\n          }\n          break;\n        case ACTION_SOUTH_EAST:\n          if (aspectRatio) {\n            if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n              renderable = false;\n              break;\n            }\n            check(ACTION_EAST);\n            width += range.x;\n            height = width / aspectRatio;\n          } else {\n            check(ACTION_SOUTH);\n            check(ACTION_EAST);\n            if (range.x >= 0) {\n              if (right < maxWidth) {\n                width += range.x;\n              } else if (range.y >= 0 && bottom >= maxHeight) {\n                renderable = false;\n              }\n            } else {\n              width += range.x;\n            }\n            if (range.y >= 0) {\n              if (bottom < maxHeight) {\n                height += range.y;\n              }\n            } else {\n              height += range.y;\n            }\n          }\n          if (width < 0 && height < 0) {\n            action = ACTION_NORTH_WEST;\n            height = -height;\n            width = -width;\n            top -= height;\n            left -= width;\n          } else if (width < 0) {\n            action = ACTION_SOUTH_WEST;\n            width = -width;\n            left -= width;\n          } else if (height < 0) {\n            action = ACTION_NORTH_EAST;\n            height = -height;\n            top -= height;\n          }\n          break;\n\n        // Move canvas\n        case ACTION_MOVE:\n          this.move(range.x, range.y);\n          renderable = false;\n          break;\n\n        // Zoom canvas\n        case ACTION_ZOOM:\n          this.zoom(getMaxZoomRatio(pointers), event);\n          renderable = false;\n          break;\n\n        // Create crop box\n        case ACTION_CROP:\n          if (!range.x || !range.y) {\n            renderable = false;\n            break;\n          }\n          offset = getOffset(this.cropper);\n          left = pointer.startX - offset.left;\n          top = pointer.startY - offset.top;\n          width = cropBoxData.minWidth;\n          height = cropBoxData.minHeight;\n          if (range.x > 0) {\n            action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n          } else if (range.x < 0) {\n            left -= width;\n            action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n          }\n          if (range.y < 0) {\n            top -= height;\n          }\n\n          // Show the crop box if is hidden\n          if (!this.cropped) {\n            removeClass(this.cropBox, CLASS_HIDDEN);\n            this.cropped = true;\n            if (this.limited) {\n              this.limitCropBox(true, true);\n            }\n          }\n          break;\n      }\n      if (renderable) {\n        cropBoxData.width = width;\n        cropBoxData.height = height;\n        cropBoxData.left = left;\n        cropBoxData.top = top;\n        this.action = action;\n        this.renderCropBox();\n      }\n\n      // Override\n      forEach(pointers, function (p) {\n        p.startX = p.endX;\n        p.startY = p.endY;\n      });\n    }\n  };\n\n  var methods = {\n    // Show the crop box manually\n    crop: function crop() {\n      if (this.ready && !this.cropped && !this.disabled) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n        removeClass(this.cropBox, CLASS_HIDDEN);\n        this.setCropBoxData(this.initialCropBoxData);\n      }\n      return this;\n    },\n    // Reset the image and crop box to their initial states\n    reset: function reset() {\n      if (this.ready && !this.disabled) {\n        this.imageData = assign({}, this.initialImageData);\n        this.canvasData = assign({}, this.initialCanvasData);\n        this.cropBoxData = assign({}, this.initialCropBoxData);\n        this.renderCanvas();\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n      return this;\n    },\n    // Clear the crop box\n    clear: function clear() {\n      if (this.cropped && !this.disabled) {\n        assign(this.cropBoxData, {\n          left: 0,\n          top: 0,\n          width: 0,\n          height: 0\n        });\n        this.cropped = false;\n        this.renderCropBox();\n        this.limitCanvas(true, true);\n\n        // Render canvas after crop box rendered\n        this.renderCanvas();\n        removeClass(this.dragBox, CLASS_MODAL);\n        addClass(this.cropBox, CLASS_HIDDEN);\n      }\n      return this;\n    },\n    /**\n     * Replace the image's src and rebuild the cropper\n     * @param {string} url - The new URL.\n     * @param {boolean} [hasSameSize] - Indicate if the new image has the same size as the old one.\n     * @returns {Cropper} this\n     */\n    replace: function replace(url) {\n      var hasSameSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (!this.disabled && url) {\n        if (this.isImg) {\n          this.element.src = url;\n        }\n        if (hasSameSize) {\n          this.url = url;\n          this.image.src = url;\n          if (this.ready) {\n            this.viewBoxImage.src = url;\n            forEach(this.previews, function (element) {\n              element.getElementsByTagName('img')[0].src = url;\n            });\n          }\n        } else {\n          if (this.isImg) {\n            this.replaced = true;\n          }\n          this.options.data = null;\n          this.uncreate();\n          this.load(url);\n        }\n      }\n      return this;\n    },\n    // Enable (unfreeze) the cropper\n    enable: function enable() {\n      if (this.ready && this.disabled) {\n        this.disabled = false;\n        removeClass(this.cropper, CLASS_DISABLED);\n      }\n      return this;\n    },\n    // Disable (freeze) the cropper\n    disable: function disable() {\n      if (this.ready && !this.disabled) {\n        this.disabled = true;\n        addClass(this.cropper, CLASS_DISABLED);\n      }\n      return this;\n    },\n    /**\n     * Destroy the cropper and remove the instance from the image\n     * @returns {Cropper} this\n     */\n    destroy: function destroy() {\n      var element = this.element;\n      if (!element[NAMESPACE]) {\n        return this;\n      }\n      element[NAMESPACE] = undefined;\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n      this.uncreate();\n      return this;\n    },\n    /**\n     * Move the canvas with relative offsets\n     * @param {number} offsetX - The relative offset distance on the x-axis.\n     * @param {number} [offsetY=offsetX] - The relative offset distance on the y-axis.\n     * @returns {Cropper} this\n     */\n    move: function move(offsetX) {\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : offsetX;\n      var _this$canvasData = this.canvasData,\n        left = _this$canvasData.left,\n        top = _this$canvasData.top;\n      return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n    },\n    /**\n     * Move the canvas to an absolute point\n     * @param {number} x - The x-axis coordinate.\n     * @param {number} [y=x] - The y-axis coordinate.\n     * @returns {Cropper} this\n     */\n    moveTo: function moveTo(x) {\n      var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n      var canvasData = this.canvasData;\n      var changed = false;\n      x = Number(x);\n      y = Number(y);\n      if (this.ready && !this.disabled && this.options.movable) {\n        if (isNumber(x)) {\n          canvasData.left = x;\n          changed = true;\n        }\n        if (isNumber(y)) {\n          canvasData.top = y;\n          changed = true;\n        }\n        if (changed) {\n          this.renderCanvas(true);\n        }\n      }\n      return this;\n    },\n    /**\n     * Zoom the canvas with a relative ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoom: function zoom(ratio, _originalEvent) {\n      var canvasData = this.canvasData;\n      ratio = Number(ratio);\n      if (ratio < 0) {\n        ratio = 1 / (1 - ratio);\n      } else {\n        ratio = 1 + ratio;\n      }\n      return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n    },\n    /**\n     * Zoom the canvas to an absolute ratio\n     * @param {number} ratio - The target ratio.\n     * @param {Object} pivot - The zoom pivot point coordinate.\n     * @param {Event} _originalEvent - The original event if any.\n     * @returns {Cropper} this\n     */\n    zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n      var options = this.options,\n        canvasData = this.canvasData;\n      var width = canvasData.width,\n        height = canvasData.height,\n        naturalWidth = canvasData.naturalWidth,\n        naturalHeight = canvasData.naturalHeight;\n      ratio = Number(ratio);\n      if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n        var newWidth = naturalWidth * ratio;\n        var newHeight = naturalHeight * ratio;\n        if (dispatchEvent(this.element, EVENT_ZOOM, {\n          ratio: ratio,\n          oldRatio: width / naturalWidth,\n          originalEvent: _originalEvent\n        }) === false) {\n          return this;\n        }\n        if (_originalEvent) {\n          var pointers = this.pointers;\n          var offset = getOffset(this.cropper);\n          var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n            pageX: _originalEvent.pageX,\n            pageY: _originalEvent.pageY\n          };\n\n          // Zoom from the triggering point of the event\n          canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n        } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n          canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n          canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n        } else {\n          // Zoom from the center of the canvas\n          canvasData.left -= (newWidth - width) / 2;\n          canvasData.top -= (newHeight - height) / 2;\n        }\n        canvasData.width = newWidth;\n        canvasData.height = newHeight;\n        this.renderCanvas(true);\n      }\n      return this;\n    },\n    /**\n     * Rotate the canvas with a relative degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotate: function rotate(degree) {\n      return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n    },\n    /**\n     * Rotate the canvas to an absolute degree\n     * @param {number} degree - The rotate degree.\n     * @returns {Cropper} this\n     */\n    rotateTo: function rotateTo(degree) {\n      degree = Number(degree);\n      if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n        this.imageData.rotate = degree % 360;\n        this.renderCanvas(true, true);\n      }\n      return this;\n    },\n    /**\n     * Scale the image on the x-axis.\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @returns {Cropper} this\n     */\n    scaleX: function scaleX(_scaleX) {\n      var scaleY = this.imageData.scaleY;\n      return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n    },\n    /**\n     * Scale the image on the y-axis.\n     * @param {number} scaleY - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scaleY: function scaleY(_scaleY) {\n      var scaleX = this.imageData.scaleX;\n      return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n    },\n    /**\n     * Scale the image\n     * @param {number} scaleX - The scale ratio on the x-axis.\n     * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n     * @returns {Cropper} this\n     */\n    scale: function scale(scaleX) {\n      var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n      var imageData = this.imageData;\n      var transformed = false;\n      scaleX = Number(scaleX);\n      scaleY = Number(scaleY);\n      if (this.ready && !this.disabled && this.options.scalable) {\n        if (isNumber(scaleX)) {\n          imageData.scaleX = scaleX;\n          transformed = true;\n        }\n        if (isNumber(scaleY)) {\n          imageData.scaleY = scaleY;\n          transformed = true;\n        }\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n      }\n      return this;\n    },\n    /**\n     * Get the cropped area position and size data (base on the original image)\n     * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n     * @returns {Object} The result cropped data.\n     */\n    getData: function getData() {\n      var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n      var data;\n      if (this.ready && this.cropped) {\n        data = {\n          x: cropBoxData.left - canvasData.left,\n          y: cropBoxData.top - canvasData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n        var ratio = imageData.width / imageData.naturalWidth;\n        forEach(data, function (n, i) {\n          data[i] = n / ratio;\n        });\n        if (rounded) {\n          // In case rounding off leads to extra 1px in right or bottom border\n          // we should round the top-left corner and the dimension (#343).\n          var bottom = Math.round(data.y + data.height);\n          var right = Math.round(data.x + data.width);\n          data.x = Math.round(data.x);\n          data.y = Math.round(data.y);\n          data.width = right - data.x;\n          data.height = bottom - data.y;\n        }\n      } else {\n        data = {\n          x: 0,\n          y: 0,\n          width: 0,\n          height: 0\n        };\n      }\n      if (options.rotatable) {\n        data.rotate = imageData.rotate || 0;\n      }\n      if (options.scalable) {\n        data.scaleX = imageData.scaleX || 1;\n        data.scaleY = imageData.scaleY || 1;\n      }\n      return data;\n    },\n    /**\n     * Set the cropped area position and size with new data\n     * @param {Object} data - The new data.\n     * @returns {Cropper} this\n     */\n    setData: function setData(data) {\n      var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData;\n      var cropBoxData = {};\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        var transformed = false;\n        if (options.rotatable) {\n          if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n            imageData.rotate = data.rotate;\n            transformed = true;\n          }\n        }\n        if (options.scalable) {\n          if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n            imageData.scaleX = data.scaleX;\n            transformed = true;\n          }\n          if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n            imageData.scaleY = data.scaleY;\n            transformed = true;\n          }\n        }\n        if (transformed) {\n          this.renderCanvas(true, true);\n        }\n        var ratio = imageData.width / imageData.naturalWidth;\n        if (isNumber(data.x)) {\n          cropBoxData.left = data.x * ratio + canvasData.left;\n        }\n        if (isNumber(data.y)) {\n          cropBoxData.top = data.y * ratio + canvasData.top;\n        }\n        if (isNumber(data.width)) {\n          cropBoxData.width = data.width * ratio;\n        }\n        if (isNumber(data.height)) {\n          cropBoxData.height = data.height * ratio;\n        }\n        this.setCropBoxData(cropBoxData);\n      }\n      return this;\n    },\n    /**\n     * Get the container size data.\n     * @returns {Object} The result container data.\n     */\n    getContainerData: function getContainerData() {\n      return this.ready ? assign({}, this.containerData) : {};\n    },\n    /**\n     * Get the image position and size data.\n     * @returns {Object} The result image data.\n     */\n    getImageData: function getImageData() {\n      return this.sized ? assign({}, this.imageData) : {};\n    },\n    /**\n     * Get the canvas position and size data.\n     * @returns {Object} The result canvas data.\n     */\n    getCanvasData: function getCanvasData() {\n      var canvasData = this.canvasData;\n      var data = {};\n      if (this.ready) {\n        forEach(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n          data[n] = canvasData[n];\n        });\n      }\n      return data;\n    },\n    /**\n     * Set the canvas position and size with new data.\n     * @param {Object} data - The new canvas data.\n     * @returns {Cropper} this\n     */\n    setCanvasData: function setCanvasData(data) {\n      var canvasData = this.canvasData;\n      var aspectRatio = canvasData.aspectRatio;\n      if (this.ready && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          canvasData.left = data.left;\n        }\n        if (isNumber(data.top)) {\n          canvasData.top = data.top;\n        }\n        if (isNumber(data.width)) {\n          canvasData.width = data.width;\n          canvasData.height = data.width / aspectRatio;\n        } else if (isNumber(data.height)) {\n          canvasData.height = data.height;\n          canvasData.width = data.height * aspectRatio;\n        }\n        this.renderCanvas(true);\n      }\n      return this;\n    },\n    /**\n     * Get the crop box position and size data.\n     * @returns {Object} The result crop box data.\n     */\n    getCropBoxData: function getCropBoxData() {\n      var cropBoxData = this.cropBoxData;\n      var data;\n      if (this.ready && this.cropped) {\n        data = {\n          left: cropBoxData.left,\n          top: cropBoxData.top,\n          width: cropBoxData.width,\n          height: cropBoxData.height\n        };\n      }\n      return data || {};\n    },\n    /**\n     * Set the crop box position and size with new data.\n     * @param {Object} data - The new crop box data.\n     * @returns {Cropper} this\n     */\n    setCropBoxData: function setCropBoxData(data) {\n      var cropBoxData = this.cropBoxData;\n      var aspectRatio = this.options.aspectRatio;\n      var widthChanged;\n      var heightChanged;\n      if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n        if (isNumber(data.left)) {\n          cropBoxData.left = data.left;\n        }\n        if (isNumber(data.top)) {\n          cropBoxData.top = data.top;\n        }\n        if (isNumber(data.width) && data.width !== cropBoxData.width) {\n          widthChanged = true;\n          cropBoxData.width = data.width;\n        }\n        if (isNumber(data.height) && data.height !== cropBoxData.height) {\n          heightChanged = true;\n          cropBoxData.height = data.height;\n        }\n        if (aspectRatio) {\n          if (widthChanged) {\n            cropBoxData.height = cropBoxData.width / aspectRatio;\n          } else if (heightChanged) {\n            cropBoxData.width = cropBoxData.height * aspectRatio;\n          }\n        }\n        this.renderCropBox();\n      }\n      return this;\n    },\n    /**\n     * Get a canvas drawn the cropped image.\n     * @param {Object} [options={}] - The config options.\n     * @returns {HTMLCanvasElement} - The result canvas.\n     */\n    getCroppedCanvas: function getCroppedCanvas() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      if (!this.ready || !window.HTMLCanvasElement) {\n        return null;\n      }\n      var canvasData = this.canvasData;\n      var source = getSourceCanvas(this.image, this.imageData, canvasData, options);\n\n      // Returns the source canvas if it is not cropped.\n      if (!this.cropped) {\n        return source;\n      }\n      var _this$getData = this.getData(options.rounded),\n        initialX = _this$getData.x,\n        initialY = _this$getData.y,\n        initialWidth = _this$getData.width,\n        initialHeight = _this$getData.height;\n      var ratio = source.width / Math.floor(canvasData.naturalWidth);\n      if (ratio !== 1) {\n        initialX *= ratio;\n        initialY *= ratio;\n        initialWidth *= ratio;\n        initialHeight *= ratio;\n      }\n      var aspectRatio = initialWidth / initialHeight;\n      var maxSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.maxWidth || Infinity,\n        height: options.maxHeight || Infinity\n      });\n      var minSizes = getAdjustedSizes({\n        aspectRatio: aspectRatio,\n        width: options.minWidth || 0,\n        height: options.minHeight || 0\n      }, 'cover');\n      var _getAdjustedSizes = getAdjustedSizes({\n          aspectRatio: aspectRatio,\n          width: options.width || (ratio !== 1 ? source.width : initialWidth),\n          height: options.height || (ratio !== 1 ? source.height : initialHeight)\n        }),\n        width = _getAdjustedSizes.width,\n        height = _getAdjustedSizes.height;\n      width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n      height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      canvas.width = normalizeDecimalNumber(width);\n      canvas.height = normalizeDecimalNumber(height);\n      context.fillStyle = options.fillColor || 'transparent';\n      context.fillRect(0, 0, width, height);\n      var _options$imageSmoothi = options.imageSmoothingEnabled,\n        imageSmoothingEnabled = _options$imageSmoothi === void 0 ? true : _options$imageSmoothi,\n        imageSmoothingQuality = options.imageSmoothingQuality;\n      context.imageSmoothingEnabled = imageSmoothingEnabled;\n      if (imageSmoothingQuality) {\n        context.imageSmoothingQuality = imageSmoothingQuality;\n      }\n\n      // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n      var sourceWidth = source.width;\n      var sourceHeight = source.height;\n\n      // Source canvas parameters\n      var srcX = initialX;\n      var srcY = initialY;\n      var srcWidth;\n      var srcHeight;\n\n      // Destination canvas parameters\n      var dstX;\n      var dstY;\n      var dstWidth;\n      var dstHeight;\n      if (srcX <= -initialWidth || srcX > sourceWidth) {\n        srcX = 0;\n        srcWidth = 0;\n        dstX = 0;\n        dstWidth = 0;\n      } else if (srcX <= 0) {\n        dstX = -srcX;\n        srcX = 0;\n        srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n        dstWidth = srcWidth;\n      } else if (srcX <= sourceWidth) {\n        dstX = 0;\n        srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n        dstWidth = srcWidth;\n      }\n      if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n        srcY = 0;\n        srcHeight = 0;\n        dstY = 0;\n        dstHeight = 0;\n      } else if (srcY <= 0) {\n        dstY = -srcY;\n        srcY = 0;\n        srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n        dstHeight = srcHeight;\n      } else if (srcY <= sourceHeight) {\n        dstY = 0;\n        srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n        dstHeight = srcHeight;\n      }\n      var params = [srcX, srcY, srcWidth, srcHeight];\n\n      // Avoid \"IndexSizeError\"\n      if (dstWidth > 0 && dstHeight > 0) {\n        var scale = width / initialWidth;\n        params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n      }\n\n      // All the numerical parameters should be integer for `drawImage`\n      // https://github.com/fengyuanchen/cropper/issues/476\n      context.drawImage.apply(context, [source].concat(_toConsumableArray(params.map(function (param) {\n        return Math.floor(normalizeDecimalNumber(param));\n      }))));\n      return canvas;\n    },\n    /**\n     * Change the aspect ratio of the crop box.\n     * @param {number} aspectRatio - The new aspect ratio.\n     * @returns {Cropper} this\n     */\n    setAspectRatio: function setAspectRatio(aspectRatio) {\n      var options = this.options;\n      if (!this.disabled && !isUndefined(aspectRatio)) {\n        // 0 -> NaN\n        options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n        if (this.ready) {\n          this.initCropBox();\n          if (this.cropped) {\n            this.renderCropBox();\n          }\n        }\n      }\n      return this;\n    },\n    /**\n     * Change the drag mode.\n     * @param {string} mode - The new drag mode.\n     * @returns {Cropper} this\n     */\n    setDragMode: function setDragMode(mode) {\n      var options = this.options,\n        dragBox = this.dragBox,\n        face = this.face;\n      if (this.ready && !this.disabled) {\n        var croppable = mode === DRAG_MODE_CROP;\n        var movable = options.movable && mode === DRAG_MODE_MOVE;\n        mode = croppable || movable ? mode : DRAG_MODE_NONE;\n        options.dragMode = mode;\n        setData(dragBox, DATA_ACTION, mode);\n        toggleClass(dragBox, CLASS_CROP, croppable);\n        toggleClass(dragBox, CLASS_MOVE, movable);\n        if (!options.cropBoxMovable) {\n          // Sync drag mode to crop box when it is not movable\n          setData(face, DATA_ACTION, mode);\n          toggleClass(face, CLASS_CROP, croppable);\n          toggleClass(face, CLASS_MOVE, movable);\n        }\n      }\n      return this;\n    }\n  };\n\n  var AnotherCropper = WINDOW.Cropper;\n  var Cropper = /*#__PURE__*/function () {\n    /**\n     * Create a new Cropper.\n     * @param {Element} element - The target element for cropping.\n     * @param {Object} [options={}] - The configuration options.\n     */\n    function Cropper(element) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      _classCallCheck(this, Cropper);\n      if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n        throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n      }\n      this.element = element;\n      this.options = assign({}, DEFAULTS, isPlainObject(options) && options);\n      this.cropped = false;\n      this.disabled = false;\n      this.pointers = {};\n      this.ready = false;\n      this.reloading = false;\n      this.replaced = false;\n      this.sized = false;\n      this.sizing = false;\n      this.init();\n    }\n    return _createClass(Cropper, [{\n      key: \"init\",\n      value: function init() {\n        var element = this.element;\n        var tagName = element.tagName.toLowerCase();\n        var url;\n        if (element[NAMESPACE]) {\n          return;\n        }\n        element[NAMESPACE] = this;\n        if (tagName === 'img') {\n          this.isImg = true;\n\n          // e.g.: \"img/picture.jpg\"\n          url = element.getAttribute('src') || '';\n          this.originalUrl = url;\n\n          // Stop when it's a blank image\n          if (!url) {\n            return;\n          }\n\n          // e.g.: \"https://example.com/img/picture.jpg\"\n          url = element.src;\n        } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n          url = element.toDataURL();\n        }\n        this.load(url);\n      }\n    }, {\n      key: \"load\",\n      value: function load(url) {\n        var _this = this;\n        if (!url) {\n          return;\n        }\n        this.url = url;\n        this.imageData = {};\n        var element = this.element,\n          options = this.options;\n        if (!options.rotatable && !options.scalable) {\n          options.checkOrientation = false;\n        }\n\n        // Only IE10+ supports Typed Arrays\n        if (!options.checkOrientation || !window.ArrayBuffer) {\n          this.clone();\n          return;\n        }\n\n        // Detect the mime type of the image directly if it is a Data URL\n        if (REGEXP_DATA_URL.test(url)) {\n          // Read ArrayBuffer from Data URL of JPEG images directly for better performance\n          if (REGEXP_DATA_URL_JPEG.test(url)) {\n            this.read(dataURLToArrayBuffer(url));\n          } else {\n            // Only a JPEG image may contains Exif Orientation information,\n            // the rest types of Data URLs are not necessary to check orientation at all.\n            this.clone();\n          }\n          return;\n        }\n\n        // 1. Detect the mime type of the image by a XMLHttpRequest.\n        // 2. Load the image as ArrayBuffer for reading orientation if its a JPEG image.\n        var xhr = new XMLHttpRequest();\n        var clone = this.clone.bind(this);\n        this.reloading = true;\n        this.xhr = xhr;\n\n        // 1. Cross origin requests are only supported for protocol schemes:\n        // http, https, data, chrome, chrome-extension.\n        // 2. Access to XMLHttpRequest from a Data URL will be blocked by CORS policy\n        // in some browsers as IE11 and Safari.\n        xhr.onabort = clone;\n        xhr.onerror = clone;\n        xhr.ontimeout = clone;\n        xhr.onprogress = function () {\n          // Abort the request directly if it not a JPEG image for better performance\n          if (xhr.getResponseHeader('content-type') !== MIME_TYPE_JPEG) {\n            xhr.abort();\n          }\n        };\n        xhr.onload = function () {\n          _this.read(xhr.response);\n        };\n        xhr.onloadend = function () {\n          _this.reloading = false;\n          _this.xhr = null;\n        };\n\n        // Bust cache when there is a \"crossOrigin\" property to avoid browser cache error\n        if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n          url = addTimestamp(url);\n        }\n\n        // The third parameter is required for avoiding side-effect (#682)\n        xhr.open('GET', url, true);\n        xhr.responseType = 'arraybuffer';\n        xhr.withCredentials = element.crossOrigin === 'use-credentials';\n        xhr.send();\n      }\n    }, {\n      key: \"read\",\n      value: function read(arrayBuffer) {\n        var options = this.options,\n          imageData = this.imageData;\n\n        // Reset the orientation value to its default value 1\n        // as some iOS browsers will render image with its orientation\n        var orientation = resetAndGetOrientation(arrayBuffer);\n        var rotate = 0;\n        var scaleX = 1;\n        var scaleY = 1;\n        if (orientation > 1) {\n          // Generate a new URL which has the default orientation value\n          this.url = arrayBufferToDataURL(arrayBuffer, MIME_TYPE_JPEG);\n          var _parseOrientation = parseOrientation(orientation);\n          rotate = _parseOrientation.rotate;\n          scaleX = _parseOrientation.scaleX;\n          scaleY = _parseOrientation.scaleY;\n        }\n        if (options.rotatable) {\n          imageData.rotate = rotate;\n        }\n        if (options.scalable) {\n          imageData.scaleX = scaleX;\n          imageData.scaleY = scaleY;\n        }\n        this.clone();\n      }\n    }, {\n      key: \"clone\",\n      value: function clone() {\n        var element = this.element,\n          url = this.url;\n        var crossOrigin = element.crossOrigin;\n        var crossOriginUrl = url;\n        if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n          if (!crossOrigin) {\n            crossOrigin = 'anonymous';\n          }\n\n          // Bust cache when there is not a \"crossOrigin\" property (#519)\n          crossOriginUrl = addTimestamp(url);\n        }\n        this.crossOrigin = crossOrigin;\n        this.crossOriginUrl = crossOriginUrl;\n        var image = document.createElement('img');\n        if (crossOrigin) {\n          image.crossOrigin = crossOrigin;\n        }\n        image.src = crossOriginUrl || url;\n        image.alt = element.alt || 'The image to crop';\n        this.image = image;\n        image.onload = this.start.bind(this);\n        image.onerror = this.stop.bind(this);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }, {\n      key: \"start\",\n      value: function start() {\n        var _this2 = this;\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        this.sizing = true;\n\n        // Match all browsers that use WebKit as the layout engine in iOS devices,\n        // such as Safari for iOS, Chrome for iOS, and in-app browsers.\n        var isIOSWebKit = WINDOW.navigator && /(?:iPad|iPhone|iPod).*?AppleWebKit/i.test(WINDOW.navigator.userAgent);\n        var done = function done(naturalWidth, naturalHeight) {\n          assign(_this2.imageData, {\n            naturalWidth: naturalWidth,\n            naturalHeight: naturalHeight,\n            aspectRatio: naturalWidth / naturalHeight\n          });\n          _this2.initialImageData = assign({}, _this2.imageData);\n          _this2.sizing = false;\n          _this2.sized = true;\n          _this2.build();\n        };\n\n        // Most modern browsers (excepts iOS WebKit)\n        if (image.naturalWidth && !isIOSWebKit) {\n          done(image.naturalWidth, image.naturalHeight);\n          return;\n        }\n        var sizingImage = document.createElement('img');\n        var body = document.body || document.documentElement;\n        this.sizingImage = sizingImage;\n        sizingImage.onload = function () {\n          done(sizingImage.width, sizingImage.height);\n          if (!isIOSWebKit) {\n            body.removeChild(sizingImage);\n          }\n        };\n        sizingImage.src = image.src;\n\n        // iOS WebKit will convert the image automatically\n        // with its orientation once append it into DOM (#279)\n        if (!isIOSWebKit) {\n          sizingImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n          body.appendChild(sizingImage);\n        }\n      }\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        var image = this.image;\n        image.onload = null;\n        image.onerror = null;\n        image.parentNode.removeChild(image);\n        this.image = null;\n      }\n    }, {\n      key: \"build\",\n      value: function build() {\n        if (!this.sized || this.ready) {\n          return;\n        }\n        var element = this.element,\n          options = this.options,\n          image = this.image;\n\n        // Create cropper elements\n        var container = element.parentNode;\n        var template = document.createElement('div');\n        template.innerHTML = TEMPLATE;\n        var cropper = template.querySelector(\".\".concat(NAMESPACE, \"-container\"));\n        var canvas = cropper.querySelector(\".\".concat(NAMESPACE, \"-canvas\"));\n        var dragBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-drag-box\"));\n        var cropBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-crop-box\"));\n        var face = cropBox.querySelector(\".\".concat(NAMESPACE, \"-face\"));\n        this.container = container;\n        this.cropper = cropper;\n        this.canvas = canvas;\n        this.dragBox = dragBox;\n        this.cropBox = cropBox;\n        this.viewBox = cropper.querySelector(\".\".concat(NAMESPACE, \"-view-box\"));\n        this.face = face;\n        canvas.appendChild(image);\n\n        // Hide the original image\n        addClass(element, CLASS_HIDDEN);\n\n        // Inserts the cropper after to the current image\n        container.insertBefore(cropper, element.nextSibling);\n\n        // Show the hidden image\n        removeClass(image, CLASS_HIDE);\n        this.initPreview();\n        this.bind();\n        options.initialAspectRatio = Math.max(0, options.initialAspectRatio) || NaN;\n        options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n        options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n        addClass(cropBox, CLASS_HIDDEN);\n        if (!options.guides) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-dashed\")), CLASS_HIDDEN);\n        }\n        if (!options.center) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-center\")), CLASS_HIDDEN);\n        }\n        if (options.background) {\n          addClass(cropper, \"\".concat(NAMESPACE, \"-bg\"));\n        }\n        if (!options.highlight) {\n          addClass(face, CLASS_INVISIBLE);\n        }\n        if (options.cropBoxMovable) {\n          addClass(face, CLASS_MOVE);\n          setData(face, DATA_ACTION, ACTION_ALL);\n        }\n        if (!options.cropBoxResizable) {\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-line\")), CLASS_HIDDEN);\n          addClass(cropBox.getElementsByClassName(\"\".concat(NAMESPACE, \"-point\")), CLASS_HIDDEN);\n        }\n        this.render();\n        this.ready = true;\n        this.setDragMode(options.dragMode);\n        if (options.autoCrop) {\n          this.crop();\n        }\n        this.setData(options.data);\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n        dispatchEvent(element, EVENT_READY);\n      }\n    }, {\n      key: \"unbuild\",\n      value: function unbuild() {\n        if (!this.ready) {\n          return;\n        }\n        this.ready = false;\n        this.unbind();\n        this.resetPreview();\n        var parentNode = this.cropper.parentNode;\n        if (parentNode) {\n          parentNode.removeChild(this.cropper);\n        }\n        removeClass(this.element, CLASS_HIDDEN);\n      }\n    }, {\n      key: \"uncreate\",\n      value: function uncreate() {\n        if (this.ready) {\n          this.unbuild();\n          this.ready = false;\n          this.cropped = false;\n        } else if (this.sizing) {\n          this.sizingImage.onload = null;\n          this.sizing = false;\n          this.sized = false;\n        } else if (this.reloading) {\n          this.xhr.onabort = null;\n          this.xhr.abort();\n        } else if (this.image) {\n          this.stop();\n        }\n      }\n\n      /**\n       * Get the no conflict cropper class.\n       * @returns {Cropper} The cropper class.\n       */\n    }], [{\n      key: \"noConflict\",\n      value: function noConflict() {\n        window.Cropper = AnotherCropper;\n        return Cropper;\n      }\n\n      /**\n       * Change the default options.\n       * @param {Object} options - The new default options.\n       */\n    }, {\n      key: \"setDefaults\",\n      value: function setDefaults(options) {\n        assign(DEFAULTS, isPlainObject(options) && options);\n      }\n    }]);\n  }();\n  assign(Cropper.prototype, render, preview, events, handlers, change, methods);\n\n  return Cropper;\n\n}));\n"],"names":["$4ee2d5169fef8bbb$exports","exports1","createElement","query","ns","ref","parse","chunks","split","className","id","i","length","trim","tag","element","document","createElementNS","setAttribute","html","args","len","arguments","type","Function","prototype","bind","apply","concat","Error","parseArgumentsInternal","getEl","unmount","parent","child","parentEl","childEl","__redom_view","parentNode","doUnmount","removeChild","hooks","__redom_lifecycle","hooksAreEmpty","traverse","__redom_mounted","trigger","parentHooks","hook","key","extend","hookNames","shadowRootAvailable","window","mount","before","replace","wasMounted","oldParent","beforeEl","replaceChild","insertBefore","appendChild","doMount","remount","hooksFound","list","hookName","triggered","nodeType","Node","DOCUMENT_NODE","ShadowRoot","el","eventName","view","hookCount","firstChild","next","nextSibling","setStyle","arg1","arg2","setStyleValue","value","style","xlinkns","setAttrInternal","initial","isSVG","SVGElement","isFunc","setData","setXlink","removeAttribute","setAttributeNS","removeAttributeNS","dataset","text","str","createTextNode","arg","isNode","ensureEl","setChildren","children","current","_current","childEls","Array","i$1","exists","__redom_index","ListPool","View","initData","oldLookup","lookup","oldViews","views","item","List","update","data","context","keySet","newLookup","newViews","__redom_id","pool","ref$1","oldView","Place","visible","_placeholder","_el","_View","_initData","placeholder","Router","Views","route","svg","dispatch","event","CustomEvent","bubbles","detail","dispatchEvent","h","listPool","place","router","s","setAttr","viewFactory","viewKey","$580b9926dc0eed57$exports","factory","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","_objectSpread2","forEach","_toPropertyKey","defineProperty","configurable","writable","obj","getOwnPropertyDescriptors","defineProperties","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","_typeof","iterator","constructor","_defineProperties","target","props","descriptor","_toConsumableArray","arr","_arrayWithoutHoles","isArray","_arrayLikeToArray","_iterableToArray","iter","from","_unsupportedIterableToArray","minLen","n","toString","slice","name","test","_nonIterableSpread","arr2","IS_BROWSER","WINDOW","IS_TOUCH_DEVICE","documentElement","HAS_POINTER_EVENT","NAMESPACE","ACTION_CROP","ACTION_MOVE","ACTION_ZOOM","CLASS_CROP","CLASS_DISABLED","CLASS_HIDDEN","CLASS_HIDE","CLASS_INVISIBLE","CLASS_MODAL","CLASS_MOVE","DATA_ACTION","DATA_PREVIEW","DRAG_MODE_CROP","DRAG_MODE_MOVE","DRAG_MODE_NONE","EVENT_CROP","EVENT_CROP_END","EVENT_CROP_MOVE","EVENT_CROP_START","EVENT_DBLCLICK","EVENT_POINTER_DOWN","EVENT_POINTER_MOVE","EVENT_POINTER_UP","EVENT_READY","EVENT_RESIZE","EVENT_WHEEL","EVENT_ZOOM","MIME_TYPE_JPEG","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","viewMode","dragMode","initialAspectRatio","NaN","aspectRatio","preview","responsive","restore","checkCrossOrigin","checkOrientation","modal","guides","center","highlight","background","autoCrop","autoCropArea","movable","rotatable","scalable","zoomable","zoomOnTouch","zoomOnWheel","wheelZoomRatio","cropBoxMovable","cropBoxResizable","toggleDragModeOnDblclick","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","ready","cropstart","cropmove","cropend","crop","zoom","isNaN","isNumber","isPositiveNumber","Infinity","isUndefined","isObject","hasOwnProperty","isPlainObject","_constructor","error","isFunction","toArray","callback","assign","_len","_key","REGEXP_DECIMALS","normalizeDecimalNumber","times","undefined","Math","round","REGEXP_SUFFIX","styles","property","addClass","elem","classList","add","indexOf","removeClass","remove","toggleClass","added","REGEXP_CAMEL_CASE","toParamCase","toLowerCase","getData","getAttribute","REGEXP_SPACES","onceSupported","supported","once","listener","options","get","set","addEventListener","removeEventListener","removeListener","handler","listeners","addListener","_handler","_element$listeners","_len2","_key2","Event","cancelable","createEvent","initCustomEvent","getOffset","box","getBoundingClientRect","left","pageXOffset","clientLeft","top","pageYOffset","clientTop","location","REGEXP_ORIGINS","isCrossOriginURL","url","parts","match","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","rotate","scaleX","scaleY","translateX","translateY","values","transform","join","WebkitTransform","msTransform","getPointer","_ref2","endOnly","pageX","pageY","end","endX","endY","startX","startY","getAdjustedSizes","_ref4","height","width","isValidWidth","isValidHeight","adjustedWidth","fromCharCode","REGEXP_DATA_URL_HEAD","AnotherCropper","Cropper","protoProps","staticProps","_classCallCheck","instance","Constructor","tagName","cropped","disabled","pointers","reloading","replaced","sized","sizing","init","isImg","originalUrl","src","HTMLCanvasElement","toDataURL","load","_this","imageData","binary","arrayBuffer","uint8","ArrayBuffer","clone","read","Uint8Array","atob","dataURL","charCodeAt","xhr","XMLHttpRequest","onabort","onerror","ontimeout","onprogress","getResponseHeader","abort","onload","response","onloadend","crossOrigin","open","responseType","withCredentials","send","orientation","resetAndGetOrientation","dataView","DataView","getUint8","byteLength","offset","app1Start","exifIDCode","tiffOffset","getStringFromCharCode","start","endianness","getUint16","littleEndian","firstIFDOffset","getUint32","ifdStart","_offset","_length","setUint16","arrayBufferToDataURL","mimeType","subarray","btoa","_parseOrientation","parseOrientation","crossOriginUrl","image","alt","stop","_this2","isIOSWebKit","navigator","userAgent","done","naturalWidth","naturalHeight","initialImageData","build","sizingImage","body","cssText","container","template","innerHTML","cropper","querySelector","canvas","dragBox","cropBox","face","viewBox","initPreview","max","min","getElementsByClassName","render","setDragMode","unbind","resetPreview","unbuild","initContainer","initCanvas","initCropBox","renderCanvas","renderCropBox","minWidth","minHeight","containerData","offsetWidth","offsetHeight","rotated","abs","canvasWidth","canvasHeight","canvasData","limited","limitCanvas","maxWidth","maxHeight","oldLeft","oldTop","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getAdjustedSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","getRotatedSizes","_ref5","degree","arc","PI","sinArc","sin","cosArc","cos","newWidth","newHeight","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","viewBoxImage","previews","ownerDocument","querySelectorAll","img","removeData","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","ratio","getElementsByTagName","onCropStart","cropStart","onWheel","wheel","passive","capture","onDblclick","dblclick","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","ratioX","ratioY","getCanvasData","getCropBoxData","setCanvasData","setCropBoxData","hasClass","contains","delta","preventDefault","wheeling","setTimeout","deltaY","wheelDelta","action","buttons","button","pointerType","ctrlKey","changedTouches","touch","identifier","pointerId","originalEvent","cropping","change","pointers2","maxRatio","right","bottom","renderable","shiftKey","pointer","range","x","y","check","side","move","pointer2","x1","y1","x2","y2","z1","sqrt","z2","p","reset","clear","hasSameSize","uncreate","enable","disable","destroy","offsetX","offsetY","_this$canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","count","_ref3","rotateTo","_scaleX","scale","_scaleY","rounded","getContainerData","getImageData","widthChanged","heightChanged","getCroppedCanvas","_ref6","imageAspectRatio","imageNaturalWidth","imageNaturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","_ref8$imageSmoothingE","_ref8$imageSmoothingQ","_ref8$maxWidth","_ref8$maxHeight","_ref8$minWidth","_ref8$minHeight","maxSizes","minSizes","destMaxSizes","destMinSizes","destWidth","destHeight","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","source","_ref7","_ref8","fillColor","imageSmoothingEnabled","imageSmoothingQuality","getContext","fillStyle","fillRect","save","translate","drawImage","params","map","param","floor","_this$getData","initialX","initialY","initialWidth","initialHeight","_options$imageSmoothi","sourceWidth","sourceHeight","srcX","srcY","setAspectRatio","mode","croppable","$aa459f0fea9822fe$var$uploadInput","getElementById","$aa459f0fea9822fe$var$uploadBtn","$aa459f0fea9822fe$var$croppBtn","$aa459f0fea9822fe$var$downloadBtn","$aa459f0fea9822fe$var$imageWrapper","$aa459f0fea9822fe$var$imageDisplay","$aa459f0fea9822fe$var$croppImage","$aa459f0fea9822fe$var$croppedContainer","$aa459f0fea9822fe$var$downloadLink","$aa459f0fea9822fe$var$imageName","$aa459f0fea9822fe$var$imageType","$aa459f0fea9822fe$var$isUpload","$aa459f0fea9822fe$var$isCropped","$aa459f0fea9822fe$var$cropper","$aa459f0fea9822fe$var$errorMessage","click","reader","FileReader","display","textContent","a","result","__esModule","default","readAsDataURL","files","message","croppedImage","download","href"],"version":3,"file":"index.1971d991.js.map"}